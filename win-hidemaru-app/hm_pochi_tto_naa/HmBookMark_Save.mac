/*
 * HmBookMark ver 1.701
 * Copyright (C) 2016-2020 Akitsugu Komiyama
 * under the MIT License
 * 
 * 入力している文字(0～9)に相当する文字コードをキーとして、情報を保存する
 * 保存する情報は、
 * 
 *  ① 入力しているキーの文字コード
 *  ② カーソルの座標X
 *  ③ カーソルの座標Y
 *  ④ 秀丸のウィンドウハンドルのアドレス
 *  ⑤ 短縮タイプのファイル名(空白等入れないため)
 *  ⑥ 分割モード(分割なし、上下、左右)
 *
 * これらをdll経由で、ファイルへと保存する。
 *
 * また、文章の編集への耐性アップのため、追跡維持として、見えないマーカーを裏利用している
 */

#PCTN_VERSION = 120;

// 中断しない
disablebreak;

#HMNET = loaddll( hidemarudir + @"\hm.NET.dll" );

#push = dllfuncw( #HMNET, "CallMethod", currentmacrodirectory + @"\HmBookMark.dll", "HmBookMark.HmBookMark", "GetkeyCode" );
#r = dllfuncw( #HMNET, "CallMethod", currentmacrodirectory + @"\HmBookMark.dll", "HmBookMark.HmBookMark", "StockLocation", #push );

call PCTN_StockPosByMarker;

enablebreak;

endmacro;




PCTN_StockPosByMarker:

	disabledraw;

	// 何か選択していたら解除
	escape;

	// 一度現在の座標を保存して
	##iCurPosX = column + 1;
	##iCurPosY = lineno;

	// マーカーを消して
	call PCTN_EraseMarkers;

	// 元へと戻す
	movetolineno ##iCurPosX, ##iCurPosY;

	// 右か左どちらか1文字選択
	beginsel;
	right;
	if (!selecting){
		left;
	}
	endsel;

	// 編集しても、維持(追従する)のマーカーを入れる。他者のマーカー情報と被らないようにレイヤー情報を入れておく
	colormarker -1, -1, 11, 0, #push, "HmBookMark";

	// 元へと戻す
	movetolineno ##iCurPosX, ##iCurPosY;

	enabledraw;;
return;


PCTN_EraseMarkers:

	// 現在はここは、whileでぐるぐる回しているが、将来のバージョンでは、一気に削除することが出来るようになる。
	moveto 0, 0;

	while( 1 ){

		escape; // 選択解除

		// 対象の識別子を持たせた次のマーカーを探す
		// 他者のマーカーを消さないように、レイヤー名で絞っておく
		nextcolormarker ( 0x01 | 0x04 | 0x08), #push, "HmBookMark";

		// もうマーカーは存在しない
		if ( !result ) {
			break;
		}

		// 次のカラーマーカー終端まで範囲選択
		beginsel;
		nextcolormarker ( 0x02 | 0x04 | 0x08 ), #push, "HmBookMark";
		endsel;

		// 削除
		deletecolormarker "HmBookMark";
		// 削除に失敗すると、抜けられなくなる可能性を否定できないのでbreakしておく
		if ( result != 1 ) {
			break;
		}

	}

	// 抜ける前に後掃除
	escape; // 選択解除

return;
