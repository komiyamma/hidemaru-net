/* 
 * Copyright (c) 2017-2019 Akitsugu Komiyama
 * under the MIT License
 */

#output_type =  4;   //  4:new 5:insert 6:replace 7:output frame
#line_climit = 240;  //  生成された正規表現がこの文字数を超えるようなら、一度席表現をそこで区切る

// 編集内容を取得
disabledraw;
    call FUNC_SAVE_CURSOR;

    if (selecting) {
        $current_contents = gettext(seltopx,seltopy,selendx,selendy);
    } else {
        gofileend;
        $current_contents = gettext(0, 0, x, y);
    }
    #encode = charset;

    call FUNC_RESTORE_CURSOR;
enabledraw screentopy;

// 選択している文字列を裏秀丸でファイル保存
#hwnd_orig = hidemaruhandle(0);
openfile "/h";
#hwnd_work = hidemaruhandle(0);

// 一時ファイル
$temp_file = getenv("TEMP") + "\\" + "HmWordListRegexCompress.tmp";

setencode #encode;
insert $current_contents;
saveas $temp_file;

setactivehidemaru #hwnd_orig;    // 元のウィンドウに戻る
closehidemaruforced #hwnd_work;    // 作業ウィンドウを閉じる

call FUNC_RUN_EXEC, $temp_file;

endmacro;


FUNC_RUN_EXEC:

    runex "\"" +currentmacrodirectory + "\\" + "HmWordListRegexCompress.exe" + "\"" + " " + "\"" + $temp_file + "\" " + str(#line_climit)
        , 1                  //sync    0:async 1:sync
        , 0, ""              //stdin   0:none 1:auto 2:file 3:(reserve) 4:all 5:select
        , #output_type, ""  //stdout  0:none 1:auto 2:file 3:add file  4:new 5:insert 6:replace 7:output frame
        , #output_type, ""  //stderr  0:none 1:=out 2:file 3:add file  4:new 5:insert 6:replace 7:output frame
        , 0, ""              //folder  0:none 1:current 2:specify 3:(reserve) 4:exe's folder
        , 2                  //show    0:auto 1:show 2:hide
        , 0                  //nodraw  0:draw 1:no draw
        , 0                  //unicode 0:ansi 2:unicode
        ;
    return;


// カーソル位置と範囲選択の状態をグローバル変数 #_cursor_info に保存する。
FUNC_SAVE_CURSOR:
    #_cursor_info[0] = selecting;
    #_cursor_info[1] = rectselecting;
    #_cursor_info[2] = selopenx;
    #_cursor_info[3] = selopeny;
    #_cursor_info[4] = x;
    #_cursor_info[5] = y;
    return;


// #_cursor_info の値から、カーソル位置と範囲選択の状態を復元する。
FUNC_RESTORE_CURSOR:
    ##selecting     = #_cursor_info[0];
    ##rectselecting = #_cursor_info[1];
    ##selopenx      = #_cursor_info[2];
    ##selopeny      = #_cursor_info[3];
    ##x             = #_cursor_info[4];
    ##y             = #_cursor_info[5];

    if (##selecting) {
        escape;
        moveto ##selopenx, ##selopeny;
        if (##rectselecting) {
            beginrect;
        } else {
            beginsel;
        }
        endsel;
    }
    moveto ##x, ##y;
    return;
