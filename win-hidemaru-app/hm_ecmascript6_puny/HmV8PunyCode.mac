/*
 * CC0 1.0 Universal
 */ 

#JS = loaddll( hidemarudir + @"\hmV8.dll" );

if ( !#JS ) {
    message("hmV8関連ファイルが読み込めない");
    endmacro;
}

#_ = dllfuncw( #JS, "DoFile", currentmacrodirectory + @"\HmV8PunyCode.js" );


#_ = dllfuncw( #JS, "DoString", R"ES6(

Main();

function Main() {

	var sel = GetSelectingText();

	if (!sel) {
		OutputError(sel);
        return;
	}

    var mod = GetConvertedPunyCode(sel);
    OutputResult(sel, mod);
}

function GetSelectingText() {
    hm.Macro.Eval( f => { /*
        if (selecting) {
            $sel = gettext(seltopx,seltopy,selendx,selendy, 1);
        }
    */ } );

    return hm.Macro.Var["$sel"];
}

function GetConvertedPunyCode(sel) {

    var ret = sel;

    try {
        // 現在選択対象がすでにPunycodeなら
        if ( sel.indexOf("xn--") != -1 ) {
            // ホスト名相当する部分を国際化ドメインへ
            ret = punycode.toUnicode(sel);
        
        } else {
            // ホスト名相当する部分をPunycodeへ
            ret = punycode.toASCII(sel);
        }

        return ret

    } catch (e) {
        // とりあえずエラーは秀丸デバッグモニター(DBMON)へ
        console.log(e);

	    return ret;
    }
}

function OutputError() {
    hm.Macro.Eval( f => { /*
        message "秀丸エディタ上で変換したい(URL的な)文字列を選択してください。\n(矩形選択は非対応)";
    */ } );
}

function OutputResult(sel, mod) {

    // ECMAScript6→秀丸マクロ空間へと伝達
    hm.Macro.Var['$sel'] = sel;
    hm.Macro.Var['$mod'] = mod;

    // 元の文字列の後ろに(...)という形で付け加える。
    hm.Macro.Eval( f => { /*
        insert $sel + "("+$mod+")";
    */ } );
}

)ES6"
);

//====================================================================


freedll( #JS );

