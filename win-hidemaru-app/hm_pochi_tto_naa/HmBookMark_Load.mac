/*
 * HmBookMark ver 1.701
 * Copyright (C) 2016-2020 Akitsugu Komiyama
 * under the MIT License
 * 
 * 入力している文字(0～9)に相当する文字コードをキーとして、情報を保存する
 * 保存する情報は、
 * 
 *  ① 入力しているキーの文字コード
 *  ② カーソルの座標X
 *  ③ カーソルの座標Y
 *  ④ 秀丸のウィンドウハンドルのアドレス
 *  ⑤ 短縮タイプのファイル名(空白等入れないため)
 *  ⑥ 分割モード(分割なし、上下、左右)
 *
 * これらをdll経由で、ファイルへと保存する。
 *
 * また、文章の編集への耐性アップのため、追跡維持として、見えないマーカーを裏利用している
 */

#PCTN_VERSION = 120;

// 中断しない
disablebreak;

#HMNET = loaddll( hidemarudir + @"\hm.NET.dll" );

#push = dllfuncw( #HMNET, "CallMethod", currentmacrodirectory + @"\HmBookMark.dll", "HmBookMark.HmBookMark", "GetkeyCode" );

#s = dllfuncw( #HMNET, "CallMethod", currentmacrodirectory + @"\HmBookMark.dll", "HmBookMark.HmBookMark", "FindLocation", #push );

// 現在開いている秀丸に存在するウィンドウハンドルとマッチするZオーダーIDを求める
call PCTN_GetValidWindowHandleZOrder(#RTN_hidemaruhandle);
#hWndHidemaruZOrder = ##return;


// 対象のウィンドウハンドルは有効である。対象の番号に対応するファイルは存在する。
if ( #hWndHidemaruZOrder != -1 && existfile($RTN_filename2) ) {

	// 対象のウィンドウハンドルをアクティブ化
	setactivehidemaru #hWndHidemaruZOrder;

	// そのウィンドウハンドルでロードされているものは、キーに割り当てられていたものと同じものか？
	if ( $RTN_filename2 == filename2 ) {
		call PCTN_LoadExistWindowType;
	} else {
		call PCTN_LoadNewWindowType;
	}
}

// 該当のファイルを開いている秀丸はないが、そのファイルが存在するなら新たに開いて処理する
else if (existfile($RTN_filename2) ) {
	call PCTN_LoadNewWindowType;
}

// 対象のウィンドウハンドルは有効である。まだファイルになっていない無題ファイルに割り当てられた番号。
// このウィンドウハンドルには無題⇒別ファイルを読み込んでいる(もしくは無題から実際にファイルとして名前が付いた)可能性はあるが、とりあえずジャンプ
else if ( #hWndHidemaruZOrder != -1 && #s && $RTN_filename2 == "") {

	// 対象のウィンドウハンドルをアクティブ化
	setactivehidemaru #hWndHidemaruZOrder;

	call PCTN_LoadExistWindowType;
}


endmacro;

PCTN_GetValidWindowHandleZOrder:

	##hWnd = ##1;

	// 無効なウィンドウか、状況保存時にはあったものの、現在開いている全ての秀丸ではすでに存在していないウィンドウ
	if ( ##hWnd == 0 ) {
		return -1; // hidemaruorder関数の無効状態と値を合わせておく
	}

	// ウィンドウハンドル⇒オーダーIDを求める
	##hWndHidemaruZOrder = hidemaruorder( ##hWnd );

return ##hWndHidemaruZOrder;


PCTN_LoadExistWindowType:

	// 分割については、開いているものは復元
	if (#RTN_splitmode != 0 ) {
		split #RTN_splitmode, 1;
	} 

	// カーソル移動
	escape;
	moveto #RTN_x, #RTN_y;

	call PCTN_ModifyPosByMarker;

	execmacro currentmacrodirectory + "\\HmBookMark_Save.mac";

return;


PCTN_LoadNewWindowType:

	// 新たに秀丸で開く
    openfile $RTN_filename2;

	// 分割については、開いているものは復元
	if (#RTN_splitmode != 0 ) {
		split #RTN_splitmode, 1;
	} 

	// カーソル移動
	escape;
	moveto #RTN_x, #RTN_y;

	execmacro currentmacrodirectory + "\\HmBookMark_Save.mac";

return;


// XとYを保存するだけでは、文章の編集に対して座標が付いていかない。
// 裏で秀丸のマーカーを利用することで、文章をある程度編集しても、復元座標がより高い妥当性を持つようにする
PCTN_ModifyPosByMarker:

	// 一旦現在の座標を保存
	##iCurPosX = x;
	##iCurPosY = y;

	disabledraw;
	
	// 先頭に移動して、保存してあった識別子のマーカーに対応するところにジャンプ
	moveto 0, 0;
	nextcolormarker (0x01 | 0x04 | 0x08), #push, "HmBookMark";

	// 対応するものがもしもなかったのであれば、
	if (result != 1){
		// 保存してあった座標へと復元
		moveto ##iCurPosX, ##iCurPosY;
	} else {

		execmacro currentmacrodirectory + "\\HmBookMark_Save.mac";
	}

	enabledraw;
return;

