<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CefSharp</name>
    </assembly>
    <members>
        <member name="T:CefSharp.AsyncExtensions">
            <summary>
            Async extensions for different interfaces
            </summary>
        </member>
        <member name="M:CefSharp.AsyncExtensions.DeleteCookiesAsync(CefSharp.ICookieManager,System.String,System.String)">
            <summary>
            Deletes all cookies that matches all the provided parameters asynchronously.
            If both <paramref name="url"/> and <paramref name="name"/> are empty, all cookies will be deleted.
            </summary>
            <param name="cookieManager">cookie manager</param>
            <param name="url">The cookie URL. If an empty string is provided, any URL will be matched.</param>
            <param name="name">The name of the cookie. If an empty string is provided, any URL will be matched.</param>
            <returns>Returns -1 if a non-empty invalid URL is specified, or if cookies cannot be accessed;
            otherwise, a task that represents the delete operation. The value of the TResult will be the number of cookies that were deleted or -1 if unknown.</returns>
        </member>
        <member name="M:CefSharp.AsyncExtensions.SetCookieAsync(CefSharp.ICookieManager,System.String,CefSharp.Cookie)">
            <summary>
            Sets a cookie given a valid URL and explicit user-provided cookie attributes.
            This function expects each attribute to be well-formed. It will check for disallowed
            characters (e.g. the ';' character is disallowed within the cookie value attribute) and will return false without setting
            </summary>
            <param name="cookieManager">cookie manager</param>
            <param name="url">The cookie URL. If an empty string is provided, any URL will be matched.</param>
            <param name="cookie">the cookie to be set</param>
            <returns>returns false if the cookie cannot be set (e.g. if illegal charecters such as ';' are used);
            otherwise task that represents the set operation. The value of the TResult parameter contains a bool to indicate success.</returns>
        </member>
        <member name="M:CefSharp.AsyncExtensions.VisitAllCookiesAsync(CefSharp.ICookieManager)">
            <summary>
            Visits all cookies. The returned cookies are sorted by longest path, then by earliest creation date.
            </summary>
            <param name="cookieManager">cookie manager</param>
            <returns>A task that represents the VisitAllCookies operation. The value of the TResult parameter contains a List of cookies
            or null if cookies cannot be accessed.</returns>
        </member>
        <member name="M:CefSharp.AsyncExtensions.VisitUrlCookiesAsync(CefSharp.ICookieManager,System.String,System.Boolean)">
            <summary>
            Visits a subset of the cookies. The results are filtered by the given url scheme, host, domain and path. 
            If <paramref name="includeHttpOnly"/> is true, HTTP-only cookies will also be included in the results. The returned cookies 
            are sorted by longest path, then by earliest creation date.
            </summary>
            <param name="cookieManager">cookie manager</param>
            <param name="url">The URL to use for filtering a subset of the cookies available.</param>
            <param name="includeHttpOnly">A flag that determines whether HTTP-only cookies will be shown in results.</param>
            <returns>A task that represents the VisitUrlCookies operation. The value of the TResult parameter contains a List of cookies.
            or null if cookies cannot be accessed.</returns>
        </member>
        <member name="M:CefSharp.AsyncExtensions.FlushStoreAsync(CefSharp.ICookieManager)">
            <summary>
            Flush the backing store (if any) to disk.
            </summary>
            <param name="cookieManager">cookieManager instance</param>
            <returns>A task that represents the FlushStore operation. Result indicates if the flush completed successfully.
            Will return false if the cookikes cannot be accessed.</returns>
        </member>
        <member name="M:CefSharp.AsyncExtensions.GetNavigationEntriesAsync(CefSharp.IBrowserHost,System.Boolean)">
            <summary>
            Retrieve a snapshot of current navigation entries
            </summary>
            <param name="browserHost">browserHost</param>
            <param name="currentOnly">If true the List will only contain the current navigation entry.
            If false the List will include all navigation entries will be included. Default is false</param>
        </member>
        <member name="T:CefSharp.BindingOptions">
            <summary>
            Javascript binding options
            </summary>
        </member>
        <member name="P:CefSharp.BindingOptions.DefaultBinder">
            <summary>
            Set of options with the default binding
            </summary>
        </member>
        <member name="P:CefSharp.BindingOptions.Binder">
            <summary>
            Model binder used for passing complex classes as params to methods
            </summary>
        </member>
        <member name="P:CefSharp.BindingOptions.MethodInterceptor">
            <summary>
            Interceptor used for intercepting calls to the target object methods. For instance, can be used 
            for logging calls (from js) to .net methods.
            </summary>
        </member>
        <member name="T:CefSharp.IAuthCallback">
            <summary>
            Callback interface used for asynchronous continuation of authentication requests.
            </summary>
        </member>
        <member name="M:CefSharp.IAuthCallback.Continue(System.String,System.String)">
            <summary>
            Continue the authentication request.
            </summary>
            <param name="username">requested username</param>
            <param name="password">requested password</param>
        </member>
        <member name="M:CefSharp.IAuthCallback.Cancel">
            <summary>
            Cancel the authentication request.
            </summary>
        </member>
        <member name="P:CefSharp.IAuthCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.IBeforeDownloadCallback">
            <summary>
            Callback interface used to asynchronously continue a download.
            </summary>
        </member>
        <member name="M:CefSharp.IBeforeDownloadCallback.Continue(System.String,System.Boolean)">
            <summary>
            Call to continue the download.
            </summary>
            <param name="downloadPath">full file path for the download including the file name
            or leave blank to use the suggested name and the default temp directory</param>
            <param name="showDialog">Set to true if you do wish to show the default "Save As" dialog</param>
        </member>
        <member name="P:CefSharp.IBeforeDownloadCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.ICallback">
            <summary>
            Generic callback interface used for asynchronous continuation.
            </summary>
        </member>
        <member name="M:CefSharp.ICallback.Continue">
            <summary>
            Continue processing.
            </summary>
        </member>
        <member name="M:CefSharp.ICallback.Cancel">
            <summary>
            Cancel processing.
            </summary>
        </member>
        <member name="P:CefSharp.ICallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.ICompletionCallback">
            <summary>
            Generic callback interface used for asynchronous completion. 
            </summary>
        </member>
        <member name="M:CefSharp.ICompletionCallback.OnComplete">
            <summary>
            Method that will be called once the task is complete. 
            </summary>
        </member>
        <member name="P:CefSharp.ICompletionCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.IDeleteCookiesCallback">
            <summary>
            Interface to implement to be notified of asynchronous completion via ICookieManager.DeleteCookies().
            It will be executed asnychronously on the CEF IO thread after the cookie has been deleted
            </summary>
        </member>
        <member name="M:CefSharp.IDeleteCookiesCallback.OnComplete(System.Int32)">
            <summary>
            Method that will be called upon completion. 
            </summary>
            <param name="numDeleted">will be the number of cookies that were deleted or -1 if unknown.</param>
        </member>
        <member name="P:CefSharp.IDeleteCookiesCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.Callback.IDevToolsMessageObserver">
            <summary>
            Callback interface for <see cref="M:CefSharp.IBrowserHost.AddDevToolsMessageObserver(CefSharp.Callback.IDevToolsMessageObserver)"/>.
            The methods of this class will be called on the CEF UI thread.
            </summary>
        </member>
        <member name="M:CefSharp.Callback.IDevToolsMessageObserver.OnDevToolsMessage(CefSharp.IBrowser,System.IO.Stream)">
            <summary>
            Method that will be called on receipt of a DevTools protocol message.
            Method result dictionaries include an "id" (int) value that identifies the
            orginating method call sent from IBrowserHost.SendDevToolsMessage, and
            optionally either a "result" (dictionary) or "error" (dictionary) value.
            The "error" dictionary will contain "code" (int) and "message" (string)
            values. Event dictionaries include a "method" (string) value and optionally
            a "params" (dictionary) value. See the DevTools protocol documentation at
            https://chromedevtools.github.io/devtools-protocol/ for details of
            supported method calls and the expected "result" or "params" dictionary
            contents. JSON dictionaries can be parsed using the CefParseJSON function
            if desired, however be aware of performance considerations when parsing
            large messages (some of which may exceed 1MB in size).
            </summary>
            <param name="browser">is the originating browser instance</param>
            <param name="message">is a UTF8-encoded JSON dictionary representing either a method result or an event. 
            is only valid for the scope of this callback and should be copied if necessary
            </param>
            <returns>Return true if the message was handled or false if the message
            should be further processed and passed to the OnDevToolsMethodResult or
            OnDevToolsEvent methods as appropriate.</returns>
        </member>
        <member name="M:CefSharp.Callback.IDevToolsMessageObserver.OnDevToolsMethodResult(CefSharp.IBrowser,System.Int32,System.Boolean,System.IO.Stream)">
            <summary>
            Method that will be called after attempted execution of a DevTools protocol
            </summary>
            <param name="browser">is the originating browser instance</param>
            <param name="messageId">is the id value that identifies the originating method call message</param>
            <param name="success">If the method succeeded <paramref name="success"/> will be true and <paramref name="result"/> will be the
            UTF8-encoded JSON "result" dictionary value (which may be empty).
            If the method failed <paramref name="success"/> will be false and <paramref name="result"/> will be the UTF8-encoded
            JSON "error" dictionary value.
            </param>
            <param name="result">The stream is only valid for the scope of this
            callback and should be copied if necessary. See the OnDevToolsMessage
            documentation for additional details on  contents</param>
        </member>
        <member name="M:CefSharp.Callback.IDevToolsMessageObserver.OnDevToolsEvent(CefSharp.IBrowser,System.String,System.IO.Stream)">
            <summary>
            Method that will be called on receipt of a DevTools protocol event.
            </summary>
            <param name="browser">is the originating browser instance</param>
            <param name="method">is the method value</param>
            <param name="parameters">is the UTF8-encoded JSON "params" dictionary value (which
            may be empty). This stream is only valid for the scope of this callback and
            should be copied if necessary. See the OnDevToolsMessage documentation for
            additional details on contents.
            </param>
        </member>
        <member name="M:CefSharp.Callback.IDevToolsMessageObserver.OnDevToolsAgentAttached(CefSharp.IBrowser)">
            <summary>
            Method that will be called when the DevTools agent has attached.
            This will generally occur in response to the first message sent while the agent is detached.
            </summary>
            <param name="browser">is the originating browser instance</param>
        </member>
        <member name="M:CefSharp.Callback.IDevToolsMessageObserver.OnDevToolsAgentDetached(CefSharp.IBrowser)">
            <summary>
            Method that will be called when the DevTools agent has detached.
            Any method results that were pending before the agent became detached will not be delivered, and any active
            event subscriptions will be canceled.
            </summary>
            <param name="browser">is the originating browser instance</param>
        </member>
        <member name="T:CefSharp.Callback.IResourceReadCallback">
            <summary>
            Callback for asynchronous continuation of <see cref="M:CefSharp.IResourceHandler.Read(System.IO.Stream,System.Int32@,CefSharp.Callback.IResourceReadCallback)"/>.
            </summary>
        </member>
        <member name="M:CefSharp.Callback.IResourceReadCallback.Continue(System.Int32)">
            <summary>
            Callback for asynchronous continuation of <see cref="M:CefSharp.IResourceHandler.Read(System.IO.Stream,System.Int32@,CefSharp.Callback.IResourceReadCallback)"/>. If bytesRead == 0
            the response will be considered complete. 
            </summary>
            <param name="bytesRead">
            If bytesRead == 0 the response will be considered complete.
            If bytesRead &gt; 0 then <see cref="M:CefSharp.IResourceHandler.Read(System.IO.Stream,System.Int32@,CefSharp.Callback.IResourceReadCallback)"/> will be called again until the request is complete (based on either the
            result or the expected content length). If bytesRead &lt; 0 then the
            request will fail and the bytesRead value will be treated as the error
            code.
            </param>
        </member>
        <member name="P:CefSharp.Callback.IResourceReadCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.Callback.IResourceSkipCallback">
            <summary>
            Callback for asynchronous continuation of <see cref="M:CefSharp.IResourceHandler.Skip(System.Int64,System.Int64@,CefSharp.Callback.IResourceSkipCallback)"/>.
            </summary>
        </member>
        <member name="M:CefSharp.Callback.IResourceSkipCallback.Continue(System.Int64)">
            <summary>
            Callback for asynchronous continuation of Skip(). 
            </summary>
            <param name="bytesSkipped">If bytesSkipped &gt; 0 then either Skip() will be called
            again until the requested number of bytes have been skipped or the request will proceed.
            If bytesSkipped &lt;= the request will fail with ERR_REQUEST_RANGE_NOT_SATISFIABLE.</param>
        </member>
        <member name="P:CefSharp.Callback.IResourceSkipCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.Callback.IRunFileDialogCallback">
            <summary>
            Callback interface for IBrowserHost.RunFileDialog.
            The methods of this class will be called on the CEF UI thread.
            </summary>
        </member>
        <member name="M:CefSharp.Callback.IRunFileDialogCallback.OnFileDialogDismissed(System.Int32,System.Collections.Generic.IList{System.String})">
            <summary>
            Called asynchronously after the file dialog is dismissed.
            </summary>
            <param name="selectedAcceptFilter">is the 0-based index of the value selected from the accept filters array passed to IBrowserHost.RunFileDialog</param>
            <param name="filePaths">will be a single value or a list of values depending on the dialog mode. If the selection was cancelled filePaths will be empty</param>
        </member>
        <member name="T:CefSharp.Callback.NoOpCompletionCallback">
            <summary>
            Provides a callback implementation of <see cref="T:CefSharp.ICompletionCallback"/>
            that does nothing with complete.
            Added to workaround a CEF bug as per https://github.com/cefsharp/CefSharp/issues/2957#issuecomment-555285400
            </summary>
        </member>
        <member name="T:CefSharp.IDownloadItemCallback">
            <summary>
            Callback interface used to asynchronously cancel a download.
            </summary>
        </member>
        <member name="M:CefSharp.IDownloadItemCallback.Cancel">
            <summary>
            Call to cancel the download.
            </summary>
        </member>
        <member name="M:CefSharp.IDownloadItemCallback.Pause">
            <summary>
            Call to pause the download.
            </summary>
        </member>
        <member name="M:CefSharp.IDownloadItemCallback.Resume">
            <summary>
            Call to resume the download.
            </summary>
        </member>
        <member name="P:CefSharp.IDownloadItemCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.IFileDialogCallback">
            <summary>
            Callback interface for asynchronous continuation of file dialog requests.
            </summary>
        </member>
        <member name="M:CefSharp.IFileDialogCallback.Continue(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            Continue the file selection.
            </summary>
            <param name="selectedAcceptFilter">should be the 0-based index of the value selected from the accept filters
            array passed to <see cref="M:CefSharp.IDialogHandler.OnFileDialog(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefFileDialogMode,CefSharp.CefFileDialogFlags,System.String,System.String,System.Collections.Generic.List{System.String},System.Int32,CefSharp.IFileDialogCallback)"/></param>
            <param name="filePaths">should be a single value or a list of values depending on the dialog mode.
            An empty value is treated the same as calling Cancel().</param>
        </member>
        <member name="M:CefSharp.IFileDialogCallback.Cancel">
            <summary>
            Cancel the file selection.
            </summary>
        </member>
        <member name="P:CefSharp.IFileDialogCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.IGetExtensionResourceCallback">
            <summary>
            Callback interface used for asynchronous continuation of <see cref="M:CefSharp.IExtensionHandler.GetExtensionResource(CefSharp.IExtension,CefSharp.IBrowser,System.String,CefSharp.IGetExtensionResourceCallback)"/>.
            </summary>
        </member>
        <member name="M:CefSharp.IGetExtensionResourceCallback.Continue(System.IO.Stream)">
            <summary>
            Continue the request. Read the resource contents from stream.
            </summary>
            <param name="stream">stream to be used as response.</param>
        </member>
        <member name="M:CefSharp.IGetExtensionResourceCallback.Continue(System.Byte[])">
            <summary>
            Continue the request
            </summary>
            <param name="data">data to be used as response</param>
        </member>
        <member name="M:CefSharp.IGetExtensionResourceCallback.Cancel">
            <summary>
            Cancel the request.
            </summary>
        </member>
        <member name="T:CefSharp.IJavascriptCallback">
            <summary>
            Javascript callback interface
            </summary>
        </member>
        <member name="P:CefSharp.IJavascriptCallback.Id">
            <summary>
            Callback Id
            </summary>
        </member>
        <member name="M:CefSharp.IJavascriptCallback.ExecuteAsync(System.Object[])">
            <summary>
            Execute the javascript callback
            </summary>
            <param name="parms">param array of objects</param>
            <returns>JavascriptResponse</returns>
        </member>
        <member name="M:CefSharp.IJavascriptCallback.ExecuteWithTimeoutAsync(System.Nullable{System.TimeSpan},System.Object[])">
            <summary>
            Execute the javascript callback
            </summary>
            <param name="timeout">timeout</param>
            <param name="parms">param array of objects</param>
            <returns>JavascriptResponse</returns>
        </member>
        <member name="P:CefSharp.IJavascriptCallback.CanExecute">
            <summary>
            Check to see if the underlying resource are still available to execute the callback
            </summary>
        </member>
        <member name="P:CefSharp.IJavascriptCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.IJsDialogCallback">
            <summary>
            Callback interface used for asynchronous continuation of JavaScript dialog requests.
            </summary>
        </member>
        <member name="M:CefSharp.IJsDialogCallback.Continue(System.Boolean,System.String)">
            <summary>
            Continue the Javascript dialog request.
            </summary>
            <param name="success">Set to true if the OK button was pressed.</param>
            <param name="userInput">value should be specified for prompt dialogs.</param>
        </member>
        <member name="M:CefSharp.IJsDialogCallback.Continue(System.Boolean)">
            <summary>
            Continue the Javascript dialog request.
            </summary>
            <param name="success">Set to true if the OK button was pressed.</param>
        </member>
        <member name="P:CefSharp.IJsDialogCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.IPrintToPdfCallback">
            <summary>
            Callback interface for <see cref="M:CefSharp.IBrowserHost.PrintToPdf(System.String,CefSharp.PdfPrintSettings,CefSharp.IPrintToPdfCallback)"/>. The methods of this interface
            will be called on the CEF UI thread.
            </summary>
        </member>
        <member name="M:CefSharp.IPrintToPdfCallback.OnPdfPrintFinished(System.String,System.Boolean)">
            <summary>
            Method that will be executed when the PDF printing has completed.
            </summary>
            <param name="path">The output path.</param>
            <param name="ok">Will be true if the printing completed
            successfully or false otherwise.</param>
        </member>
        <member name="P:CefSharp.IPrintToPdfCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.IRegisterCdmCallback">
            <summary>
            Content Decryption Module (CDM) registration callback used for asynchronous completion.
            </summary>
        </member>
        <member name="M:CefSharp.IRegisterCdmCallback.OnRegistrationComplete(CefSharp.CdmRegistration)">
            <summary>
            Method that will be called once CDM registration is complete
            </summary>
            <param name="registration">The result of the CDM registration process</param>
        </member>
        <member name="P:CefSharp.IRegisterCdmCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.IRequestCallback">
            <summary>
            Callback interface used for asynchronous continuation of url requests.
            </summary>
        </member>
        <member name="M:CefSharp.IRequestCallback.Continue(System.Boolean)">
            <summary>
            Continue the url request. 
            </summary>
            <param name="allow">If is true the request will be continued, otherwise, the request will be canceled.</param>
        </member>
        <member name="M:CefSharp.IRequestCallback.Cancel">
            <summary>
            Cancel the url request.
            </summary>
        </member>
        <member name="P:CefSharp.IRequestCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.IResolveCallback">
            <summary>
            Callback interface for <see cref="M:CefSharp.IRequestContext.ResolveHostAsync(System.Uri)"/>
            </summary>
        </member>
        <member name="M:CefSharp.IResolveCallback.OnResolveCompleted(CefSharp.CefErrorCode,System.Collections.Generic.IList{System.String})">
            <summary>
            Called after the ResolveHost request has completed.
            </summary>
            <param name="result">The result code</param>
            <param name="resolvedIpAddresses">will be the list of resolved IP addresses or
            empty if the resolution failed.</param>
        </member>
        <member name="P:CefSharp.IResolveCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.IRunContextMenuCallback">
            <summary>
            Callback interface used for continuation of custom context menu display.
            </summary>
        </member>
        <member name="M:CefSharp.IRunContextMenuCallback.Continue(CefSharp.CefMenuCommand,CefSharp.CefEventFlags)">
            <summary>
            Complete context menu display by selecting the specified commandId and eventFlags;
            </summary>
            <param name="commandId">the command Id</param>
            <param name="eventFlags">the event flags</param>
        </member>
        <member name="M:CefSharp.IRunContextMenuCallback.Cancel">
            <summary>
            Cancel context menu display.
            </summary>
        </member>
        <member name="P:CefSharp.IRunContextMenuCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.ISelectClientCertificateCallback">
            <summary>
            Callback interface used to select a client certificate for authentication.
            </summary>
        </member>
        <member name="M:CefSharp.ISelectClientCertificateCallback.Select(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Callback interface used to select a client certificate for authentication.
            <see langword="null"/> value means that no client certificate should be used.
            </summary>
            <param name="selectedCert">selected certificate</param>
        </member>
        <member name="P:CefSharp.ISelectClientCertificateCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.ISetCookieCallback">
            <summary>
            Interface to implement to be notified of asynchronous completion via ICookieManager.SetCookie().
            It will be executed asnychronously on the CEF IO thread after the cookie has been set
            </summary>
        </member>
        <member name="M:CefSharp.ISetCookieCallback.OnComplete(System.Boolean)">
            <summary>
            Method that will be called upon completion. 
            </summary>
            <param name="success">success will be true if the cookie was set successfully.</param>
        </member>
        <member name="P:CefSharp.ISetCookieCallback.IsDisposed">
            <summary>
            Gets a value indicating whether the callback has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.TaskDeleteCookiesCallback">
            <summary>
            Provides a callback implementation of <see cref="T:CefSharp.IDeleteCookiesCallback"/>.
            </summary>
        </member>
        <member name="F:CefSharp.TaskDeleteCookiesCallback.InvalidNoOfCookiesDeleted">
            <summary>
            Invalid Number of Cookies
            </summary>
        </member>
        <member name="M:CefSharp.TaskDeleteCookiesCallback.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CefSharp.TaskDeleteCookiesCallback.Task">
            <summary>
            Task used to await this callback
            </summary>
        </member>
        <member name="T:CefSharp.TaskSetCookieCallback">
            <summary>
            Provides a callback implementation of <see cref="T:CefSharp.ISetCookieCallback"/>.
            </summary>
        </member>
        <member name="M:CefSharp.TaskSetCookieCallback.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CefSharp.TaskSetCookieCallback.Task">
            <summary>
            Task used to await this callback
            </summary>
        </member>
        <member name="T:CefSharp.TaskRegisterCdmCallback">
            <summary>
            Provides a callback implementation of <see cref="T:CefSharp.IRegisterCdmCallback"/> for use with asynchronous Widevine CDM registration.
            </summary>
        </member>
        <member name="M:CefSharp.TaskRegisterCdmCallback.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CefSharp.TaskRegisterCdmCallback.Task">
            <summary>
            Task used to await this callback
            </summary>
        </member>
        <member name="T:CefSharp.TaskCompletionCallback">
            <summary>
            Provides a callback implementation of <see cref="T:CefSharp.ICompletionCallback"/>.
            </summary>
        </member>
        <member name="M:CefSharp.TaskCompletionCallback.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CefSharp.TaskCompletionCallback.Task">
            <summary>
            Task used to await this callback
            </summary>
        </member>
        <member name="T:CefSharp.TaskPrintToPdfCallback">
            <summary>
            Provides a callback implementation of <see cref="T:CefSharp.IPrintToPdfCallback"/>.
            </summary>
        </member>
        <member name="P:CefSharp.TaskPrintToPdfCallback.Task">
            <summary>
            Task used to await this callback
            </summary>
        </member>
        <member name="T:CefSharp.TaskResolveCallback">
            <summary>
            Provides a callback implementation of <see cref="T:CefSharp.IResolveCallback"/>.
            </summary>
        </member>
        <member name="M:CefSharp.TaskResolveCallback.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CefSharp.TaskResolveCallback.Task">
            <summary>
            Task used to await this callback
            </summary>
        </member>
        <member name="T:CefSharp.CdmRegistration">
            <summary>
            Represents the response to an attempt to register the Widevine Content Decryption Module (CDM)
            </summary>
        </member>
        <member name="P:CefSharp.CdmRegistration.ErrorCode">
            <summary>
            If CDM registration succeeded then value will be <see cref="F:CefSharp.CdmRegistrationErrorCode.None"/>, for other values see the enumeration <see cref="T:CefSharp.CdmRegistrationErrorCode" />.
            </summary>
        </member>
        <member name="P:CefSharp.CdmRegistration.ErrorMessage">
            <summary>
            Contains an error message containing additional information if <see cref="P:CefSharp.CdmRegistration.ErrorCode"/> is not <see cref="F:CefSharp.CdmRegistrationErrorCode.None"/>.
            </summary>
        </member>
        <member name="M:CefSharp.CdmRegistration.#ctor(CefSharp.CdmRegistrationErrorCode,System.String)">
            <summary>
            CdmRegistration
            </summary>
            <param name="errorCode">error code</param>
            <param name="errorMessage">error message</param>
        </member>
        <member name="T:CefSharp.DefaultApp">
            <summary>
            Default implementation of <see cref="T:CefSharp.IApp"/> which represents the CefApp class.
            </summary>
            <seealso cref="T:CefSharp.IApp"/>
        </member>
        <member name="P:CefSharp.DefaultApp.BrowserProcessHandler">
            <summary>
            Return the handler for functionality specific to the browser process. This method is called on multiple threads.
            </summary>
            <value>
            The browser process handler.
            </value>
        </member>
        <member name="P:CefSharp.DefaultApp.Schemes">
            <summary>
            Gets or sets the schemes.
            </summary>
            <value>
            The schemes.
            </value>
        </member>
        <member name="M:CefSharp.DefaultApp.#ctor(CefSharp.IBrowserProcessHandler,System.Collections.Generic.IEnumerable{CefSharp.CefCustomScheme})">
            <summary>
            Constructor.
            </summary>
            <param name="browserProcessHandler">The browser process handler.</param>
            <param name="schemes">The schemes.</param>
        </member>
        <member name="M:CefSharp.DefaultApp.CefSharp#IApp#OnRegisterCustomSchemes(CefSharp.ISchemeRegistrar)">
            <summary>
            Provides an opportunity to register custom schemes. Do not keep a reference to the <paramref name="registrar"/> object. This
            method is called on the main thread for each process and the registered schemes should be the same across all processes.
            
            </summary>
            <param name="registrar">scheme registra.</param>
        </member>
        <member name="M:CefSharp.DefaultApp.OnRegisterCustomSchemes(CefSharp.ISchemeRegistrar)">
            <summary>
            Provides an opportunity to register custom schemes. Do not keep a reference to the <paramref name="registrar"/> object. This
            method is called on the main thread for each process and the registered schemes should be the same across all processes.
            
            </summary>
            <param name="registrar">scheme registra.</param>
        </member>
        <member name="T:CefSharp.DevToolsExtensions">
            <summary>
            Extensions for accessing DevTools through <see cref="T:CefSharp.IBrowserHost"/>
            </summary>
        </member>
        <member name="M:CefSharp.DevToolsExtensions.ExecuteDevToolsMethod(CefSharp.IBrowserHost,System.Int32,System.String,CefSharp.Web.JsonString)">
            <summary>
            Execute a method call over the DevTools protocol. This is a more structured
            version of SendDevToolsMessage.
            See the DevTools protocol documentation at https://chromedevtools.github.io/devtools-protocol/ for details
            of supported methods and the expected <paramref name="paramsAsJson"/> dictionary contents.
            See the SendDevToolsMessage documentation for additional usage information.
            </summary>
            <param name="messageId">is an incremental number that uniquely identifies the message (pass 0 to have the next number assigned
            automatically based on previous values)</param>
            <param name="method">is the method name</param>
            <param name="parameters">are the method parameters represented as a <see cref="T:CefSharp.Web.JsonString"/>,
            which may be empty.</param>
            <returns>return the assigned message Id if called on the CEF UI thread and the message was
            successfully submitted for validation, otherwise 0</returns>
        </member>
        <member name="M:CefSharp.DevToolsExtensions.ExecuteDevToolsMethodAsync(CefSharp.IBrowser,System.Int32,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Execute a method call over the DevTools protocol. This is a more structured
            version of SendDevToolsMessage. <see cref="M:CefSharp.DevToolsExtensions.ExecuteDevToolsMethod(CefSharp.IBrowserHost,System.Int32,System.String,CefSharp.Web.JsonString)"/> can only be called on the
            CEF UI Thread, this method can be called on any thread.
            See the DevTools protocol documentation at https://chromedevtools.github.io/devtools-protocol/ for details
            of supported methods and the expected <paramref name="parameters"/> dictionary contents.
            See the SendDevToolsMessage documentation for additional usage information.
            </summary>
            <param name="browser">the browser instance</param>
            <param name="messageId">is an incremental number that uniquely identifies the message (pass 0 to have the next number assigned
            automatically based on previous values)</param>
            <param name="method">is the method name</param>
            <param name="parameters">are the method parameters represented as a dictionary,
            which may be empty.</param>
            <returns>return a Task that can be awaited to obtain the assigned message Id. If the message was
            unsuccessfully submitted for validation, this value will be 0.</returns>
        </member>
        <member name="M:CefSharp.DevToolsExtensions.ExecuteDevToolsMethodAsync(CefSharp.IWebBrowser,System.Int32,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Execute a method call over the DevTools protocol. This is a more structured
            version of SendDevToolsMessage. <see cref="M:CefSharp.DevToolsExtensions.ExecuteDevToolsMethod(CefSharp.IBrowserHost,System.Int32,System.String,CefSharp.Web.JsonString)"/> can only be called on the
            CEF UI Thread, this method can be called on any thread.
            See the DevTools protocol documentation at https://chromedevtools.github.io/devtools-protocol/ for details
            of supported methods and the expected <paramref name="parameters"/> dictionary contents.
            See the SendDevToolsMessage documentation for additional usage information.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser instance</param>
            <param name="messageId">is an incremental number that uniquely identifies the message (pass 0 to have the next number assigned
            automatically based on previous values)</param>
            <param name="method">is the method name</param>
            <param name="parameters">are the method parameters represented as a dictionary,
            which may be empty.</param>
            <returns>return a Task that can be awaited to obtain the assigned message Id. If the message was
            unsuccessfully submitted for validation, this value will be 0.</returns>
        </member>
        <member name="M:CefSharp.DevToolsExtensions.GetDevToolsClient(CefSharp.IWebBrowser)">
            <summary>
            Gets a new Instance of the DevTools client for the chromiumWebBrowser
            instance.
            </summary>
            <param name="chromiumWebBrowser">the chromiumWebBrowser instance</param>
            <returns>DevToolsClient</returns>
        </member>
        <member name="M:CefSharp.DevToolsExtensions.GetDevToolsClient(CefSharp.IBrowser)">
            <summary>
            Gets a new Instance of the DevTools client 
            </summary>
            <param name="browser">the IBrowser instance</param>
            <returns>DevToolsClient</returns>
        </member>
        <member name="T:CefSharp.DevTools.DevToolsClient">
            <summary>
            DevTool Client 
            </summary>
            <summary>
            Generated DevToolsClient methods
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DevToolsClient.DevToolsEvent">
            <summary>
            DevToolsEvent
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DevToolsClient.CaptureSyncContext">
            <summary>
            Capture the current <see cref="T:System.Threading.SynchronizationContext"/> so
            continuation executes on the original calling thread. If
            <see cref="P:System.Threading.SynchronizationContext.Current"/> is null for
            <see cref="M:CefSharp.DevTools.DevToolsClient.ExecuteDevToolsMethodAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})"/>
            then the continuation will be run on the CEF UI Thread (by default
            this is not the same as the WPF/WinForms UI Thread).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DevToolsClient.SyncContext">
            <summary>
            When not null provided <see cref="T:System.Threading.SynchronizationContext"/>
            will be used to run the contination. Defaults to null
            Setting this property will change <see cref="P:CefSharp.DevTools.DevToolsClient.CaptureSyncContext"/>
            to false.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.DevToolsClient.#ctor(CefSharp.IBrowser)">
            <summary>
            DevToolsClient
            </summary>
            <param name="browser">Browser associated with this DevTools client</param>
        </member>
        <member name="M:CefSharp.DevTools.DevToolsClient.SetDevToolsObserverRegistration(CefSharp.IRegistration)">
            <summary>
            Store a reference to the IRegistration that's returned when
            you register an observer.
            </summary>
            <param name="devToolsRegistration">registration</param>
        </member>
        <member name="M:CefSharp.DevTools.DevToolsClient.ExecuteDevToolsMethodAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Execute a method call over the DevTools protocol. This method can be called on any thread.
            See the DevTools protocol documentation at https://chromedevtools.github.io/devtools-protocol/ for details
            of supported methods and the expected <paramref name="parameters"/> dictionary contents.
            </summary>
            <param name="method">is the method name</param>
            <param name="parameters">are the method parameters represented as a dictionary,
            which may be empty.</param>
            <returns>return a Task that can be awaited to obtain the method result</returns>
        </member>
        <member name="T:CefSharp.DevTools.Accessibility.AXValueType">
            <summary>
            Enum of possible property types.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.Boolean">
            <summary>
            boolean
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.Tristate">
            <summary>
            tristate
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.BooleanOrUndefined">
            <summary>
            booleanOrUndefined
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.Idref">
            <summary>
            idref
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.IdrefList">
            <summary>
            idrefList
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.Integer">
            <summary>
            integer
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.Node">
            <summary>
            node
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.NodeList">
            <summary>
            nodeList
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.Number">
            <summary>
            number
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.String">
            <summary>
            string
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.ComputedString">
            <summary>
            computedString
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.Token">
            <summary>
            token
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.TokenList">
            <summary>
            tokenList
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.DomRelation">
            <summary>
            domRelation
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.Role">
            <summary>
            role
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.InternalRole">
            <summary>
            internalRole
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueType.ValueUndefined">
            <summary>
            valueUndefined
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Accessibility.AXValueSourceType">
            <summary>
            Enum of possible property sources.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueSourceType.Attribute">
            <summary>
            attribute
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueSourceType.Implicit">
            <summary>
            implicit
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueSourceType.Style">
            <summary>
            style
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueSourceType.Contents">
            <summary>
            contents
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueSourceType.Placeholder">
            <summary>
            placeholder
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueSourceType.RelatedElement">
            <summary>
            relatedElement
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Accessibility.AXValueNativeSourceType">
            <summary>
            Enum of possible native property sources (as a subtype of a particular AXValueSourceType).
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueNativeSourceType.Figcaption">
            <summary>
            figcaption
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueNativeSourceType.Label">
            <summary>
            label
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueNativeSourceType.Labelfor">
            <summary>
            labelfor
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueNativeSourceType.Labelwrapped">
            <summary>
            labelwrapped
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueNativeSourceType.Legend">
            <summary>
            legend
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueNativeSourceType.Tablecaption">
            <summary>
            tablecaption
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueNativeSourceType.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXValueNativeSourceType.Other">
            <summary>
            other
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Accessibility.AXValueSource">
            <summary>
            A single source for a computed AX property.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXValueSource.type">
            <summary>
            What type of source this is.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXValueSource.Value">
            <summary>
            The value of this property source.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXValueSource.Attribute">
            <summary>
            The name of the relevant attribute, if any.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXValueSource.AttributeValue">
            <summary>
            The value of the relevant attribute, if any.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXValueSource.Superseded">
            <summary>
            Whether this source is superseded by a higher priority source.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:CefSharp.DevTools.Accessibility.AXValueSource.nativeSource" -->
        <member name="P:CefSharp.DevTools.Accessibility.AXValueSource.NativeSourceValue">
            <summary>
            The value, such as a node or node list, of the native source.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXValueSource.Invalid">
            <summary>
            Whether the value for this property is invalid.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXValueSource.InvalidReason">
            <summary>
            Reason for the value being invalid, if it is.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Accessibility.AXRelatedNode">
            <summary>
            AXRelatedNode
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXRelatedNode.BackendDOMNodeId">
            <summary>
            The BackendNodeId of the related DOM node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXRelatedNode.Idref">
            <summary>
            The IDRef value provided, if any.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXRelatedNode.Text">
            <summary>
            The text alternative of this node in the current context.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Accessibility.AXProperty">
            <summary>
            AXProperty
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXProperty.name">
            <summary>
            The name of this property.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXProperty.Value">
            <summary>
            The value of this property.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Accessibility.AXValue">
            <summary>
            A single computed AX property.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXValue.type">
            <summary>
            The type of this value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXValue.Value">
            <summary>
            The computed value of this property.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXValue.RelatedNodes">
            <summary>
            One or more related nodes, if applicable.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXValue.Sources">
            <summary>
            The sources which contributed to the computation of this property.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Accessibility.AXPropertyName">
            <summary>
            Values of AXProperty name:
            - from 'busy' to 'roledescription': states which apply to every AX node
            - from 'live' to 'root': attributes which apply to nodes in live regions
            - from 'autocomplete' to 'valuetext': attributes which apply to widgets
            - from 'checked' to 'selected': states which apply to widgets
            - from 'activedescendant' to 'owns' - relationships between elements other than parent/child/sibling.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Busy">
            <summary>
            busy
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Disabled">
            <summary>
            disabled
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Editable">
            <summary>
            editable
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Focusable">
            <summary>
            focusable
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Focused">
            <summary>
            focused
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Hidden">
            <summary>
            hidden
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.HiddenRoot">
            <summary>
            hiddenRoot
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Invalid">
            <summary>
            invalid
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Keyshortcuts">
            <summary>
            keyshortcuts
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Settable">
            <summary>
            settable
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Roledescription">
            <summary>
            roledescription
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Live">
            <summary>
            live
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Atomic">
            <summary>
            atomic
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Relevant">
            <summary>
            relevant
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Root">
            <summary>
            root
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Autocomplete">
            <summary>
            autocomplete
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.HasPopup">
            <summary>
            hasPopup
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Level">
            <summary>
            level
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Multiselectable">
            <summary>
            multiselectable
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Orientation">
            <summary>
            orientation
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Multiline">
            <summary>
            multiline
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Readonly">
            <summary>
            readonly
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Required">
            <summary>
            required
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Valuemin">
            <summary>
            valuemin
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Valuemax">
            <summary>
            valuemax
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Valuetext">
            <summary>
            valuetext
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Checked">
            <summary>
            checked
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Expanded">
            <summary>
            expanded
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Modal">
            <summary>
            modal
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Pressed">
            <summary>
            pressed
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Selected">
            <summary>
            selected
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Activedescendant">
            <summary>
            activedescendant
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Controls">
            <summary>
            controls
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Describedby">
            <summary>
            describedby
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Details">
            <summary>
            details
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Errormessage">
            <summary>
            errormessage
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Flowto">
            <summary>
            flowto
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Labelledby">
            <summary>
            labelledby
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Accessibility.AXPropertyName.Owns">
            <summary>
            owns
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Accessibility.AXNode">
            <summary>
            A node in the accessibility tree.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXNode.NodeId">
            <summary>
            Unique identifier for this node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXNode.Ignored">
            <summary>
            Whether this node is ignored for accessibility
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXNode.IgnoredReasons">
            <summary>
            Collection of reasons why this node is hidden.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXNode.Role">
            <summary>
            This `Node`'s role, whether explicit or implicit.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXNode.Name">
            <summary>
            The accessible name for this `Node`.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXNode.Description">
            <summary>
            The accessible description for this `Node`.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXNode.Value">
            <summary>
            The value for this `Node`.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXNode.Properties">
            <summary>
            All other properties
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXNode.ChildIds">
            <summary>
            IDs for each of this node's child nodes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.AXNode.BackendDOMNodeId">
            <summary>
            The backend ID for the associated DOM node, if any.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Accessibility.GetPartialAXTreeResponse">
            <summary>
            GetPartialAXTreeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.GetPartialAXTreeResponse.Nodes">
            <summary>
            nodes
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Accessibility.GetFullAXTreeResponse">
            <summary>
            GetFullAXTreeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Accessibility.GetFullAXTreeResponse.Nodes">
            <summary>
            nodes
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Accessibility.AccessibilityClient">
            <summary>
            Accessibility
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Accessibility.AccessibilityClient.DisableAsync">
            <summary>
            Disables the accessibility domain.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Accessibility.AccessibilityClient.EnableAsync">
            <summary>
            Enables the accessibility domain which causes `AXNodeId`s to remain consistent between method calls.
            This turns on accessibility for the page, which can impact performance until accessibility is disabled.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Accessibility.AccessibilityClient.GetPartialAXTreeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Fetches the accessibility node and partial accessibility tree for this DOM node, if it exists.
            </summary>
            <param name = "nodeId">Identifier of the node to get the partial accessibility tree for.</param>
            <param name = "backendNodeId">Identifier of the backend node to get the partial accessibility tree for.</param>
            <param name = "objectId">JavaScript object id of the node wrapper to get the partial accessibility tree for.</param>
            <param name = "fetchRelatives">Whether to fetch this nodes ancestors, siblings and children. Defaults to true.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetPartialAXTreeResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Accessibility.AccessibilityClient.GetFullAXTreeAsync">
            <summary>
            Fetches the entire accessibility tree
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetFullAXTreeResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Animation.Animation">
            <summary>
            Animation instance.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.Animation.Id">
            <summary>
            `Animation`'s id.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.Animation.Name">
            <summary>
            `Animation`'s name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.Animation.PausedState">
            <summary>
            `Animation`'s internal paused state.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.Animation.PlayState">
            <summary>
            `Animation`'s play state.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.Animation.PlaybackRate">
            <summary>
            `Animation`'s playback rate.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.Animation.StartTime">
            <summary>
            `Animation`'s start time.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.Animation.CurrentTime">
            <summary>
            `Animation`'s current time.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.Animation.Type">
            <summary>
            Animation type of `Animation`.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.Animation.Source">
            <summary>
            `Animation`'s source animation node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.Animation.CssId">
            <summary>
            A unique ID for `Animation` representing the sources that triggered this CSS
            animation/transition.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Animation.AnimationEffect">
            <summary>
            AnimationEffect instance
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.AnimationEffect.Delay">
            <summary>
            `AnimationEffect`'s delay.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.AnimationEffect.EndDelay">
            <summary>
            `AnimationEffect`'s end delay.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.AnimationEffect.IterationStart">
            <summary>
            `AnimationEffect`'s iteration start.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.AnimationEffect.Iterations">
            <summary>
            `AnimationEffect`'s iterations.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.AnimationEffect.Duration">
            <summary>
            `AnimationEffect`'s iteration duration.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.AnimationEffect.Direction">
            <summary>
            `AnimationEffect`'s playback direction.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.AnimationEffect.Fill">
            <summary>
            `AnimationEffect`'s fill mode.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.AnimationEffect.BackendNodeId">
            <summary>
            `AnimationEffect`'s target node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.AnimationEffect.KeyframesRule">
            <summary>
            `AnimationEffect`'s keyframes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.AnimationEffect.Easing">
            <summary>
            `AnimationEffect`'s timing function.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Animation.KeyframesRule">
            <summary>
            Keyframes Rule
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.KeyframesRule.Name">
            <summary>
            CSS keyframed animation's name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.KeyframesRule.Keyframes">
            <summary>
            List of animation keyframes.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Animation.KeyframeStyle">
            <summary>
            Keyframe Style
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.KeyframeStyle.Offset">
            <summary>
            Keyframe's time offset.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.KeyframeStyle.Easing">
            <summary>
            `AnimationEffect`'s timing function.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Animation.GetCurrentTimeResponse">
            <summary>
            GetCurrentTimeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.GetCurrentTimeResponse.CurrentTime">
            <summary>
            currentTime
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Animation.GetPlaybackRateResponse">
            <summary>
            GetPlaybackRateResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.GetPlaybackRateResponse.PlaybackRate">
            <summary>
            playbackRate
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Animation.ResolveAnimationResponse">
            <summary>
            ResolveAnimationResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Animation.ResolveAnimationResponse.RemoteObject">
            <summary>
            remoteObject
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Animation.AnimationClient">
            <summary>
            Animation
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Animation.AnimationClient.DisableAsync">
            <summary>
            Disables animation domain notifications.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Animation.AnimationClient.EnableAsync">
            <summary>
            Enables animation domain notifications.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Animation.AnimationClient.GetCurrentTimeAsync(System.String)">
            <summary>
            Returns the current time of the an animation.
            </summary>
            <param name = "id">Id of animation.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetCurrentTimeResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Animation.AnimationClient.GetPlaybackRateAsync">
            <summary>
            Gets the playback rate of the document timeline.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetPlaybackRateResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Animation.AnimationClient.ReleaseAnimationsAsync(System.String[])">
            <summary>
            Releases a set of animations to no longer be manipulated.
            </summary>
            <param name = "animations">List of animation ids to seek.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Animation.AnimationClient.ResolveAnimationAsync(System.String)">
            <summary>
            Gets the remote object of the Animation.
            </summary>
            <param name = "animationId">Animation id.</param>
            <returns>returns System.Threading.Tasks.Task&lt;ResolveAnimationResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Animation.AnimationClient.SeekAnimationsAsync(System.String[],System.Int64)">
            <summary>
            Seek a set of animations to a particular time within each animation.
            </summary>
            <param name = "animations">List of animation ids to seek.</param>
            <param name = "currentTime">Set the current time of each animation.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Animation.AnimationClient.SetPausedAsync(System.String[],System.Boolean)">
            <summary>
            Sets the paused state of a set of animations.
            </summary>
            <param name = "animations">Animations to set the pause state of.</param>
            <param name = "paused">Paused state to set to.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Animation.AnimationClient.SetPlaybackRateAsync(System.Int64)">
            <summary>
            Sets the playback rate of the document timeline.
            </summary>
            <param name = "playbackRate">Playback rate for animations on page</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Animation.AnimationClient.SetTimingAsync(System.String,System.Int64,System.Int64)">
            <summary>
            Sets the timing of an animation node.
            </summary>
            <param name = "animationId">Animation id.</param>
            <param name = "duration">Duration of the animation.</param>
            <param name = "delay">Delay of the animation.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.ApplicationCache.ApplicationCacheResource">
            <summary>
            Detailed application cache resource information.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.ApplicationCacheResource.Url">
            <summary>
            Resource url.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.ApplicationCacheResource.Size">
            <summary>
            Resource size.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.ApplicationCacheResource.Type">
            <summary>
            Resource type.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.ApplicationCache.ApplicationCache">
            <summary>
            Detailed application cache information.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.ApplicationCache.ManifestURL">
            <summary>
            Manifest URL.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.ApplicationCache.Size">
            <summary>
            Application cache size.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.ApplicationCache.CreationTime">
            <summary>
            Application cache creation time.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.ApplicationCache.UpdateTime">
            <summary>
            Application cache update time.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.ApplicationCache.Resources">
            <summary>
            Application cache resources.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.ApplicationCache.FrameWithManifest">
            <summary>
            Frame identifier - manifest URL pair.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.FrameWithManifest.FrameId">
            <summary>
            Frame identifier.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.FrameWithManifest.ManifestURL">
            <summary>
            Manifest URL.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.FrameWithManifest.Status">
            <summary>
            Application cache status.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.ApplicationCache.GetApplicationCacheForFrameResponse">
            <summary>
            GetApplicationCacheForFrameResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.GetApplicationCacheForFrameResponse.ApplicationCache">
            <summary>
            applicationCache
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.ApplicationCache.GetFramesWithManifestsResponse">
            <summary>
            GetFramesWithManifestsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.GetFramesWithManifestsResponse.FrameIds">
            <summary>
            frameIds
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.ApplicationCache.GetManifestForFrameResponse">
            <summary>
            GetManifestForFrameResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ApplicationCache.GetManifestForFrameResponse.ManifestURL">
            <summary>
            manifestURL
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.ApplicationCache.ApplicationCacheClient">
            <summary>
            ApplicationCache
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.ApplicationCache.ApplicationCacheClient.EnableAsync">
            <summary>
            Enables application cache domain notifications.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ApplicationCache.ApplicationCacheClient.GetApplicationCacheForFrameAsync(System.String)">
            <summary>
            Returns relevant application cache data for the document in given frame.
            </summary>
            <param name = "frameId">Identifier of the frame containing document whose application cache is retrieved.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetApplicationCacheForFrameResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ApplicationCache.ApplicationCacheClient.GetFramesWithManifestsAsync">
            <summary>
            Returns array of frame identifiers with manifest urls for each frame containing a document
            associated with some application cache.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetFramesWithManifestsResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ApplicationCache.ApplicationCacheClient.GetManifestForFrameAsync(System.String)">
            <summary>
            Returns manifest URL for document in the given frame.
            </summary>
            <param name = "frameId">Identifier of the frame containing document whose manifest is retrieved.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetManifestForFrameResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Audits.AffectedCookie">
            <summary>
            Information about a cookie that is affected by an inspector issue.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.AffectedCookie.Name">
            <summary>
            The following three properties uniquely identify a cookie
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.AffectedCookie.Path">
            <summary>
            Path
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.AffectedCookie.Domain">
            <summary>
            Domain
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.AffectedRequest">
            <summary>
            Information about a request that is affected by an inspector issue.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.AffectedRequest.RequestId">
            <summary>
            The unique request id.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.AffectedRequest.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.AffectedFrame">
            <summary>
            Information about the frame affected by an inspector issue.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.AffectedFrame.FrameId">
            <summary>
            FrameId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.SameSiteCookieExclusionReason">
            <summary>
            SameSiteCookieExclusionReason
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieExclusionReason.ExcludeSameSiteUnspecifiedTreatedAsLax">
            <summary>
            ExcludeSameSiteUnspecifiedTreatedAsLax
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieExclusionReason.ExcludeSameSiteNoneInsecure">
            <summary>
            ExcludeSameSiteNoneInsecure
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieExclusionReason.ExcludeSameSiteLax">
            <summary>
            ExcludeSameSiteLax
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieExclusionReason.ExcludeSameSiteStrict">
            <summary>
            ExcludeSameSiteStrict
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.SameSiteCookieWarningReason">
            <summary>
            SameSiteCookieWarningReason
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieWarningReason.WarnSameSiteUnspecifiedCrossSiteContext">
            <summary>
            WarnSameSiteUnspecifiedCrossSiteContext
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieWarningReason.WarnSameSiteNoneInsecure">
            <summary>
            WarnSameSiteNoneInsecure
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieWarningReason.WarnSameSiteUnspecifiedLaxAllowUnsafe">
            <summary>
            WarnSameSiteUnspecifiedLaxAllowUnsafe
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieWarningReason.WarnSameSiteStrictLaxDowngradeStrict">
            <summary>
            WarnSameSiteStrictLaxDowngradeStrict
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieWarningReason.WarnSameSiteStrictCrossDowngradeStrict">
            <summary>
            WarnSameSiteStrictCrossDowngradeStrict
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieWarningReason.WarnSameSiteStrictCrossDowngradeLax">
            <summary>
            WarnSameSiteStrictCrossDowngradeLax
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieWarningReason.WarnSameSiteLaxCrossDowngradeStrict">
            <summary>
            WarnSameSiteLaxCrossDowngradeStrict
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieWarningReason.WarnSameSiteLaxCrossDowngradeLax">
            <summary>
            WarnSameSiteLaxCrossDowngradeLax
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.SameSiteCookieOperation">
            <summary>
            SameSiteCookieOperation
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieOperation.SetCookie">
            <summary>
            SetCookie
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.SameSiteCookieOperation.ReadCookie">
            <summary>
            ReadCookie
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.SameSiteCookieIssueDetails">
            <summary>
            This information is currently necessary, as the front-end has a difficult
            time finding a specific cookie. With this, we can convey specific error
            information without the cookie.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.SameSiteCookieIssueDetails.Cookie">
            <summary>
            Cookie
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.SameSiteCookieIssueDetails.cookieWarningReasons">
            <summary>
            CookieWarningReasons
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.SameSiteCookieIssueDetails.cookieExclusionReasons">
            <summary>
            CookieExclusionReasons
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.SameSiteCookieIssueDetails.operation">
            <summary>
            Optionally identifies the site-for-cookies and the cookie url, which
            may be used by the front-end as additional context.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.SameSiteCookieIssueDetails.SiteForCookies">
            <summary>
            SiteForCookies
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.SameSiteCookieIssueDetails.CookieUrl">
            <summary>
            CookieUrl
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.SameSiteCookieIssueDetails.Request">
            <summary>
            Request
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.MixedContentResolutionStatus">
            <summary>
            MixedContentResolutionStatus
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResolutionStatus.MixedContentBlocked">
            <summary>
            MixedContentBlocked
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResolutionStatus.MixedContentAutomaticallyUpgraded">
            <summary>
            MixedContentAutomaticallyUpgraded
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResolutionStatus.MixedContentWarning">
            <summary>
            MixedContentWarning
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.MixedContentResourceType">
            <summary>
            MixedContentResourceType
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Audio">
            <summary>
            Audio
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Beacon">
            <summary>
            Beacon
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.CSPReport">
            <summary>
            CSPReport
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Download">
            <summary>
            Download
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.EventSource">
            <summary>
            EventSource
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Favicon">
            <summary>
            Favicon
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Form">
            <summary>
            Form
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Frame">
            <summary>
            Frame
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Import">
            <summary>
            Import
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Manifest">
            <summary>
            Manifest
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Ping">
            <summary>
            Ping
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.PluginData">
            <summary>
            PluginData
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.PluginResource">
            <summary>
            PluginResource
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Prefetch">
            <summary>
            Prefetch
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Resource">
            <summary>
            Resource
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Script">
            <summary>
            Script
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.ServiceWorker">
            <summary>
            ServiceWorker
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.SharedWorker">
            <summary>
            SharedWorker
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Stylesheet">
            <summary>
            Stylesheet
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Track">
            <summary>
            Track
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Video">
            <summary>
            Video
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.Worker">
            <summary>
            Worker
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.XMLHttpRequest">
            <summary>
            XMLHttpRequest
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.MixedContentResourceType.XSLT">
            <summary>
            XSLT
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.MixedContentIssueDetails">
            <summary>
            MixedContentIssueDetails
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.MixedContentIssueDetails.resourceType">
            <summary>
            The type of resource causing the mixed content issue (css, js, iframe,
            form,...). Marked as optional because it is mapped to from
            blink::mojom::RequestContextType, which will be replaced
            by network::mojom::RequestDestination
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.MixedContentIssueDetails.resolutionStatus">
            <summary>
            The way the mixed content issue is being resolved.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.MixedContentIssueDetails.InsecureURL">
            <summary>
            The unsafe http url causing the mixed content issue.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.MixedContentIssueDetails.MainResourceURL">
            <summary>
            The url responsible for the call to an unsafe url.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.MixedContentIssueDetails.Request">
            <summary>
            The mixed content request.
            Does not always exist (e.g. for unsafe form submission urls).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.MixedContentIssueDetails.Frame">
            <summary>
            Optional because not every mixed content issue is necessarily linked to a frame.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.BlockedByResponseReason">
            <summary>
            Enum indicating the reason a response has been blocked. These reasons are
            refinements of the net error BLOCKED_BY_RESPONSE.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.BlockedByResponseReason.CoepFrameResourceNeedsCoepHeader">
            <summary>
            CoepFrameResourceNeedsCoepHeader
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.BlockedByResponseReason.CoopSandboxedIFrameCannotNavigateToCoopPage">
            <summary>
            CoopSandboxedIFrameCannotNavigateToCoopPage
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.BlockedByResponseReason.CorpNotSameOrigin">
            <summary>
            CorpNotSameOrigin
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.BlockedByResponseReason.CorpNotSameOriginAfterDefaultedToSameOriginByCoep">
            <summary>
            CorpNotSameOriginAfterDefaultedToSameOriginByCoep
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.BlockedByResponseReason.CorpNotSameSite">
            <summary>
            CorpNotSameSite
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.BlockedByResponseIssueDetails">
            <summary>
            Details for a request that has been blocked with the BLOCKED_BY_RESPONSE
            code. Currently only used for COEP/COOP, but may be extended to include
            some CSP errors in the future.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.BlockedByResponseIssueDetails.Request">
            <summary>
            Request
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.BlockedByResponseIssueDetails.ParentFrame">
            <summary>
            ParentFrame
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.BlockedByResponseIssueDetails.BlockedFrame">
            <summary>
            BlockedFrame
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.BlockedByResponseIssueDetails.reason">
            <summary>
            Reason
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.HeavyAdResolutionStatus">
            <summary>
            HeavyAdResolutionStatus
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.HeavyAdResolutionStatus.HeavyAdBlocked">
            <summary>
            HeavyAdBlocked
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.HeavyAdResolutionStatus.HeavyAdWarning">
            <summary>
            HeavyAdWarning
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.HeavyAdReason">
            <summary>
            HeavyAdReason
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.HeavyAdReason.NetworkTotalLimit">
            <summary>
            NetworkTotalLimit
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.HeavyAdReason.CpuTotalLimit">
            <summary>
            CpuTotalLimit
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.HeavyAdReason.CpuPeakLimit">
            <summary>
            CpuPeakLimit
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.HeavyAdIssueDetails">
            <summary>
            HeavyAdIssueDetails
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.HeavyAdIssueDetails.resolution">
            <summary>
            The resolution status, either blocking the content or warning.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.HeavyAdIssueDetails.reason">
            <summary>
            The reason the ad was blocked, total network or cpu or peak cpu.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.HeavyAdIssueDetails.Frame">
            <summary>
            The frame that was blocked.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.ContentSecurityPolicyViolationType">
            <summary>
            ContentSecurityPolicyViolationType
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.ContentSecurityPolicyViolationType.KInlineViolation">
            <summary>
            kInlineViolation
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.ContentSecurityPolicyViolationType.KEvalViolation">
            <summary>
            kEvalViolation
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.ContentSecurityPolicyViolationType.KURLViolation">
            <summary>
            kURLViolation
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.ContentSecurityPolicyViolationType.KTrustedTypesSinkViolation">
            <summary>
            kTrustedTypesSinkViolation
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.ContentSecurityPolicyViolationType.KTrustedTypesPolicyViolation">
            <summary>
            kTrustedTypesPolicyViolation
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.SourceCodeLocation">
            <summary>
            SourceCodeLocation
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.SourceCodeLocation.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.SourceCodeLocation.LineNumber">
            <summary>
            LineNumber
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.SourceCodeLocation.ColumnNumber">
            <summary>
            ColumnNumber
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.ContentSecurityPolicyIssueDetails">
            <summary>
            ContentSecurityPolicyIssueDetails
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.ContentSecurityPolicyIssueDetails.BlockedURL">
            <summary>
            The url not included in allowed sources.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.ContentSecurityPolicyIssueDetails.ViolatedDirective">
            <summary>
            Specific directive that is violated, causing the CSP issue.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.ContentSecurityPolicyIssueDetails.contentSecurityPolicyViolationType">
            <summary>
            ContentSecurityPolicyViolationType
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.ContentSecurityPolicyIssueDetails.FrameAncestor">
            <summary>
            FrameAncestor
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.ContentSecurityPolicyIssueDetails.SourceCodeLocation">
            <summary>
            SourceCodeLocation
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.ContentSecurityPolicyIssueDetails.ViolatingNodeId">
            <summary>
            ViolatingNodeId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.InspectorIssueCode">
            <summary>
            A unique identifier for the type of issue. Each type may use one of the
            optional fields in InspectorIssueDetails to convey more specific
            information about the kind of issue.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.InspectorIssueCode.SameSiteCookieIssue">
            <summary>
            SameSiteCookieIssue
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.InspectorIssueCode.MixedContentIssue">
            <summary>
            MixedContentIssue
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.InspectorIssueCode.BlockedByResponseIssue">
            <summary>
            BlockedByResponseIssue
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.InspectorIssueCode.HeavyAdIssue">
            <summary>
            HeavyAdIssue
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Audits.InspectorIssueCode.ContentSecurityPolicyIssue">
            <summary>
            ContentSecurityPolicyIssue
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.InspectorIssueDetails">
            <summary>
            This struct holds a list of optional fields with additional information
            specific to the kind of issue. When adding a new issue code, please also
            add a new optional field to this type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.InspectorIssueDetails.SameSiteCookieIssueDetails">
            <summary>
            SameSiteCookieIssueDetails
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.InspectorIssueDetails.MixedContentIssueDetails">
            <summary>
            MixedContentIssueDetails
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.InspectorIssueDetails.BlockedByResponseIssueDetails">
            <summary>
            BlockedByResponseIssueDetails
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.InspectorIssueDetails.HeavyAdIssueDetails">
            <summary>
            HeavyAdIssueDetails
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.InspectorIssueDetails.ContentSecurityPolicyIssueDetails">
            <summary>
            ContentSecurityPolicyIssueDetails
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.InspectorIssue">
            <summary>
            An inspector issue reported from the back-end.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.InspectorIssue.code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.InspectorIssue.Details">
            <summary>
            Details
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.GetEncodedResponseResponse">
            <summary>
            GetEncodedResponseResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.GetEncodedResponseResponse.Body">
            <summary>
            body
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.GetEncodedResponseResponse.OriginalSize">
            <summary>
            originalSize
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Audits.GetEncodedResponseResponse.EncodedSize">
            <summary>
            encodedSize
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Audits.AuditsClient">
            <summary>
            Audits domain allows investigation of page violations and possible improvements.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Audits.AuditsClient.GetEncodedResponseAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Returns the response body and size if it were re-encoded with the specified settings. Only
            applies to images.
            </summary>
            <param name = "requestId">Identifier of the network request to get content for.</param>
            <param name = "encoding">The encoding to use.</param>
            <param name = "quality">The quality of the encoding (0-1). (defaults to 1)</param>
            <param name = "sizeOnly">Whether to only return the size information (defaults to false).</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetEncodedResponseResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Audits.AuditsClient.DisableAsync">
            <summary>
            Disables issues domain, prevents further issues from being reported to the client.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Audits.AuditsClient.EnableAsync">
            <summary>
            Enables issues domain, sends the issues collected so far to the client by means of the
            `issueAdded` event.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.BackgroundService.ServiceName">
            <summary>
            The Background Service that will be associated with the commands/events.
            Every Background Service operates independently, but they share the same
            API.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.BackgroundService.ServiceName.BackgroundFetch">
            <summary>
            backgroundFetch
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.BackgroundService.ServiceName.BackgroundSync">
            <summary>
            backgroundSync
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.BackgroundService.ServiceName.PushMessaging">
            <summary>
            pushMessaging
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.BackgroundService.ServiceName.Notifications">
            <summary>
            notifications
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.BackgroundService.ServiceName.PaymentHandler">
            <summary>
            paymentHandler
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.BackgroundService.ServiceName.PeriodicBackgroundSync">
            <summary>
            periodicBackgroundSync
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.BackgroundService.EventMetadata">
            <summary>
            A key-value pair for additional event information to pass along.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.BackgroundService.EventMetadata.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.BackgroundService.EventMetadata.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.BackgroundService.BackgroundServiceEvent">
            <summary>
            BackgroundServiceEvent
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.BackgroundService.BackgroundServiceEvent.Timestamp">
            <summary>
            Timestamp of the event (in seconds).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.BackgroundService.BackgroundServiceEvent.Origin">
            <summary>
            The origin this event belongs to.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.BackgroundService.BackgroundServiceEvent.ServiceWorkerRegistrationId">
            <summary>
            The Service Worker ID that initiated the event.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.BackgroundService.BackgroundServiceEvent.service">
            <summary>
            The Background Service this event belongs to.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.BackgroundService.BackgroundServiceEvent.EventName">
            <summary>
            A description of the event.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.BackgroundService.BackgroundServiceEvent.InstanceId">
            <summary>
            An identifier that groups related events together.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.BackgroundService.BackgroundServiceEvent.EventMetadata">
            <summary>
            A list of event-specific information.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.BackgroundService.BackgroundServiceClient">
            <summary>
            Defines events for background web platform features.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.BackgroundService.BackgroundServiceClient.StartObservingAsync(CefSharp.DevTools.BackgroundService.ServiceName)">
            <summary>
            Enables event updates for the service.
            </summary>
            <param name = "service">service</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.BackgroundService.BackgroundServiceClient.StopObservingAsync(CefSharp.DevTools.BackgroundService.ServiceName)">
            <summary>
            Disables event updates for the service.
            </summary>
            <param name = "service">service</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.BackgroundService.BackgroundServiceClient.SetRecordingAsync(System.Boolean,CefSharp.DevTools.BackgroundService.ServiceName)">
            <summary>
            Set the recording state for the service.
            </summary>
            <param name = "shouldRecord">shouldRecord</param>
            <param name = "service">service</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.BackgroundService.BackgroundServiceClient.ClearEventsAsync(CefSharp.DevTools.BackgroundService.ServiceName)">
            <summary>
            Clears all stored data for the service.
            </summary>
            <param name = "service">service</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Browser.WindowState">
            <summary>
            The state of the browser window.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.WindowState.Normal">
            <summary>
            normal
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.WindowState.Minimized">
            <summary>
            minimized
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.WindowState.Maximized">
            <summary>
            maximized
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.WindowState.Fullscreen">
            <summary>
            fullscreen
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.Bounds">
            <summary>
            Browser window bounds information
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.Bounds.Left">
            <summary>
            The offset from the left edge of the screen to the window in pixels.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.Bounds.Top">
            <summary>
            The offset from the top edge of the screen to the window in pixels.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.Bounds.Width">
            <summary>
            The window width in pixels.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.Bounds.Height">
            <summary>
            The window height in pixels.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.Bounds.windowState">
            <summary>
            The window state. Default to normal.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.PermissionType">
            <summary>
            PermissionType
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.AccessibilityEvents">
            <summary>
            accessibilityEvents
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.AudioCapture">
            <summary>
            audioCapture
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.BackgroundSync">
            <summary>
            backgroundSync
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.BackgroundFetch">
            <summary>
            backgroundFetch
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.ClipboardReadWrite">
            <summary>
            clipboardReadWrite
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.ClipboardSanitizedWrite">
            <summary>
            clipboardSanitizedWrite
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.DurableStorage">
            <summary>
            durableStorage
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.Flash">
            <summary>
            flash
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.Geolocation">
            <summary>
            geolocation
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.Midi">
            <summary>
            midi
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.MidiSysex">
            <summary>
            midiSysex
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.Nfc">
            <summary>
            nfc
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.Notifications">
            <summary>
            notifications
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.PaymentHandler">
            <summary>
            paymentHandler
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.PeriodicBackgroundSync">
            <summary>
            periodicBackgroundSync
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.ProtectedMediaIdentifier">
            <summary>
            protectedMediaIdentifier
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.Sensors">
            <summary>
            sensors
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.VideoCapture">
            <summary>
            videoCapture
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.IdleDetection">
            <summary>
            idleDetection
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.WakeLockScreen">
            <summary>
            wakeLockScreen
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionType.WakeLockSystem">
            <summary>
            wakeLockSystem
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.PermissionSetting">
            <summary>
            PermissionSetting
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionSetting.Granted">
            <summary>
            granted
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionSetting.Denied">
            <summary>
            denied
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Browser.PermissionSetting.Prompt">
            <summary>
            prompt
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.PermissionDescriptor">
            <summary>
            Definition of PermissionDescriptor defined in the Permissions API:
            https://w3c.github.io/permissions/#dictdef-permissiondescriptor.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.PermissionDescriptor.Name">
            <summary>
            Name of permission.
            See https://cs.chromium.org/chromium/src/third_party/blink/renderer/modules/permissions/permission_descriptor.idl for valid permission names.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.PermissionDescriptor.Sysex">
            <summary>
            For "midi" permission, may also specify sysex control.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.PermissionDescriptor.UserVisibleOnly">
            <summary>
            For "push" permission, may specify userVisibleOnly.
            Note that userVisibleOnly = true is the only currently supported type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.PermissionDescriptor.Type">
            <summary>
            For "wake-lock" permission, must specify type as either "screen" or "system".
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.PermissionDescriptor.AllowWithoutSanitization">
            <summary>
            For "clipboard" permission, may specify allowWithoutSanitization.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.Bucket">
            <summary>
            Chrome histogram bucket.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.Bucket.Low">
            <summary>
            Minimum value (inclusive).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.Bucket.High">
            <summary>
            Maximum value (exclusive).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.Bucket.Count">
            <summary>
            Number of samples.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.Histogram">
            <summary>
            Chrome histogram.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.Histogram.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.Histogram.Sum">
            <summary>
            Sum of sample values.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.Histogram.Count">
            <summary>
            Total number of samples.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.Histogram.Buckets">
            <summary>
            Buckets.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.GetVersionResponse">
            <summary>
            GetVersionResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.GetVersionResponse.ProtocolVersion">
            <summary>
            protocolVersion
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.GetVersionResponse.Product">
            <summary>
            product
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.GetVersionResponse.Revision">
            <summary>
            revision
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.GetVersionResponse.UserAgent">
            <summary>
            userAgent
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.GetVersionResponse.JsVersion">
            <summary>
            jsVersion
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.GetBrowserCommandLineResponse">
            <summary>
            GetBrowserCommandLineResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.GetBrowserCommandLineResponse.Arguments">
            <summary>
            arguments
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.GetHistogramsResponse">
            <summary>
            GetHistogramsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.GetHistogramsResponse.Histograms">
            <summary>
            histograms
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.GetHistogramResponse">
            <summary>
            GetHistogramResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.GetHistogramResponse.Histogram">
            <summary>
            histogram
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.GetWindowBoundsResponse">
            <summary>
            GetWindowBoundsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.GetWindowBoundsResponse.Bounds">
            <summary>
            bounds
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.GetWindowForTargetResponse">
            <summary>
            GetWindowForTargetResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.GetWindowForTargetResponse.WindowId">
            <summary>
            windowId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Browser.GetWindowForTargetResponse.Bounds">
            <summary>
            bounds
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Browser.BrowserClient">
            <summary>
            The Browser domain defines methods and events for browser managing.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Browser.BrowserClient.SetPermissionAsync(CefSharp.DevTools.Browser.PermissionDescriptor,CefSharp.DevTools.Browser.PermissionSetting,System.String,System.String)">
            <summary>
            Set permission settings for given origin.
            </summary>
            <param name = "permission">Descriptor of permission to override.</param>
            <param name = "setting">Setting of the permission.</param>
            <param name = "origin">Origin the permission applies to, all origins if not specified.</param>
            <param name = "browserContextId">Context to override. When omitted, default browser context is used.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Browser.BrowserClient.GrantPermissionsAsync(CefSharp.DevTools.Browser.PermissionType[],System.String,System.String)">
            <summary>
            Grant specific permissions to the given origin and reject all others.
            </summary>
            <param name = "permissions">permissions</param>
            <param name = "origin">Origin the permission applies to, all origins if not specified.</param>
            <param name = "browserContextId">BrowserContext to override permissions. When omitted, default browser context is used.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Browser.BrowserClient.ResetPermissionsAsync(System.String)">
            <summary>
            Reset all permission management for all origins.
            </summary>
            <param name = "browserContextId">BrowserContext to reset permissions. When omitted, default browser context is used.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Browser.BrowserClient.SetDownloadBehaviorAsync(System.String,System.String,System.String)" -->
        <member name="M:CefSharp.DevTools.Browser.BrowserClient.CloseAsync">
            <summary>
            Close browser gracefully.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Browser.BrowserClient.CrashAsync">
            <summary>
            Crashes browser on the main thread.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Browser.BrowserClient.CrashGpuProcessAsync">
            <summary>
            Crashes GPU process.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Browser.BrowserClient.GetVersionAsync">
            <summary>
            Returns version information.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetVersionResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Browser.BrowserClient.GetBrowserCommandLineAsync">
            <summary>
            Returns the command line switches for the browser process if, and only if
            --enable-automation is on the commandline.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetBrowserCommandLineResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Browser.BrowserClient.GetHistogramsAsync(System.String,System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.Browser.BrowserClient.GetHistogramAsync(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a Chrome histogram by name.
            </summary>
            <param name = "name">Requested histogram name.</param>
            <param name = "delta">If true, retrieve delta since last call.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetHistogramResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Browser.BrowserClient.GetWindowBoundsAsync(System.Int32)">
            <summary>
            Get position and size of the browser window.
            </summary>
            <param name = "windowId">Browser window id.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetWindowBoundsResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Browser.BrowserClient.GetWindowForTargetAsync(System.String)">
            <summary>
            Get the browser window that contains the devtools target.
            </summary>
            <param name = "targetId">Devtools agent host id. If called as a part of the session, associated targetId is used.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetWindowForTargetResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Browser.BrowserClient.SetWindowBoundsAsync(System.Int32,CefSharp.DevTools.Browser.Bounds)" -->
        <member name="M:CefSharp.DevTools.Browser.BrowserClient.SetDockTileAsync(System.String,System.Byte[])">
            <summary>
            Set dock tile details, platform-specific.
            </summary>
            <param name = "badgeLabel">badgeLabel</param>
            <param name = "image">Png encoded image.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.CSS.StyleSheetOrigin">
            <summary>
            Stylesheet type: "injected" for stylesheets injected via extension, "user-agent" for user-agent
            stylesheets, "inspector" for stylesheets created by the inspector (i.e. those holding the "via
            inspector" rules), "regular" for regular stylesheets.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.CSS.StyleSheetOrigin.Injected">
            <summary>
            injected
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.CSS.StyleSheetOrigin.UserAgent">
            <summary>
            user-agent
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.CSS.StyleSheetOrigin.Inspector">
            <summary>
            inspector
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.CSS.StyleSheetOrigin.Regular">
            <summary>
            regular
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.PseudoElementMatches">
            <summary>
            CSS rule collection for a single pseudo style.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.PseudoElementMatches.pseudoType">
            <summary>
            Pseudo element type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.PseudoElementMatches.Matches">
            <summary>
            Matches of CSS rules applicable to the pseudo style.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.InheritedStyleEntry">
            <summary>
            Inherited CSS rule collection from ancestor node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.InheritedStyleEntry.InlineStyle">
            <summary>
            The ancestor node's inline style, if any, in the style inheritance chain.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.InheritedStyleEntry.MatchedCSSRules">
            <summary>
            Matches of CSS rules matching the ancestor node in the style inheritance chain.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.RuleMatch">
            <summary>
            Match data for a CSS rule.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.RuleMatch.Rule">
            <summary>
            CSS rule in the match.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.RuleMatch.MatchingSelectors">
            <summary>
            Matching selector indices in the rule's selectorList selectors (0-based).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.Value">
            <summary>
            Data for a simple selector (these are delimited by commas in a selector list).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.Value.Text">
            <summary>
            Value text.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.Value.Range">
            <summary>
            Value range in the underlying resource (if available).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.SelectorList">
            <summary>
            Selector list data.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.SelectorList.Selectors">
            <summary>
            Selectors in the list.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.SelectorList.Text">
            <summary>
            Rule selector text.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.CSSStyleSheetHeader">
            <summary>
            CSS stylesheet metainformation.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.StyleSheetId">
            <summary>
            The stylesheet identifier.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.FrameId">
            <summary>
            Owner frame identifier.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.SourceURL">
            <summary>
            Stylesheet resource URL.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.SourceMapURL">
            <summary>
            URL of source map associated with the stylesheet (if any).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.origin">
            <summary>
            Stylesheet origin.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.Title">
            <summary>
            Stylesheet title.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.OwnerNode">
            <summary>
            The backend id for the owner node of the stylesheet.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.Disabled">
            <summary>
            Denotes whether the stylesheet is disabled.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.HasSourceURL">
            <summary>
            Whether the sourceURL field value comes from the sourceURL comment.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.IsInline">
            <summary>
            Whether this stylesheet is created for STYLE tag by parser. This flag is not set for
            document.written STYLE tags.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.IsMutable" -->
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.StartLine">
            <summary>
            Line offset of the stylesheet within the resource (zero based).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.StartColumn">
            <summary>
            Column offset of the stylesheet within the resource (zero based).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.Length">
            <summary>
            Size of the content (in characters).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.EndLine">
            <summary>
            Line offset of the end of the stylesheet within the resource (zero based).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyleSheetHeader.EndColumn">
            <summary>
            Column offset of the end of the stylesheet within the resource (zero based).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.CSSRule">
            <summary>
            CSS rule representation.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSRule.StyleSheetId">
            <summary>
            The css style sheet identifier (absent for user agent stylesheet and user-specified
            stylesheet rules) this rule came from.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSRule.SelectorList">
            <summary>
            Rule selector data.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSRule.origin">
            <summary>
            Parent stylesheet's origin.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSRule.Style">
            <summary>
            Associated style declaration.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSRule.Media">
            <summary>
            Media list array (for rules involving media queries). The array enumerates media queries
            starting with the innermost one, going outwards.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.RuleUsage">
            <summary>
            CSS coverage information.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.RuleUsage.StyleSheetId">
            <summary>
            The css style sheet identifier (absent for user agent stylesheet and user-specified
            stylesheet rules) this rule came from.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.RuleUsage.StartOffset">
            <summary>
            Offset of the start of the rule (including selector) from the beginning of the stylesheet.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.RuleUsage.EndOffset">
            <summary>
            Offset of the end of the rule body from the beginning of the stylesheet.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.RuleUsage.Used">
            <summary>
            Indicates whether the rule was actually used by some element in the page.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.SourceRange">
            <summary>
            Text range within a resource. All numbers are zero-based.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.SourceRange.StartLine">
            <summary>
            Start line of range.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.SourceRange.StartColumn">
            <summary>
            Start column of range (inclusive).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.SourceRange.EndLine">
            <summary>
            End line of range
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.SourceRange.EndColumn">
            <summary>
            End column of range (exclusive).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.ShorthandEntry">
            <summary>
            ShorthandEntry
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.ShorthandEntry.Name">
            <summary>
            Shorthand name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.ShorthandEntry.Value">
            <summary>
            Shorthand value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.ShorthandEntry.Important">
            <summary>
            Whether the property has "!important" annotation (implies `false` if absent).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.CSSComputedStyleProperty">
            <summary>
            CSSComputedStyleProperty
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSComputedStyleProperty.Name">
            <summary>
            Computed style property name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSComputedStyleProperty.Value">
            <summary>
            Computed style property value.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.CSSStyle">
            <summary>
            CSS style representation.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyle.StyleSheetId">
            <summary>
            The css style sheet identifier (absent for user agent stylesheet and user-specified
            stylesheet rules) this rule came from.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyle.CssProperties">
            <summary>
            CSS properties in the style.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyle.ShorthandEntries">
            <summary>
            Computed values for all shorthands found in the style.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyle.CssText">
            <summary>
            Style declaration text (if available).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSStyle.Range">
            <summary>
            Style declaration range in the enclosing stylesheet (if available).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.CSSProperty">
            <summary>
            CSS property declaration data.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSProperty.Name">
            <summary>
            The property name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSProperty.Value">
            <summary>
            The property value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSProperty.Important">
            <summary>
            Whether the property has "!important" annotation (implies `false` if absent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSProperty.Implicit">
            <summary>
            Whether the property is implicit (implies `false` if absent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSProperty.Text">
            <summary>
            The full property text as specified in the style.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSProperty.ParsedOk">
            <summary>
            Whether the property is understood by the browser (implies `true` if absent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSProperty.Disabled">
            <summary>
            Whether the property is disabled by the user (present for source-based properties only).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSProperty.Range">
            <summary>
            The entire property range in the enclosing style declaration (if available).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.CSSMedia">
            <summary>
            CSS media rule descriptor.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSMedia.Text">
            <summary>
            Media query text.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSMedia.Source">
            <summary>
            Source of the media query: "mediaRule" if specified by a @media rule, "importRule" if
            specified by an @import rule, "linkedSheet" if specified by a "media" attribute in a linked
            stylesheet's LINK tag, "inlineSheet" if specified by a "media" attribute in an inline
            stylesheet's STYLE tag.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSMedia.SourceURL">
            <summary>
            URL of the document containing the media query description.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSMedia.Range">
            <summary>
            The associated rule (@media or @import) header range in the enclosing stylesheet (if
            available).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSMedia.StyleSheetId">
            <summary>
            Identifier of the stylesheet containing this object (if exists).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSMedia.MediaList">
            <summary>
            Array of media queries.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.MediaQuery">
            <summary>
            Media query descriptor.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.MediaQuery.Expressions">
            <summary>
            Array of media query expressions.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.MediaQuery.Active">
            <summary>
            Whether the media query condition is satisfied.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.MediaQueryExpression">
            <summary>
            Media query expression descriptor.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.MediaQueryExpression.Value">
            <summary>
            Media query expression value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.MediaQueryExpression.Unit">
            <summary>
            Media query expression units.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.MediaQueryExpression.Feature">
            <summary>
            Media query expression feature.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.MediaQueryExpression.ValueRange">
            <summary>
            The associated range of the value text in the enclosing stylesheet (if available).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.MediaQueryExpression.ComputedLength">
            <summary>
            Computed length of media query expression (if applicable).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.PlatformFontUsage">
            <summary>
            Information about amount of glyphs that were rendered with given font.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.PlatformFontUsage.FamilyName">
            <summary>
            Font's family name reported by platform.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.PlatformFontUsage.IsCustomFont">
            <summary>
            Indicates if the font was downloaded or resolved locally.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.PlatformFontUsage.GlyphCount">
            <summary>
            Amount of glyphs that were rendered with this font.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.FontVariationAxis">
            <summary>
            Information about font variation axes for variable fonts
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontVariationAxis.Tag">
            <summary>
            The font-variation-setting tag (a.k.a. "axis tag").
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontVariationAxis.Name">
            <summary>
            Human-readable variation name in the default language (normally, "en").
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontVariationAxis.MinValue">
            <summary>
            The minimum value (inclusive) the font supports for this tag.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontVariationAxis.MaxValue">
            <summary>
            The maximum value (inclusive) the font supports for this tag.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontVariationAxis.DefaultValue">
            <summary>
            The default value.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.FontFace">
            <summary>
            Properties of a web font: https://www.w3.org/TR/2008/REC-CSS2-20080411/fonts.html#font-descriptions
            and additional information such as platformFontFamily and fontVariationAxes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontFace.FontFamily">
            <summary>
            The font-family.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontFace.FontStyle">
            <summary>
            The font-style.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontFace.FontVariant">
            <summary>
            The font-variant.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontFace.FontWeight">
            <summary>
            The font-weight.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontFace.FontStretch">
            <summary>
            The font-stretch.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontFace.UnicodeRange">
            <summary>
            The unicode-range.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontFace.Src">
            <summary>
            The src.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontFace.PlatformFontFamily">
            <summary>
            The resolved platform font family
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.FontFace.FontVariationAxes">
            <summary>
            Available variation settings (a.k.a. "axes").
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.CSSKeyframesRule">
            <summary>
            CSS keyframes rule representation.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSKeyframesRule.AnimationName">
            <summary>
            Animation name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSKeyframesRule.Keyframes">
            <summary>
            List of keyframes.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.CSSKeyframeRule">
            <summary>
            CSS keyframe rule representation.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSKeyframeRule.StyleSheetId">
            <summary>
            The css style sheet identifier (absent for user agent stylesheet and user-specified
            stylesheet rules) this rule came from.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSKeyframeRule.origin">
            <summary>
            Parent stylesheet's origin.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSKeyframeRule.KeyText">
            <summary>
            Associated key text.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CSSKeyframeRule.Style">
            <summary>
            Associated style declaration.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.StyleDeclarationEdit">
            <summary>
            A descriptor of operation to mutate style declaration text.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.StyleDeclarationEdit.StyleSheetId">
            <summary>
            The css style sheet identifier.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.StyleDeclarationEdit.Range">
            <summary>
            The range of the style text in the enclosing stylesheet.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.StyleDeclarationEdit.Text">
            <summary>
            New style text.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.AddRuleResponse">
            <summary>
            AddRuleResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.AddRuleResponse.Rule">
            <summary>
            rule
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.CollectClassNamesResponse">
            <summary>
            CollectClassNamesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CollectClassNamesResponse.ClassNames">
            <summary>
            classNames
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.CreateStyleSheetResponse">
            <summary>
            CreateStyleSheetResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.CreateStyleSheetResponse.StyleSheetId">
            <summary>
            styleSheetId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.GetBackgroundColorsResponse">
            <summary>
            GetBackgroundColorsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetBackgroundColorsResponse.BackgroundColors">
            <summary>
            backgroundColors
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetBackgroundColorsResponse.ComputedFontSize">
            <summary>
            computedFontSize
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetBackgroundColorsResponse.ComputedFontWeight">
            <summary>
            computedFontWeight
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.GetComputedStyleForNodeResponse">
            <summary>
            GetComputedStyleForNodeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetComputedStyleForNodeResponse.ComputedStyle">
            <summary>
            computedStyle
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.GetInlineStylesForNodeResponse">
            <summary>
            GetInlineStylesForNodeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetInlineStylesForNodeResponse.InlineStyle">
            <summary>
            inlineStyle
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetInlineStylesForNodeResponse.AttributesStyle">
            <summary>
            attributesStyle
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.GetMatchedStylesForNodeResponse">
            <summary>
            GetMatchedStylesForNodeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetMatchedStylesForNodeResponse.InlineStyle">
            <summary>
            inlineStyle
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetMatchedStylesForNodeResponse.AttributesStyle">
            <summary>
            attributesStyle
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetMatchedStylesForNodeResponse.MatchedCSSRules">
            <summary>
            matchedCSSRules
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetMatchedStylesForNodeResponse.PseudoElements">
            <summary>
            pseudoElements
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetMatchedStylesForNodeResponse.Inherited">
            <summary>
            inherited
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetMatchedStylesForNodeResponse.CssKeyframesRules">
            <summary>
            cssKeyframesRules
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.GetMediaQueriesResponse">
            <summary>
            GetMediaQueriesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetMediaQueriesResponse.Medias">
            <summary>
            medias
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.GetPlatformFontsForNodeResponse">
            <summary>
            GetPlatformFontsForNodeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetPlatformFontsForNodeResponse.Fonts">
            <summary>
            fonts
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.GetStyleSheetTextResponse">
            <summary>
            GetStyleSheetTextResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.GetStyleSheetTextResponse.Text">
            <summary>
            text
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.TakeComputedStyleUpdatesResponse">
            <summary>
            TakeComputedStyleUpdatesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.TakeComputedStyleUpdatesResponse.NodeIds">
            <summary>
            nodeIds
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.SetKeyframeKeyResponse">
            <summary>
            SetKeyframeKeyResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.SetKeyframeKeyResponse.KeyText">
            <summary>
            keyText
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.SetMediaTextResponse">
            <summary>
            SetMediaTextResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.SetMediaTextResponse.Media">
            <summary>
            media
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.SetRuleSelectorResponse">
            <summary>
            SetRuleSelectorResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.SetRuleSelectorResponse.SelectorList">
            <summary>
            selectorList
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.SetStyleSheetTextResponse">
            <summary>
            SetStyleSheetTextResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.SetStyleSheetTextResponse.SourceMapURL">
            <summary>
            sourceMapURL
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.SetStyleTextsResponse">
            <summary>
            SetStyleTextsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.SetStyleTextsResponse.Styles">
            <summary>
            styles
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.StopRuleUsageTrackingResponse">
            <summary>
            StopRuleUsageTrackingResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.StopRuleUsageTrackingResponse.RuleUsage">
            <summary>
            ruleUsage
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.TakeCoverageDeltaResponse">
            <summary>
            TakeCoverageDeltaResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.TakeCoverageDeltaResponse.Coverage">
            <summary>
            coverage
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CSS.TakeCoverageDeltaResponse.Timestamp">
            <summary>
            timestamp
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CSS.CSSClient">
            <summary>
            This domain exposes CSS read/write operations. All CSS objects (stylesheets, rules, and styles)
            have an associated `id` used in subsequent operations on the related object. Each object type has
            a specific `id` structure, and those are not interchangeable between objects of different kinds.
            CSS objects can be loaded using the `get*ForNode()` calls (which accept a DOM node id). A client
            can also keep track of stylesheets via the `styleSheetAdded`/`styleSheetRemoved` events and
            subsequently load the required stylesheet contents using the `getStyleSheet[Text]()` methods.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.AddRuleAsync(System.String,System.String,CefSharp.DevTools.CSS.SourceRange)">
            <summary>
            Inserts a new rule with the given `ruleText` in a stylesheet with given `styleSheetId`, at the
            position specified by `location`.
            </summary>
            <param name = "styleSheetId">The css style sheet identifier where a new rule should be inserted.</param>
            <param name = "ruleText">The text of a new rule.</param>
            <param name = "location">Text position of a new rule in the target style sheet.</param>
            <returns>returns System.Threading.Tasks.Task&lt;AddRuleResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.CollectClassNamesAsync(System.String)">
            <summary>
            Returns all class names from specified stylesheet.
            </summary>
            <param name = "styleSheetId">styleSheetId</param>
            <returns>returns System.Threading.Tasks.Task&lt;CollectClassNamesResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.CreateStyleSheetAsync(System.String)">
            <summary>
            Creates a new special "via-inspector" stylesheet in the frame with given `frameId`.
            </summary>
            <param name = "frameId">Identifier of the frame where "via-inspector" stylesheet should be created.</param>
            <returns>returns System.Threading.Tasks.Task&lt;CreateStyleSheetResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.DisableAsync">
            <summary>
            Disables the CSS agent for the given page.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.EnableAsync">
            <summary>
            Enables the CSS agent for the given page. Clients should not assume that the CSS agent has been
            enabled until the result of this command is received.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.ForcePseudoStateAsync(System.Int32,System.String[])">
            <summary>
            Ensures that the given node will have specified pseudo-classes whenever its style is computed by
            the browser.
            </summary>
            <param name = "nodeId">The element id for which to force the pseudo state.</param>
            <param name = "forcedPseudoClasses">Element pseudo classes to force when computing the element's style.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.GetBackgroundColorsAsync(System.Int32)">
            <summary>
            GetBackgroundColors
            </summary>
            <param name = "nodeId">Id of the node to get background colors for.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetBackgroundColorsResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.GetComputedStyleForNodeAsync(System.Int32)">
            <summary>
            Returns the computed style for a DOM node identified by `nodeId`.
            </summary>
            <param name = "nodeId">nodeId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetComputedStyleForNodeResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.GetInlineStylesForNodeAsync(System.Int32)">
            <summary>
            Returns the styles defined inline (explicitly in the "style" attribute and implicitly, using DOM
            attributes) for a DOM node identified by `nodeId`.
            </summary>
            <param name = "nodeId">nodeId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetInlineStylesForNodeResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.GetMatchedStylesForNodeAsync(System.Int32)">
            <summary>
            Returns requested styles for a DOM node identified by `nodeId`.
            </summary>
            <param name = "nodeId">nodeId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetMatchedStylesForNodeResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.GetMediaQueriesAsync">
            <summary>
            Returns all media queries parsed by the rendering engine.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetMediaQueriesResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.GetPlatformFontsForNodeAsync(System.Int32)">
            <summary>
            Requests information about platform fonts which we used to render child TextNodes in the given
            node.
            </summary>
            <param name = "nodeId">nodeId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetPlatformFontsForNodeResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.GetStyleSheetTextAsync(System.String)">
            <summary>
            Returns the current textual content for a stylesheet.
            </summary>
            <param name = "styleSheetId">styleSheetId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetStyleSheetTextResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.TrackComputedStyleUpdatesAsync(System.Collections.Generic.IList{CefSharp.DevTools.CSS.CSSComputedStyleProperty})">
            <summary>
            Starts tracking the given computed styles for updates. The specified array of properties
            replaces the one previously specified. Pass empty array to disable tracking.
            Use takeComputedStyleUpdates to retrieve the list of nodes that had properties modified.
            The changes to computed style properties are only tracked for nodes pushed to the front-end
            by the DOM agent. If no changes to the tracked properties occur after the node has been pushed
            to the front-end, no updates will be issued for the node.
            </summary>
            <param name = "propertiesToTrack">propertiesToTrack</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.TakeComputedStyleUpdatesAsync">
            <summary>
            Polls the next batch of computed style updates.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;TakeComputedStyleUpdatesResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.SetEffectivePropertyValueForNodeAsync(System.Int32,System.String,System.String)">
            <summary>
            Find a rule with the given active property for the given node and set the new value for this
            property
            </summary>
            <param name = "nodeId">The element id for which to set property.</param>
            <param name = "propertyName">propertyName</param>
            <param name = "value">value</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.SetKeyframeKeyAsync(System.String,CefSharp.DevTools.CSS.SourceRange,System.String)">
            <summary>
            Modifies the keyframe rule key text.
            </summary>
            <param name = "styleSheetId">styleSheetId</param>
            <param name = "range">range</param>
            <param name = "keyText">keyText</param>
            <returns>returns System.Threading.Tasks.Task&lt;SetKeyframeKeyResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.SetMediaTextAsync(System.String,CefSharp.DevTools.CSS.SourceRange,System.String)">
            <summary>
            Modifies the rule selector.
            </summary>
            <param name = "styleSheetId">styleSheetId</param>
            <param name = "range">range</param>
            <param name = "text">text</param>
            <returns>returns System.Threading.Tasks.Task&lt;SetMediaTextResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.SetRuleSelectorAsync(System.String,CefSharp.DevTools.CSS.SourceRange,System.String)">
            <summary>
            Modifies the rule selector.
            </summary>
            <param name = "styleSheetId">styleSheetId</param>
            <param name = "range">range</param>
            <param name = "selector">selector</param>
            <returns>returns System.Threading.Tasks.Task&lt;SetRuleSelectorResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.SetStyleSheetTextAsync(System.String,System.String)">
            <summary>
            Sets the new stylesheet text.
            </summary>
            <param name = "styleSheetId">styleSheetId</param>
            <param name = "text">text</param>
            <returns>returns System.Threading.Tasks.Task&lt;SetStyleSheetTextResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.SetStyleTextsAsync(System.Collections.Generic.IList{CefSharp.DevTools.CSS.StyleDeclarationEdit})">
            <summary>
            Applies specified style edits one after another in the given order.
            </summary>
            <param name = "edits">edits</param>
            <returns>returns System.Threading.Tasks.Task&lt;SetStyleTextsResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.StartRuleUsageTrackingAsync">
            <summary>
            Enables the selector recording.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.StopRuleUsageTrackingAsync">
            <summary>
            Stop tracking rule usage and return the list of rules that were used since last call to
            `takeCoverageDelta` (or since start of coverage instrumentation)
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;StopRuleUsageTrackingResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.TakeCoverageDeltaAsync">
            <summary>
            Obtain list of rules that became used since last call to this method (or since start of coverage
            instrumentation)
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;TakeCoverageDeltaResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CSS.CSSClient.SetLocalFontsEnabledAsync(System.Boolean)">
            <summary>
            Enables/disables rendering of local CSS fonts (enabled by default).
            </summary>
            <param name = "enabled">Whether rendering of local fonts is enabled.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.CacheStorage.CachedResponseType">
            <summary>
            type of HTTP response cached
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.CacheStorage.CachedResponseType.Basic">
            <summary>
            basic
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.CacheStorage.CachedResponseType.Cors">
            <summary>
            cors
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.CacheStorage.CachedResponseType.Default">
            <summary>
            default
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.CacheStorage.CachedResponseType.Error">
            <summary>
            error
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.CacheStorage.CachedResponseType.OpaqueResponse">
            <summary>
            opaqueResponse
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.CacheStorage.CachedResponseType.OpaqueRedirect">
            <summary>
            opaqueRedirect
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CacheStorage.DataEntry">
            <summary>
            Data entry.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.DataEntry.RequestURL">
            <summary>
            Request URL.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.DataEntry.RequestMethod">
            <summary>
            Request method.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.DataEntry.RequestHeaders">
            <summary>
            Request headers
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.DataEntry.ResponseTime">
            <summary>
            Number of seconds since epoch.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.DataEntry.ResponseStatus">
            <summary>
            HTTP response status code.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.DataEntry.ResponseStatusText">
            <summary>
            HTTP response status text.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.DataEntry.responseType">
            <summary>
            HTTP response type
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.DataEntry.ResponseHeaders">
            <summary>
            Response headers
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CacheStorage.Cache">
            <summary>
            Cache identifier.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.Cache.CacheId">
            <summary>
            An opaque unique id of the cache.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.Cache.SecurityOrigin">
            <summary>
            Security origin of the cache.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.Cache.CacheName">
            <summary>
            The name of the cache.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CacheStorage.Header">
            <summary>
            Header
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.Header.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.Header.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CacheStorage.CachedResponse">
            <summary>
            Cached response
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.CachedResponse.Body">
            <summary>
            Entry content, base64-encoded.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CacheStorage.RequestCacheNamesResponse">
            <summary>
            RequestCacheNamesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.RequestCacheNamesResponse.Caches">
            <summary>
            caches
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CacheStorage.RequestCachedResponseResponse">
            <summary>
            RequestCachedResponseResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.RequestCachedResponseResponse.Response">
            <summary>
            response
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CacheStorage.RequestEntriesResponse">
            <summary>
            RequestEntriesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.RequestEntriesResponse.CacheDataEntries">
            <summary>
            cacheDataEntries
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.CacheStorage.RequestEntriesResponse.ReturnCount">
            <summary>
            returnCount
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.CacheStorage.CacheStorageClient">
            <summary>
            CacheStorage
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.CacheStorage.CacheStorageClient.DeleteCacheAsync(System.String)">
            <summary>
            Deletes a cache.
            </summary>
            <param name = "cacheId">Id of cache for deletion.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CacheStorage.CacheStorageClient.DeleteEntryAsync(System.String,System.String)">
            <summary>
            Deletes a cache entry.
            </summary>
            <param name = "cacheId">Id of cache where the entry will be deleted.</param>
            <param name = "request">URL spec of the request.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CacheStorage.CacheStorageClient.RequestCacheNamesAsync(System.String)">
            <summary>
            Requests cache names.
            </summary>
            <param name = "securityOrigin">Security origin.</param>
            <returns>returns System.Threading.Tasks.Task&lt;RequestCacheNamesResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CacheStorage.CacheStorageClient.RequestCachedResponseAsync(System.String,System.String,System.Collections.Generic.IList{CefSharp.DevTools.CacheStorage.Header})">
            <summary>
            Fetches cache entry.
            </summary>
            <param name = "cacheId">Id of cache that contains the entry.</param>
            <param name = "requestURL">URL spec of the request.</param>
            <param name = "requestHeaders">headers of the request.</param>
            <returns>returns System.Threading.Tasks.Task&lt;RequestCachedResponseResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.CacheStorage.CacheStorageClient.RequestEntriesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Requests data from cache.
            </summary>
            <param name = "cacheId">ID of cache to get entries from.</param>
            <param name = "skipCount">Number of records to skip.</param>
            <param name = "pageSize">Number of records to fetch.</param>
            <param name = "pathFilter">If present, only return the entries containing this substring in the path</param>
            <returns>returns System.Threading.Tasks.Task&lt;RequestEntriesResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Cast.Sink">
            <summary>
            Sink
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Cast.Sink.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Cast.Sink.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Cast.Sink.Session">
            <summary>
            Text describing the current session. Present only if there is an active
            session on the sink.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Cast.CastClient">
            <summary>
            A domain for interacting with Cast, Presentation API, and Remote Playback API
            functionalities.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Cast.CastClient.EnableAsync(System.String)">
            <summary>
            Starts observing for sinks that can be used for tab mirroring, and if set,
            sinks compatible with |presentationUrl| as well. When sinks are found, a
            |sinksUpdated| event is fired.
            Also starts observing for issue messages. When an issue is added or removed,
            an |issueUpdated| event is fired.
            </summary>
            <param name = "presentationUrl">presentationUrl</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Cast.CastClient.DisableAsync">
            <summary>
            Stops observing for sinks and issues.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Cast.CastClient.SetSinkToUseAsync(System.String)">
            <summary>
            Sets a sink to be used when the web page requests the browser to choose a
            sink via Presentation API, Remote Playback API, or Cast SDK.
            </summary>
            <param name = "sinkName">sinkName</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Cast.CastClient.StartTabMirroringAsync(System.String)">
            <summary>
            Starts mirroring the tab to the sink.
            </summary>
            <param name = "sinkName">sinkName</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Cast.CastClient.StopCastingAsync(System.String)">
            <summary>
            Stops the active Cast session on the sink.
            </summary>
            <param name = "sinkName">sinkName</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.DOM.BackendNode">
            <summary>
            Backend node with a friendly name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.BackendNode.NodeType">
            <summary>
            `Node`'s nodeType.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.BackendNode.NodeName">
            <summary>
            `Node`'s nodeName.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.BackendNode.BackendNodeId">
            <summary>
            BackendNodeId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.PseudoType">
            <summary>
            Pseudo element type.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.FirstLine">
            <summary>
            first-line
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.FirstLetter">
            <summary>
            first-letter
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.Before">
            <summary>
            before
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.After">
            <summary>
            after
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.Marker">
            <summary>
            marker
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.Backdrop">
            <summary>
            backdrop
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.Selection">
            <summary>
            selection
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.FirstLineInherited">
            <summary>
            first-line-inherited
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.Scrollbar">
            <summary>
            scrollbar
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.ScrollbarThumb">
            <summary>
            scrollbar-thumb
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.ScrollbarButton">
            <summary>
            scrollbar-button
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.ScrollbarTrack">
            <summary>
            scrollbar-track
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.ScrollbarTrackPiece">
            <summary>
            scrollbar-track-piece
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.ScrollbarCorner">
            <summary>
            scrollbar-corner
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.Resizer">
            <summary>
            resizer
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.PseudoType.InputListButton">
            <summary>
            input-list-button
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.ShadowRootType">
            <summary>
            Shadow root type.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.ShadowRootType.UserAgent">
            <summary>
            user-agent
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.ShadowRootType.Open">
            <summary>
            open
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOM.ShadowRootType.Closed">
            <summary>
            closed
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.Node">
            <summary>
            DOM interaction is implemented in terms of mirror objects that represent the actual DOM nodes.
            DOMNode is a base node mirror type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.NodeId">
            <summary>
            Node identifier that is passed into the rest of the DOM messages as the `nodeId`. Backend
            will only push node with given `id` once. It is aware of all requested nodes and will only
            fire DOM events for nodes known to the client.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.ParentId">
            <summary>
            The id of the parent node if any.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.BackendNodeId">
            <summary>
            The BackendNodeId for this node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.NodeType">
            <summary>
            `Node`'s nodeType.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.NodeName">
            <summary>
            `Node`'s nodeName.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.LocalName">
            <summary>
            `Node`'s localName.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.NodeValue">
            <summary>
            `Node`'s nodeValue.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.ChildNodeCount">
            <summary>
            Child count for `Container` nodes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.Children">
            <summary>
            Child nodes of this node when requested with children.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.Attributes">
            <summary>
            Attributes of the `Element` node in the form of flat array `[name1, value1, name2, value2]`.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.DocumentURL">
            <summary>
            Document URL that `Document` or `FrameOwner` node points to.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.BaseURL">
            <summary>
            Base URL that `Document` or `FrameOwner` node uses for URL completion.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.PublicId">
            <summary>
            `DocumentType`'s publicId.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.SystemId">
            <summary>
            `DocumentType`'s systemId.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.InternalSubset">
            <summary>
            `DocumentType`'s internalSubset.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.XmlVersion">
            <summary>
            `Document`'s XML version in case of XML documents.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.Name">
            <summary>
            `Attr`'s name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.Value">
            <summary>
            `Attr`'s value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.pseudoType">
            <summary>
            Pseudo element type for this node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.shadowRootType">
            <summary>
            Shadow root type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.FrameId">
            <summary>
            Frame ID for frame owner elements.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.ContentDocument">
            <summary>
            Content document for frame owner elements.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.ShadowRoots">
            <summary>
            Shadow root list for given element host.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.TemplateContent">
            <summary>
            Content document fragment for template elements.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.PseudoElements">
            <summary>
            Pseudo elements associated with this node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.ImportedDocument">
            <summary>
            Import document for the HTMLImport links.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.DistributedNodes">
            <summary>
            Distributed nodes for given insertion point.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Node.IsSVG">
            <summary>
            Whether the node is SVG.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.RGBA">
            <summary>
            A structure holding an RGBA color.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.RGBA.R">
            <summary>
            The red component, in the [0-255] range.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.RGBA.G">
            <summary>
            The green component, in the [0-255] range.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.RGBA.B">
            <summary>
            The blue component, in the [0-255] range.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.RGBA.A">
            <summary>
            The alpha component, in the [0-1] range (default: 1).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.BoxModel">
            <summary>
            Box model.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.BoxModel.Content">
            <summary>
            Content box
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.BoxModel.Padding">
            <summary>
            Padding box
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.BoxModel.Border">
            <summary>
            Border box
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.BoxModel.Margin">
            <summary>
            Margin box
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.BoxModel.Width">
            <summary>
            Node width
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.BoxModel.Height">
            <summary>
            Node height
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.BoxModel.ShapeOutside">
            <summary>
            Shape outside coordinates
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.ShapeOutsideInfo">
            <summary>
            CSS Shape Outside details.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.ShapeOutsideInfo.Bounds">
            <summary>
            Shape bounds
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.ShapeOutsideInfo.Shape">
            <summary>
            Shape coordinate details
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.ShapeOutsideInfo.MarginShape">
            <summary>
            Margin shape bounds
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.Rect">
            <summary>
            Rectangle.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Rect.X">
            <summary>
            X coordinate
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Rect.Y">
            <summary>
            Y coordinate
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Rect.Width">
            <summary>
            Rectangle width
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.Rect.Height">
            <summary>
            Rectangle height
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.CSSComputedStyleProperty">
            <summary>
            CSSComputedStyleProperty
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.CSSComputedStyleProperty.Name">
            <summary>
            Computed style property name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.CSSComputedStyleProperty.Value">
            <summary>
            Computed style property value.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.CollectClassNamesFromSubtreeResponse">
            <summary>
            CollectClassNamesFromSubtreeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.CollectClassNamesFromSubtreeResponse.ClassNames">
            <summary>
            classNames
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.CopyToResponse">
            <summary>
            CopyToResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.CopyToResponse.NodeId">
            <summary>
            nodeId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.DescribeNodeResponse">
            <summary>
            DescribeNodeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.DescribeNodeResponse.Node">
            <summary>
            node
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.GetAttributesResponse">
            <summary>
            GetAttributesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetAttributesResponse.Attributes">
            <summary>
            attributes
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.GetBoxModelResponse">
            <summary>
            GetBoxModelResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetBoxModelResponse.Model">
            <summary>
            model
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.GetContentQuadsResponse">
            <summary>
            GetContentQuadsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetContentQuadsResponse.Quads">
            <summary>
            quads
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.GetDocumentResponse">
            <summary>
            GetDocumentResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetDocumentResponse.Root">
            <summary>
            root
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.GetNodesForSubtreeByStyleResponse">
            <summary>
            GetNodesForSubtreeByStyleResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetNodesForSubtreeByStyleResponse.NodeIds">
            <summary>
            nodeIds
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.GetNodeForLocationResponse">
            <summary>
            GetNodeForLocationResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetNodeForLocationResponse.BackendNodeId">
            <summary>
            backendNodeId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetNodeForLocationResponse.FrameId">
            <summary>
            frameId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetNodeForLocationResponse.NodeId">
            <summary>
            nodeId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.GetOuterHTMLResponse">
            <summary>
            GetOuterHTMLResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetOuterHTMLResponse.OuterHTML">
            <summary>
            outerHTML
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.GetRelayoutBoundaryResponse">
            <summary>
            GetRelayoutBoundaryResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetRelayoutBoundaryResponse.NodeId">
            <summary>
            nodeId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.GetSearchResultsResponse">
            <summary>
            GetSearchResultsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetSearchResultsResponse.NodeIds">
            <summary>
            nodeIds
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.MoveToResponse">
            <summary>
            MoveToResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.MoveToResponse.NodeId">
            <summary>
            nodeId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.PerformSearchResponse">
            <summary>
            PerformSearchResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.PerformSearchResponse.SearchId">
            <summary>
            searchId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.PerformSearchResponse.ResultCount">
            <summary>
            resultCount
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.PushNodeByPathToFrontendResponse">
            <summary>
            PushNodeByPathToFrontendResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.PushNodeByPathToFrontendResponse.NodeId">
            <summary>
            nodeId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.PushNodesByBackendIdsToFrontendResponse">
            <summary>
            PushNodesByBackendIdsToFrontendResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.PushNodesByBackendIdsToFrontendResponse.NodeIds">
            <summary>
            nodeIds
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.QuerySelectorResponse">
            <summary>
            QuerySelectorResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.QuerySelectorResponse.NodeId">
            <summary>
            nodeId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.QuerySelectorAllResponse">
            <summary>
            QuerySelectorAllResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.QuerySelectorAllResponse.NodeIds">
            <summary>
            nodeIds
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.RequestNodeResponse">
            <summary>
            RequestNodeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.RequestNodeResponse.NodeId">
            <summary>
            nodeId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.ResolveNodeResponse">
            <summary>
            ResolveNodeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.ResolveNodeResponse.Object">
            <summary>
            object
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.GetNodeStackTracesResponse">
            <summary>
            GetNodeStackTracesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetNodeStackTracesResponse.Creation">
            <summary>
            creation
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.GetFileInfoResponse">
            <summary>
            GetFileInfoResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetFileInfoResponse.Path">
            <summary>
            path
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.SetNodeNameResponse">
            <summary>
            SetNodeNameResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.SetNodeNameResponse.NodeId">
            <summary>
            nodeId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.GetFrameOwnerResponse">
            <summary>
            GetFrameOwnerResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetFrameOwnerResponse.BackendNodeId">
            <summary>
            backendNodeId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOM.GetFrameOwnerResponse.NodeId">
            <summary>
            nodeId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOM.DOMClient">
            <summary>
            This domain exposes DOM read/write operations. Each DOM Node is represented with its mirror object
            that has an `id`. This `id` can be used to get additional information on the Node, resolve it into
            the JavaScript object wrapper, etc. It is important that client receives DOM events only for the
            nodes that are known to the client. Backend keeps track of the nodes that were sent to the client
            and never sends the same node twice. It is client's responsibility to collect information about
            the nodes that were sent to the client.<p>Note that `iframe` owner elements will return
            corresponding document elements as their child nodes.</p>
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.CollectClassNamesFromSubtreeAsync(System.Int32)">
            <summary>
            Collects class names for the node with given id and all of it's child nodes.
            </summary>
            <param name = "nodeId">Id of the node to collect class names.</param>
            <returns>returns System.Threading.Tasks.Task&lt;CollectClassNamesFromSubtreeResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.DOM.DOMClient.CopyToAsync(System.Int32,System.Int32,System.Nullable{System.Int32})" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.DOM.DOMClient.DescribeNodeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.DOM.DOMClient.ScrollIntoViewIfNeededAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,CefSharp.DevTools.DOM.Rect)" -->
        <member name="M:CefSharp.DevTools.DOM.DOMClient.DisableAsync">
            <summary>
            Disables DOM agent for the given page.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.DiscardSearchResultsAsync(System.String)">
            <summary>
            Discards search results from the session with the given id. `getSearchResults` should no longer
            be called for that search.
            </summary>
            <param name = "searchId">Unique search session identifier.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.EnableAsync">
            <summary>
            Enables DOM agent for the given page.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.FocusAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Focuses the given element.
            </summary>
            <param name = "nodeId">Identifier of the node.</param>
            <param name = "backendNodeId">Identifier of the backend node.</param>
            <param name = "objectId">JavaScript object id of the node wrapper.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.GetAttributesAsync(System.Int32)">
            <summary>
            Returns attributes for the specified node.
            </summary>
            <param name = "nodeId">Id of the node to retrieve attibutes for.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetAttributesResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.GetBoxModelAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Returns boxes for the given node.
            </summary>
            <param name = "nodeId">Identifier of the node.</param>
            <param name = "backendNodeId">Identifier of the backend node.</param>
            <param name = "objectId">JavaScript object id of the node wrapper.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetBoxModelResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.GetContentQuadsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Returns quads that describe node position on the page. This method
            might return multiple quads for inline nodes.
            </summary>
            <param name = "nodeId">Identifier of the node.</param>
            <param name = "backendNodeId">Identifier of the backend node.</param>
            <param name = "objectId">JavaScript object id of the node wrapper.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetContentQuadsResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.DOM.DOMClient.GetDocumentAsync(System.Nullable{System.Int32},System.Nullable{System.Boolean})" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.DOM.DOMClient.GetNodesForSubtreeByStyleAsync(System.Int32,System.Collections.Generic.IList{CefSharp.DevTools.DOM.CSSComputedStyleProperty},System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.DOM.DOMClient.GetNodeForLocationAsync(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns node id at given location. Depending on whether DOM domain is enabled, nodeId is
            either returned or not.
            </summary>
            <param name = "x">X coordinate.</param>
            <param name = "y">Y coordinate.</param>
            <param name = "includeUserAgentShadowDOM">False to skip to the nearest non-UA shadow root ancestor (default: false).</param>
            <param name = "ignorePointerEventsNone">Whether to ignore pointer-events: none on elements and hit test them.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetNodeForLocationResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.GetOuterHTMLAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Returns node's HTML markup.
            </summary>
            <param name = "nodeId">Identifier of the node.</param>
            <param name = "backendNodeId">Identifier of the backend node.</param>
            <param name = "objectId">JavaScript object id of the node wrapper.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetOuterHTMLResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.GetRelayoutBoundaryAsync(System.Int32)">
            <summary>
            Returns the id of the nearest ancestor that is a relayout boundary.
            </summary>
            <param name = "nodeId">Id of the node.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetRelayoutBoundaryResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.GetSearchResultsAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Returns search results from given `fromIndex` to given `toIndex` from the search with the given
            identifier.
            </summary>
            <param name = "searchId">Unique search session identifier.</param>
            <param name = "fromIndex">Start index of the search result to be returned.</param>
            <param name = "toIndex">End index of the search result to be returned.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetSearchResultsResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.HideHighlightAsync">
            <summary>
            Hides any highlight.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.HighlightNodeAsync">
            <summary>
            Highlights DOM node.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.HighlightRectAsync">
            <summary>
            Highlights given rectangle.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.MarkUndoableStateAsync">
            <summary>
            Marks last undoable state.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.DOM.DOMClient.MoveToAsync(System.Int32,System.Int32,System.Nullable{System.Int32})" -->
        <member name="M:CefSharp.DevTools.DOM.DOMClient.PerformSearchAsync(System.String,System.Nullable{System.Boolean})">
            <summary>
            Searches for a given string in the DOM tree. Use `getSearchResults` to access search results or
            `cancelSearch` to end this search session.
            </summary>
            <param name = "query">Plain text or query selector or XPath search query.</param>
            <param name = "includeUserAgentShadowDOM">True to search in user agent shadow DOM.</param>
            <returns>returns System.Threading.Tasks.Task&lt;PerformSearchResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.PushNodeByPathToFrontendAsync(System.String)">
            <summary>
            Requests that the node is sent to the caller given its path. // FIXME, use XPath
            </summary>
            <param name = "path">Path to node in the proprietary format.</param>
            <returns>returns System.Threading.Tasks.Task&lt;PushNodeByPathToFrontendResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.PushNodesByBackendIdsToFrontendAsync(System.Int32[])">
            <summary>
            Requests that a batch of nodes is sent to the caller given their backend node ids.
            </summary>
            <param name = "backendNodeIds">The array of backend node ids.</param>
            <returns>returns System.Threading.Tasks.Task&lt;PushNodesByBackendIdsToFrontendResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.QuerySelectorAsync(System.Int32,System.String)">
            <summary>
            Executes `querySelector` on a given node.
            </summary>
            <param name = "nodeId">Id of the node to query upon.</param>
            <param name = "selector">Selector string.</param>
            <returns>returns System.Threading.Tasks.Task&lt;QuerySelectorResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.QuerySelectorAllAsync(System.Int32,System.String)">
            <summary>
            Executes `querySelectorAll` on a given node.
            </summary>
            <param name = "nodeId">Id of the node to query upon.</param>
            <param name = "selector">Selector string.</param>
            <returns>returns System.Threading.Tasks.Task&lt;QuerySelectorAllResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.RedoAsync">
            <summary>
            Re-does the last undone action.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.RemoveAttributeAsync(System.Int32,System.String)">
            <summary>
            Removes attribute with given name from an element with given id.
            </summary>
            <param name = "nodeId">Id of the element to remove attribute from.</param>
            <param name = "name">Name of the attribute to remove.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.RemoveNodeAsync(System.Int32)">
            <summary>
            Removes node with given id.
            </summary>
            <param name = "nodeId">Id of the node to remove.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.DOM.DOMClient.RequestChildNodesAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.DOM.DOMClient.RequestNodeAsync(System.String)">
            <summary>
            Requests that the node is sent to the caller given the JavaScript node object reference. All
            nodes that form the path from the node to the root are also sent to the client as a series of
            `setChildNodes` notifications.
            </summary>
            <param name = "objectId">JavaScript object id to convert into node.</param>
            <returns>returns System.Threading.Tasks.Task&lt;RequestNodeResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.ResolveNodeAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Resolves the JavaScript node object for a given NodeId or BackendNodeId.
            </summary>
            <param name = "nodeId">Id of the node to resolve.</param>
            <param name = "backendNodeId">Backend identifier of the node to resolve.</param>
            <param name = "objectGroup">Symbolic group name that can be used to release multiple objects.</param>
            <param name = "executionContextId">Execution context in which to resolve the node.</param>
            <returns>returns System.Threading.Tasks.Task&lt;ResolveNodeResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.SetAttributeValueAsync(System.Int32,System.String,System.String)">
            <summary>
            Sets attribute for an element with given id.
            </summary>
            <param name = "nodeId">Id of the element to set attribute for.</param>
            <param name = "name">Attribute name.</param>
            <param name = "value">Attribute value.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.DOM.DOMClient.SetAttributesAsTextAsync(System.Int32,System.String,System.String)" -->
        <member name="M:CefSharp.DevTools.DOM.DOMClient.SetFileInputFilesAsync(System.String[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Sets files for the given file input element.
            </summary>
            <param name = "files">Array of file paths to set.</param>
            <param name = "nodeId">Identifier of the node.</param>
            <param name = "backendNodeId">Identifier of the backend node.</param>
            <param name = "objectId">JavaScript object id of the node wrapper.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.SetNodeStackTracesEnabledAsync(System.Boolean)">
            <summary>
            Sets if stack traces should be captured for Nodes. See `Node.getNodeStackTraces`. Default is disabled.
            </summary>
            <param name = "enable">Enable or disable.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.GetNodeStackTracesAsync(System.Int32)">
            <summary>
            Gets stack traces associated with a Node. As of now, only provides stack trace for Node creation.
            </summary>
            <param name = "nodeId">Id of the node to get stack traces for.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetNodeStackTracesResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.GetFileInfoAsync(System.String)">
            <summary>
            Returns file information for the given
            File wrapper.
            </summary>
            <param name = "objectId">JavaScript object id of the node wrapper.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetFileInfoResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.SetInspectedNodeAsync(System.Int32)">
            <summary>
            Enables console to refer to the node with given id via $x (see Command Line API for more details
            $x functions).
            </summary>
            <param name = "nodeId">DOM node id to be accessible by means of $x command line API.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.SetNodeNameAsync(System.Int32,System.String)">
            <summary>
            Sets node name for a node with given id.
            </summary>
            <param name = "nodeId">Id of the node to set name for.</param>
            <param name = "name">New node's name.</param>
            <returns>returns System.Threading.Tasks.Task&lt;SetNodeNameResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.SetNodeValueAsync(System.Int32,System.String)">
            <summary>
            Sets node value for a node with given id.
            </summary>
            <param name = "nodeId">Id of the node to set value for.</param>
            <param name = "value">New node's value.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.SetOuterHTMLAsync(System.Int32,System.String)">
            <summary>
            Sets node HTML markup, returns new node id.
            </summary>
            <param name = "nodeId">Id of the node to set markup for.</param>
            <param name = "outerHTML">Outer HTML markup to set.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.UndoAsync">
            <summary>
            Undoes the last performed action.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOM.DOMClient.GetFrameOwnerAsync(System.String)">
            <summary>
            Returns iframe node that owns iframe with the given domain.
            </summary>
            <param name = "frameId">frameId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetFrameOwnerResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.DOMDebugger.DOMBreakpointType">
            <summary>
            DOM breakpoint type.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOMDebugger.DOMBreakpointType.SubtreeModified">
            <summary>
            subtree-modified
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOMDebugger.DOMBreakpointType.AttributeModified">
            <summary>
            attribute-modified
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.DOMDebugger.DOMBreakpointType.NodeRemoved">
            <summary>
            node-removed
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMDebugger.EventListener">
            <summary>
            Object event listener.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMDebugger.EventListener.Type">
            <summary>
            `EventListener`'s type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMDebugger.EventListener.UseCapture">
            <summary>
            `EventListener`'s useCapture.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMDebugger.EventListener.Passive">
            <summary>
            `EventListener`'s passive flag.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMDebugger.EventListener.Once">
            <summary>
            `EventListener`'s once flag.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMDebugger.EventListener.ScriptId">
            <summary>
            Script id of the handler code.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMDebugger.EventListener.LineNumber">
            <summary>
            Line number in the script (0-based).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMDebugger.EventListener.ColumnNumber">
            <summary>
            Column number in the script (0-based).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMDebugger.EventListener.Handler">
            <summary>
            Event handler function value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMDebugger.EventListener.OriginalHandler">
            <summary>
            Event original handler function value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMDebugger.EventListener.BackendNodeId">
            <summary>
            Node the listener is added to (if any).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMDebugger.GetEventListenersResponse">
            <summary>
            GetEventListenersResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMDebugger.GetEventListenersResponse.Listeners">
            <summary>
            listeners
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMDebugger.DOMDebuggerClient">
            <summary>
            DOM debugging allows setting breakpoints on particular DOM operations and events. JavaScript
            execution will stop on these operations as if there was a regular breakpoint set.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.DOMDebugger.DOMDebuggerClient.GetEventListenersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.DOMDebugger.DOMDebuggerClient.RemoveDOMBreakpointAsync(System.Int32,CefSharp.DevTools.DOMDebugger.DOMBreakpointType)">
            <summary>
            Removes DOM breakpoint that was set using `setDOMBreakpoint`.
            </summary>
            <param name = "nodeId">Identifier of the node to remove breakpoint from.</param>
            <param name = "type">Type of the breakpoint to remove.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOMDebugger.DOMDebuggerClient.RemoveEventListenerBreakpointAsync(System.String,System.String)">
            <summary>
            Removes breakpoint on particular DOM event.
            </summary>
            <param name = "eventName">Event name.</param>
            <param name = "targetName">EventTarget interface name.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOMDebugger.DOMDebuggerClient.RemoveInstrumentationBreakpointAsync(System.String)">
            <summary>
            Removes breakpoint on particular native event.
            </summary>
            <param name = "eventName">Instrumentation name to stop on.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOMDebugger.DOMDebuggerClient.RemoveXHRBreakpointAsync(System.String)">
            <summary>
            Removes breakpoint from XMLHttpRequest.
            </summary>
            <param name = "url">Resource URL substring.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOMDebugger.DOMDebuggerClient.SetDOMBreakpointAsync(System.Int32,CefSharp.DevTools.DOMDebugger.DOMBreakpointType)">
            <summary>
            Sets breakpoint on particular operation with DOM.
            </summary>
            <param name = "nodeId">Identifier of the node to set breakpoint on.</param>
            <param name = "type">Type of the operation to stop upon.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.DOMDebugger.DOMDebuggerClient.SetEventListenerBreakpointAsync(System.String,System.String)" -->
        <member name="M:CefSharp.DevTools.DOMDebugger.DOMDebuggerClient.SetInstrumentationBreakpointAsync(System.String)">
            <summary>
            Sets breakpoint on particular native event.
            </summary>
            <param name = "eventName">Instrumentation name to stop on.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOMDebugger.DOMDebuggerClient.SetXHRBreakpointAsync(System.String)">
            <summary>
            Sets breakpoint on XMLHttpRequest.
            </summary>
            <param name = "url">Resource URL substring. All XHRs having this substring in the URL will get stopped upon.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.DOMNode">
            <summary>
            A Node in the DOM tree.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.NodeType">
            <summary>
            `Node`'s nodeType.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.NodeName">
            <summary>
            `Node`'s nodeName.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.NodeValue">
            <summary>
            `Node`'s nodeValue.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.TextValue">
            <summary>
            Only set for textarea elements, contains the text value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.InputValue">
            <summary>
            Only set for input elements, contains the input's associated text value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.InputChecked">
            <summary>
            Only set for radio and checkbox input elements, indicates if the element has been checked
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.OptionSelected">
            <summary>
            Only set for option elements, indicates if the element has been selected
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.BackendNodeId">
            <summary>
            `Node`'s id, corresponds to DOM.Node.backendNodeId.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.ChildNodeIndexes">
            <summary>
            The indexes of the node's child nodes in the `domNodes` array returned by `getSnapshot`, if
            any.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.Attributes">
            <summary>
            Attributes of an `Element` node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.PseudoElementIndexes">
            <summary>
            Indexes of pseudo elements associated with this node in the `domNodes` array returned by
            `getSnapshot`, if any.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.LayoutNodeIndex">
            <summary>
            The index of the node's related layout tree node in the `layoutTreeNodes` array returned by
            `getSnapshot`, if any.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.DocumentURL">
            <summary>
            Document URL that `Document` or `FrameOwner` node points to.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.BaseURL">
            <summary>
            Base URL that `Document` or `FrameOwner` node uses for URL completion.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.ContentLanguage">
            <summary>
            Only set for documents, contains the document's content language.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.DocumentEncoding">
            <summary>
            Only set for documents, contains the document's character set encoding.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.PublicId">
            <summary>
            `DocumentType` node's publicId.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.SystemId">
            <summary>
            `DocumentType` node's systemId.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.FrameId">
            <summary>
            Frame ID for frame owner elements and also for the document node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.ContentDocumentIndex">
            <summary>
            The index of a frame owner element's content document in the `domNodes` array returned by
            `getSnapshot`, if any.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.pseudoType">
            <summary>
            Type of a pseudo element node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.shadowRootType">
            <summary>
            Shadow root type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.IsClickable">
            <summary>
            Whether this DOM node responds to mouse clicks. This includes nodes that have had click
            event listeners attached via JavaScript as well as anchor tags that naturally navigate when
            clicked.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.EventListeners">
            <summary>
            Details of the node's event listeners, if any.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.CurrentSourceURL">
            <summary>
            The selected url for nodes with a srcset attribute.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.OriginURL">
            <summary>
            The url of the script (if any) that generates this node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.ScrollOffsetX">
            <summary>
            Scroll offsets, set when this node is a Document.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DOMNode.ScrollOffsetY">
            <summary>
            ScrollOffsetY
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.InlineTextBox">
            <summary>
            Details of post layout rendered text positions. The exact layout should not be regarded as
            stable and may change between versions.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.InlineTextBox.BoundingBox">
            <summary>
            The bounding box in document coordinates. Note that scroll offset of the document is ignored.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.InlineTextBox.StartCharacterIndex">
            <summary>
            The starting index in characters, for this post layout textbox substring. Characters that
            would be represented as a surrogate pair in UTF-16 have length 2.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.InlineTextBox.NumCharacters">
            <summary>
            The number of characters in this post layout textbox substring. Characters that would be
            represented as a surrogate pair in UTF-16 have length 2.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.LayoutTreeNode">
            <summary>
            Details of an element in the DOM tree with a LayoutObject.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeNode.DomNodeIndex">
            <summary>
            The index of the related DOM node in the `domNodes` array returned by `getSnapshot`.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeNode.BoundingBox">
            <summary>
            The bounding box in document coordinates. Note that scroll offset of the document is ignored.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeNode.LayoutText">
            <summary>
            Contents of the LayoutText, if any.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeNode.InlineTextNodes">
            <summary>
            The post-layout inline text nodes, if any.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeNode.StyleIndex">
            <summary>
            Index into the `computedStyles` array returned by `getSnapshot`.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeNode.PaintOrder">
            <summary>
            Global paint order index, which is determined by the stacking order of the nodes. Nodes
            that are painted together will have the same index. Only provided if includePaintOrder in
            getSnapshot was true.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeNode.IsStackingContext">
            <summary>
            Set to true to indicate the element begins a new stacking context.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.ComputedStyle">
            <summary>
            A subset of the full ComputedStyle as defined by the request whitelist.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.ComputedStyle.Properties">
            <summary>
            Name/value pairs of computed style properties.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.NameValue">
            <summary>
            A name/value pair.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NameValue.Name">
            <summary>
            Attribute/property name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NameValue.Value">
            <summary>
            Attribute/property value.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.RareStringData">
            <summary>
            Data that is only present on rare nodes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.RareStringData.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.RareStringData.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.RareBooleanData">
            <summary>
            RareBooleanData
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.RareBooleanData.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.RareIntegerData">
            <summary>
            RareIntegerData
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.RareIntegerData.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.RareIntegerData.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot">
            <summary>
            Document snapshot.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.DocumentURL">
            <summary>
            Document URL that `Document` or `FrameOwner` node points to.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.Title">
            <summary>
            Document title.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.BaseURL">
            <summary>
            Base URL that `Document` or `FrameOwner` node uses for URL completion.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.ContentLanguage">
            <summary>
            Contains the document's content language.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.EncodingName">
            <summary>
            Contains the document's character set encoding.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.PublicId">
            <summary>
            `DocumentType` node's publicId.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.SystemId">
            <summary>
            `DocumentType` node's systemId.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.FrameId">
            <summary>
            Frame ID for frame owner elements and also for the document node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.Nodes">
            <summary>
            A table with dom nodes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.Layout">
            <summary>
            The nodes in the layout tree.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.TextBoxes">
            <summary>
            The post-layout inline text nodes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.ScrollOffsetX">
            <summary>
            Horizontal scroll offset.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.ScrollOffsetY">
            <summary>
            Vertical scroll offset.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.ContentWidth">
            <summary>
            Document content width.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.DocumentSnapshot.ContentHeight">
            <summary>
            Document content height.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot">
            <summary>
            Table containing nodes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.ParentIndex">
            <summary>
            Parent node index.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.NodeType">
            <summary>
            `Node`'s nodeType.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.NodeName">
            <summary>
            `Node`'s nodeName.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.NodeValue">
            <summary>
            `Node`'s nodeValue.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.BackendNodeId">
            <summary>
            `Node`'s id, corresponds to DOM.Node.backendNodeId.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.Attributes">
            <summary>
            Attributes of an `Element` node. Flatten name, value pairs.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.TextValue">
            <summary>
            Only set for textarea elements, contains the text value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.InputValue">
            <summary>
            Only set for input elements, contains the input's associated text value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.InputChecked">
            <summary>
            Only set for radio and checkbox input elements, indicates if the element has been checked
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.OptionSelected">
            <summary>
            Only set for option elements, indicates if the element has been selected
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.ContentDocumentIndex">
            <summary>
            The index of the document in the list of the snapshot documents.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.PseudoType">
            <summary>
            Type of a pseudo element node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.IsClickable">
            <summary>
            Whether this DOM node responds to mouse clicks. This includes nodes that have had click
            event listeners attached via JavaScript as well as anchor tags that naturally navigate when
            clicked.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.CurrentSourceURL">
            <summary>
            The selected url for nodes with a srcset attribute.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.NodeTreeSnapshot.OriginURL">
            <summary>
            The url of the script (if any) that generates this node.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.LayoutTreeSnapshot">
            <summary>
            Table of details of an element in the DOM tree with a LayoutObject.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeSnapshot.NodeIndex">
            <summary>
            Index of the corresponding node in the `NodeTreeSnapshot` array returned by `captureSnapshot`.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeSnapshot.Styles">
            <summary>
            Array of indexes specifying computed style strings, filtered according to the `computedStyles` parameter passed to `captureSnapshot`.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeSnapshot.Bounds">
            <summary>
            The absolute position bounding box.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeSnapshot.Text">
            <summary>
            Contents of the LayoutText, if any.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeSnapshot.StackingContexts">
            <summary>
            Stacking context information.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeSnapshot.PaintOrders">
            <summary>
            Global paint order index, which is determined by the stacking order of the nodes. Nodes
            that are painted together will have the same index. Only provided if includePaintOrder in
            captureSnapshot was true.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeSnapshot.OffsetRects">
            <summary>
            The offset rect of nodes. Only available when includeDOMRects is set to true
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeSnapshot.ScrollRects">
            <summary>
            The scroll rect of nodes. Only available when includeDOMRects is set to true
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.LayoutTreeSnapshot.ClientRects">
            <summary>
            The client rect of nodes. Only available when includeDOMRects is set to true
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.TextBoxSnapshot">
            <summary>
            Table of details of the post layout rendered text positions. The exact layout should not be regarded as
            stable and may change between versions.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.TextBoxSnapshot.LayoutIndex">
            <summary>
            Index of the layout tree node that owns this box collection.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.TextBoxSnapshot.Bounds">
            <summary>
            The absolute position bounding box.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.TextBoxSnapshot.Start">
            <summary>
            The starting index in characters, for this post layout textbox substring. Characters that
            would be represented as a surrogate pair in UTF-16 have length 2.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.TextBoxSnapshot.Length">
            <summary>
            The number of characters in this post layout textbox substring. Characters that would be
            represented as a surrogate pair in UTF-16 have length 2.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.CaptureSnapshotResponse">
            <summary>
            CaptureSnapshotResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.CaptureSnapshotResponse.Documents">
            <summary>
            documents
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMSnapshot.CaptureSnapshotResponse.Strings">
            <summary>
            strings
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMSnapshot.DOMSnapshotClient">
            <summary>
            This domain facilitates obtaining document snapshots with DOM, layout, and style information.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.DOMSnapshot.DOMSnapshotClient.DisableAsync">
            <summary>
            Disables DOM snapshot agent for the given page.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOMSnapshot.DOMSnapshotClient.EnableAsync">
            <summary>
            Enables DOM snapshot agent for the given page.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOMSnapshot.DOMSnapshotClient.CaptureSnapshotAsync(System.String[],System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns a document snapshot, including the full DOM tree of the root node (including iframes,
            template contents, and imported documents) in a flattened array, as well as layout and
            white-listed computed style information for the nodes. Shadow DOM in the returned DOM tree is
            flattened.
            </summary>
            <param name = "computedStyles">Whitelist of computed styles to return.</param>
            <param name = "includePaintOrder">Whether to include layout object paint orders into the snapshot.</param>
            <param name = "includeDOMRects">Whether to include DOM rectangles (offsetRects, clientRects, scrollRects) into the snapshot</param>
            <returns>returns System.Threading.Tasks.Task&lt;CaptureSnapshotResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.DOMStorage.StorageId">
            <summary>
            DOM Storage identifier.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMStorage.StorageId.SecurityOrigin">
            <summary>
            Security origin for the storage.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMStorage.StorageId.IsLocalStorage">
            <summary>
            Whether the storage is local storage (not session storage).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMStorage.GetDOMStorageItemsResponse">
            <summary>
            GetDOMStorageItemsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DOMStorage.GetDOMStorageItemsResponse.Entries">
            <summary>
            entries
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DOMStorage.DOMStorageClient">
            <summary>
            Query and modify DOM storage.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.DOMStorage.DOMStorageClient.ClearAsync(CefSharp.DevTools.DOMStorage.StorageId)">
            <summary>
            Clear
            </summary>
            <param name = "storageId">storageId</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOMStorage.DOMStorageClient.DisableAsync">
            <summary>
            Disables storage tracking, prevents storage events from being sent to the client.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOMStorage.DOMStorageClient.EnableAsync">
            <summary>
            Enables storage tracking, storage events will now be delivered to the client.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOMStorage.DOMStorageClient.GetDOMStorageItemsAsync(CefSharp.DevTools.DOMStorage.StorageId)">
            <summary>
            GetDOMStorageItems
            </summary>
            <param name = "storageId">storageId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetDOMStorageItemsResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOMStorage.DOMStorageClient.RemoveDOMStorageItemAsync(CefSharp.DevTools.DOMStorage.StorageId,System.String)">
            <summary>
            RemoveDOMStorageItem
            </summary>
            <param name = "storageId">storageId</param>
            <param name = "key">key</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DOMStorage.DOMStorageClient.SetDOMStorageItemAsync(CefSharp.DevTools.DOMStorage.StorageId,System.String,System.String)">
            <summary>
            SetDOMStorageItem
            </summary>
            <param name = "storageId">storageId</param>
            <param name = "key">key</param>
            <param name = "value">value</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Database.Database">
            <summary>
            Database object.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Database.Database.Id">
            <summary>
            Database ID.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Database.Database.Domain">
            <summary>
            Database domain.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Database.Database.Name">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Database.Database.Version">
            <summary>
            Database version.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Database.Error">
            <summary>
            Database error.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Database.Error.Message">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Database.Error.Code">
            <summary>
            Error code.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Database.ExecuteSQLResponse">
            <summary>
            ExecuteSQLResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Database.ExecuteSQLResponse.ColumnNames">
            <summary>
            columnNames
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Database.ExecuteSQLResponse.Values">
            <summary>
            values
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Database.ExecuteSQLResponse.SqlError">
            <summary>
            sqlError
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Database.GetDatabaseTableNamesResponse">
            <summary>
            GetDatabaseTableNamesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Database.GetDatabaseTableNamesResponse.TableNames">
            <summary>
            tableNames
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Database.DatabaseClient">
            <summary>
            Database
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Database.DatabaseClient.DisableAsync">
            <summary>
            Disables database tracking, prevents database events from being sent to the client.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Database.DatabaseClient.EnableAsync">
            <summary>
            Enables database tracking, database events will now be delivered to the client.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Database.DatabaseClient.ExecuteSQLAsync(System.String,System.String)">
            <summary>
            ExecuteSQL
            </summary>
            <param name = "databaseId">databaseId</param>
            <param name = "query">query</param>
            <returns>returns System.Threading.Tasks.Task&lt;ExecuteSQLResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Database.DatabaseClient.GetDatabaseTableNamesAsync(System.String)">
            <summary>
            GetDatabaseTableNames
            </summary>
            <param name = "databaseId">databaseId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetDatabaseTableNamesResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Emulation.ScreenOrientation">
            <summary>
            Screen orientation.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.ScreenOrientation.Type">
            <summary>
            Orientation type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.ScreenOrientation.Angle">
            <summary>
            Orientation angle.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Emulation.DisplayFeature">
            <summary>
            DisplayFeature
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.DisplayFeature.Orientation">
            <summary>
            Orientation of a display feature in relation to screen
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.DisplayFeature.Offset">
            <summary>
            The offset from the screen origin in either the x (for vertical
            orientation) or y (for horizontal orientation) direction.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.DisplayFeature.MaskLength">
            <summary>
            A display feature may mask content such that it is not physically
            displayed - this length along with the offset describes this area.
            A display feature that only splits content will have a 0 mask_length.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Emulation.MediaFeature">
            <summary>
            MediaFeature
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.MediaFeature.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.MediaFeature.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Emulation.VirtualTimePolicy">
            <summary>
            advance: If the scheduler runs out of immediate work, the virtual time base may fast forward to
            allow the next delayed task (if any) to run; pause: The virtual time base may not advance;
            pauseIfNetworkFetchesPending: The virtual time base may not advance if there are any pending
            resource fetches.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Emulation.VirtualTimePolicy.Advance">
            <summary>
            advance
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Emulation.VirtualTimePolicy.Pause">
            <summary>
            pause
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Emulation.VirtualTimePolicy.PauseIfNetworkFetchesPending">
            <summary>
            pauseIfNetworkFetchesPending
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Emulation.UserAgentBrandVersion">
            <summary>
            Used to specify User Agent Cient Hints to emulate. See https://wicg.github.io/ua-client-hints
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.UserAgentBrandVersion.Brand">
            <summary>
            Brand
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.UserAgentBrandVersion.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Emulation.UserAgentMetadata">
            <summary>
            Used to specify User Agent Cient Hints to emulate. See https://wicg.github.io/ua-client-hints
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.UserAgentMetadata.Brands">
            <summary>
            Brands
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.UserAgentMetadata.FullVersion">
            <summary>
            FullVersion
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.UserAgentMetadata.Platform">
            <summary>
            Platform
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.UserAgentMetadata.PlatformVersion">
            <summary>
            PlatformVersion
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.UserAgentMetadata.Architecture">
            <summary>
            Architecture
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.UserAgentMetadata.Model">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.UserAgentMetadata.Mobile">
            <summary>
            Mobile
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Emulation.CanEmulateResponse">
            <summary>
            CanEmulateResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.CanEmulateResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Emulation.SetVirtualTimePolicyResponse">
            <summary>
            SetVirtualTimePolicyResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Emulation.SetVirtualTimePolicyResponse.VirtualTimeTicksBase">
            <summary>
            virtualTimeTicksBase
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Emulation.EmulationClient">
            <summary>
            This domain emulates different environments for the page.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.CanEmulateAsync">
            <summary>
            Tells whether emulation is supported.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;CanEmulateResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.ClearDeviceMetricsOverrideAsync">
            <summary>
            Clears the overriden device metrics.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.ClearGeolocationOverrideAsync">
            <summary>
            Clears the overriden Geolocation Position and Error.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.ResetPageScaleFactorAsync">
            <summary>
            Requests that page scale factor is reset to initial values.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetFocusEmulationEnabledAsync(System.Boolean)">
            <summary>
            Enables or disables simulating a focused and active page.
            </summary>
            <param name = "enabled">Whether to enable to disable focus emulation.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetCPUThrottlingRateAsync(System.Int64)">
            <summary>
            Enables CPU throttling to emulate slow CPUs.
            </summary>
            <param name = "rate">Throttling rate as a slowdown factor (1 is no throttle, 2 is 2x slowdown, etc).</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Emulation.EmulationClient.SetDefaultBackgroundColorOverrideAsync(CefSharp.DevTools.DOM.RGBA)" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Emulation.EmulationClient.SetDeviceMetricsOverrideAsync(System.Int32,System.Int32,System.Int64,System.Boolean,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},CefSharp.DevTools.Emulation.ScreenOrientation,CefSharp.DevTools.Page.Viewport,CefSharp.DevTools.Emulation.DisplayFeature)" -->
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetScrollbarsHiddenAsync(System.Boolean)">
            <summary>
            SetScrollbarsHidden
            </summary>
            <param name = "hidden">Whether scrollbars should be always hidden.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetDocumentCookieDisabledAsync(System.Boolean)">
            <summary>
            SetDocumentCookieDisabled
            </summary>
            <param name = "disabled">Whether document.coookie API should be disabled.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetEmitTouchEventsForMouseAsync(System.Boolean,System.String)">
            <summary>
            SetEmitTouchEventsForMouse
            </summary>
            <param name = "enabled">Whether touch emulation based on mouse input should be enabled.</param>
            <param name = "configuration">Touch/gesture events configuration. Default: current platform.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetEmulatedMediaAsync(System.String,System.Collections.Generic.IList{CefSharp.DevTools.Emulation.MediaFeature})">
            <summary>
            Emulates the given media type or media feature for CSS media queries.
            </summary>
            <param name = "media">Media type to emulate. Empty string disables the override.</param>
            <param name = "features">Media features to emulate.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetEmulatedVisionDeficiencyAsync(System.String)">
            <summary>
            Emulates the given vision deficiency.
            </summary>
            <param name = "type">Vision deficiency to emulate.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetGeolocationOverrideAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Overrides the Geolocation Position or Error. Omitting any of the parameters emulates position
            unavailable.
            </summary>
            <param name = "latitude">Mock latitude</param>
            <param name = "longitude">Mock longitude</param>
            <param name = "accuracy">Mock accuracy</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetIdleOverrideAsync(System.Boolean,System.Boolean)">
            <summary>
            Overrides the Idle state.
            </summary>
            <param name = "isUserActive">Mock isUserActive</param>
            <param name = "isScreenUnlocked">Mock isScreenUnlocked</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.ClearIdleOverrideAsync">
            <summary>
            Clears Idle state overrides.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetPageScaleFactorAsync(System.Int64)">
            <summary>
            Sets a specified page scale factor.
            </summary>
            <param name = "pageScaleFactor">Page scale factor.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetScriptExecutionDisabledAsync(System.Boolean)">
            <summary>
            Switches script execution in the page.
            </summary>
            <param name = "value">Whether script execution should be disabled in the page.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetTouchEmulationEnabledAsync(System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Enables touch on platforms which do not support them.
            </summary>
            <param name = "enabled">Whether the touch event emulation should be enabled.</param>
            <param name = "maxTouchPoints">Maximum touch points supported. Defaults to one.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Emulation.EmulationClient.SetVirtualTimePolicyAsync(CefSharp.DevTools.Emulation.VirtualTimePolicy,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int64})" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Emulation.EmulationClient.SetLocaleOverrideAsync(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Emulation.EmulationClient.SetTimezoneOverrideAsync(System.String)" -->
        <member name="M:CefSharp.DevTools.Emulation.EmulationClient.SetUserAgentOverrideAsync(System.String,System.String,System.String,CefSharp.DevTools.Emulation.UserAgentMetadata)">
            <summary>
            Allows overriding user agent with the given string.
            </summary>
            <param name = "userAgent">User agent to use.</param>
            <param name = "acceptLanguage">Browser langugage to emulate.</param>
            <param name = "platform">The platform navigator.platform should return.</param>
            <param name = "userAgentMetadata">To be sent in Sec-CH-UA-* headers and returned in navigator.userAgentData</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.HeadlessExperimental.ScreenshotParams">
            <summary>
            Encoding options for a screenshot.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeadlessExperimental.ScreenshotParams.Format">
            <summary>
            Image compression format (defaults to png).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeadlessExperimental.ScreenshotParams.Quality">
            <summary>
            Compression quality from range [0..100] (jpeg only).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.HeadlessExperimental.BeginFrameResponse">
            <summary>
            BeginFrameResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeadlessExperimental.BeginFrameResponse.HasDamage">
            <summary>
            hasDamage
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeadlessExperimental.BeginFrameResponse.ScreenshotData">
            <summary>
            screenshotData
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.HeadlessExperimental.HeadlessExperimentalClient">
            <summary>
            This domain provides experimental commands only supported in headless mode.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.HeadlessExperimental.HeadlessExperimentalClient.BeginFrameAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},CefSharp.DevTools.HeadlessExperimental.ScreenshotParams)" -->
        <member name="M:CefSharp.DevTools.HeadlessExperimental.HeadlessExperimentalClient.DisableAsync">
            <summary>
            Disables headless events for the target.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.HeadlessExperimental.HeadlessExperimentalClient.EnableAsync">
            <summary>
            Enables headless events for the target.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.IndexedDB.DatabaseWithObjectStores">
            <summary>
            Database with an array of object stores.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.DatabaseWithObjectStores.Name">
            <summary>
            Database name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.DatabaseWithObjectStores.Version">
            <summary>
            Database version (type is not 'integer', as the standard
            requires the version number to be 'unsigned long long')
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.DatabaseWithObjectStores.ObjectStores">
            <summary>
            Object stores in this database.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IndexedDB.ObjectStore">
            <summary>
            Object store.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.ObjectStore.Name">
            <summary>
            Object store name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.ObjectStore.KeyPath">
            <summary>
            Object store key path.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.ObjectStore.AutoIncrement">
            <summary>
            If true, object store has auto increment flag set.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.ObjectStore.Indexes">
            <summary>
            Indexes in this object store.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IndexedDB.ObjectStoreIndex">
            <summary>
            Object store index.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.ObjectStoreIndex.Name">
            <summary>
            Index name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.ObjectStoreIndex.KeyPath">
            <summary>
            Index key path.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.ObjectStoreIndex.Unique">
            <summary>
            If true, index is unique.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.ObjectStoreIndex.MultiEntry">
            <summary>
            If true, index allows multiple entries for a key.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IndexedDB.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.Key.Type">
            <summary>
            Key type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.Key.Number">
            <summary>
            Number value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.Key.String">
            <summary>
            String value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.Key.Date">
            <summary>
            Date value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.Key.Array">
            <summary>
            Array value.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IndexedDB.KeyRange">
            <summary>
            Key range.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.KeyRange.Lower">
            <summary>
            Lower bound.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.KeyRange.Upper">
            <summary>
            Upper bound.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.KeyRange.LowerOpen">
            <summary>
            If true lower bound is open.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.KeyRange.UpperOpen">
            <summary>
            If true upper bound is open.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IndexedDB.DataEntry">
            <summary>
            Data entry.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.DataEntry.Key">
            <summary>
            Key object.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.DataEntry.PrimaryKey">
            <summary>
            Primary key object.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.DataEntry.Value">
            <summary>
            Value object.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IndexedDB.KeyPath">
            <summary>
            Key path.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.KeyPath.Type">
            <summary>
            Key path type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.KeyPath.String">
            <summary>
            String value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.KeyPath.Array">
            <summary>
            Array value.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IndexedDB.RequestDataResponse">
            <summary>
            RequestDataResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.RequestDataResponse.ObjectStoreDataEntries">
            <summary>
            objectStoreDataEntries
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.RequestDataResponse.HasMore">
            <summary>
            hasMore
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IndexedDB.GetMetadataResponse">
            <summary>
            GetMetadataResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.GetMetadataResponse.EntriesCount">
            <summary>
            entriesCount
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.GetMetadataResponse.KeyGeneratorValue">
            <summary>
            keyGeneratorValue
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IndexedDB.RequestDatabaseResponse">
            <summary>
            RequestDatabaseResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.RequestDatabaseResponse.DatabaseWithObjectStores">
            <summary>
            databaseWithObjectStores
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IndexedDB.RequestDatabaseNamesResponse">
            <summary>
            RequestDatabaseNamesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IndexedDB.RequestDatabaseNamesResponse.DatabaseNames">
            <summary>
            databaseNames
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IndexedDB.IndexedDBClient">
            <summary>
            IndexedDB
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.IndexedDB.IndexedDBClient.ClearObjectStoreAsync(System.String,System.String,System.String)">
            <summary>
            Clears all entries from an object store.
            </summary>
            <param name = "securityOrigin">Security origin.</param>
            <param name = "databaseName">Database name.</param>
            <param name = "objectStoreName">Object store name.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.IndexedDB.IndexedDBClient.DeleteDatabaseAsync(System.String,System.String)">
            <summary>
            Deletes a database.
            </summary>
            <param name = "securityOrigin">Security origin.</param>
            <param name = "databaseName">Database name.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.IndexedDB.IndexedDBClient.DeleteObjectStoreEntriesAsync(System.String,System.String,System.String,CefSharp.DevTools.IndexedDB.KeyRange)">
            <summary>
            Delete a range of entries from an object store
            </summary>
            <param name = "securityOrigin">securityOrigin</param>
            <param name = "databaseName">databaseName</param>
            <param name = "objectStoreName">objectStoreName</param>
            <param name = "keyRange">Range of entry keys to delete</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.IndexedDB.IndexedDBClient.DisableAsync">
            <summary>
            Disables events from backend.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.IndexedDB.IndexedDBClient.EnableAsync">
            <summary>
            Enables events from backend.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.IndexedDB.IndexedDBClient.RequestDataAsync(System.String,System.String,System.String,System.String,System.Int32,System.Int32,CefSharp.DevTools.IndexedDB.KeyRange)">
            <summary>
            Requests data from object store or index.
            </summary>
            <param name = "securityOrigin">Security origin.</param>
            <param name = "databaseName">Database name.</param>
            <param name = "objectStoreName">Object store name.</param>
            <param name = "indexName">Index name, empty string for object store data requests.</param>
            <param name = "skipCount">Number of records to skip.</param>
            <param name = "pageSize">Number of records to fetch.</param>
            <param name = "keyRange">Key range.</param>
            <returns>returns System.Threading.Tasks.Task&lt;RequestDataResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.IndexedDB.IndexedDBClient.GetMetadataAsync(System.String,System.String,System.String)">
            <summary>
            Gets metadata of an object store
            </summary>
            <param name = "securityOrigin">Security origin.</param>
            <param name = "databaseName">Database name.</param>
            <param name = "objectStoreName">Object store name.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetMetadataResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.IndexedDB.IndexedDBClient.RequestDatabaseAsync(System.String,System.String)">
            <summary>
            Requests database with given name in given frame.
            </summary>
            <param name = "securityOrigin">Security origin.</param>
            <param name = "databaseName">Database name.</param>
            <returns>returns System.Threading.Tasks.Task&lt;RequestDatabaseResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.IndexedDB.IndexedDBClient.RequestDatabaseNamesAsync(System.String)">
            <summary>
            Requests database names for given security origin.
            </summary>
            <param name = "securityOrigin">Security origin.</param>
            <returns>returns System.Threading.Tasks.Task&lt;RequestDatabaseNamesResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Input.TouchPoint">
            <summary>
            TouchPoint
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Input.TouchPoint.X">
            <summary>
            X coordinate of the event relative to the main frame's viewport in CSS pixels.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Input.TouchPoint.Y">
            <summary>
            Y coordinate of the event relative to the main frame's viewport in CSS pixels. 0 refers to
            the top of the viewport and Y increases as it proceeds towards the bottom of the viewport.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Input.TouchPoint.RadiusX">
            <summary>
            X radius of the touch area (default: 1.0).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Input.TouchPoint.RadiusY">
            <summary>
            Y radius of the touch area (default: 1.0).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Input.TouchPoint.RotationAngle">
            <summary>
            Rotation angle (default: 0.0).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Input.TouchPoint.Force">
            <summary>
            Force (default: 1.0).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Input.TouchPoint.Id">
            <summary>
            Identifier used to track touch sources between events, must be unique within an event.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Input.GestureSourceType">
            <summary>
            GestureSourceType
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Input.GestureSourceType.Default">
            <summary>
            default
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Input.GestureSourceType.Touch">
            <summary>
            touch
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Input.GestureSourceType.Mouse">
            <summary>
            mouse
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Input.MouseButton">
            <summary>
            MouseButton
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Input.MouseButton.None">
            <summary>
            none
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Input.MouseButton.Left">
            <summary>
            left
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Input.MouseButton.Middle">
            <summary>
            middle
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Input.MouseButton.Right">
            <summary>
            right
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Input.MouseButton.Back">
            <summary>
            back
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Input.MouseButton.Forward">
            <summary>
            forward
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Input.InputClient">
            <summary>
            Input
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Input.InputClient.DispatchKeyEventAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String[])" -->
        <member name="M:CefSharp.DevTools.Input.InputClient.InsertTextAsync(System.String)">
            <summary>
            This method emulates inserting text that doesn't come from a key press,
            for example an emoji keyboard or an IME.
            </summary>
            <param name = "text">The text to insert.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Input.InputClient.DispatchMouseEventAsync(System.String,System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{CefSharp.DevTools.Input.MouseButton},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Input.InputClient.DispatchTouchEventAsync(System.String,System.Collections.Generic.IList{CefSharp.DevTools.Input.TouchPoint},System.Nullable{System.Int32},System.Nullable{System.Int64})" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Input.InputClient.EmulateTouchFromMouseEventAsync(System.String,System.Int32,System.Int32,CefSharp.DevTools.Input.MouseButton,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32})" -->
        <member name="M:CefSharp.DevTools.Input.InputClient.SetIgnoreInputEventsAsync(System.Boolean)">
            <summary>
            Ignores input events (useful while auditing page).
            </summary>
            <param name = "ignore">Ignores input events processing when set to true.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Input.InputClient.SynthesizePinchGestureAsync(System.Int64,System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{CefSharp.DevTools.Input.GestureSourceType})" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Input.InputClient.SynthesizeScrollGestureAsync(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{CefSharp.DevTools.Input.GestureSourceType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Input.InputClient.SynthesizeTapGestureAsync(System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{CefSharp.DevTools.Input.GestureSourceType})" -->
        <member name="T:CefSharp.DevTools.LayerTree.ScrollRect">
            <summary>
            Rectangle where scrolling happens on the main thread.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.ScrollRect.Rect">
            <summary>
            Rectangle itself.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.ScrollRect.Type">
            <summary>
            Reason for rectangle to force scrolling on the main thread
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.LayerTree.StickyPositionConstraint">
            <summary>
            Sticky position constraints.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.StickyPositionConstraint.StickyBoxRect">
            <summary>
            Layout rectangle of the sticky element before being shifted
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.StickyPositionConstraint.ContainingBlockRect">
            <summary>
            Layout rectangle of the containing block of the sticky element
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.StickyPositionConstraint.NearestLayerShiftingStickyBox">
            <summary>
            The nearest sticky layer that shifts the sticky box
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.StickyPositionConstraint.NearestLayerShiftingContainingBlock">
            <summary>
            The nearest sticky layer that shifts the containing block
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.LayerTree.PictureTile">
            <summary>
            Serialized fragment of layer picture along with its offset within the layer.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.PictureTile.X">
            <summary>
            Offset from owning layer left boundary
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.PictureTile.Y">
            <summary>
            Offset from owning layer top boundary
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.PictureTile.Picture">
            <summary>
            Base64-encoded snapshot data.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.LayerTree.Layer">
            <summary>
            Information about a compositing layer.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.LayerId">
            <summary>
            The unique id for this layer.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.ParentLayerId">
            <summary>
            The id of parent (not present for root).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.BackendNodeId">
            <summary>
            The backend id for the node associated with this layer.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.OffsetX">
            <summary>
            Offset from parent layer, X coordinate.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.OffsetY">
            <summary>
            Offset from parent layer, Y coordinate.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.Width">
            <summary>
            Layer width.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.Height">
            <summary>
            Layer height.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.Transform">
            <summary>
            Transformation matrix for layer, default is identity matrix
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.AnchorX">
            <summary>
            Transform anchor point X, absent if no transform specified
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.AnchorY">
            <summary>
            Transform anchor point Y, absent if no transform specified
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.AnchorZ">
            <summary>
            Transform anchor point Z, absent if no transform specified
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.PaintCount">
            <summary>
            Indicates how many time this layer has painted.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.DrawsContent">
            <summary>
            Indicates whether this layer hosts any content, rather than being used for
            transform/scrolling purposes only.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.Invisible">
            <summary>
            Set if layer is not visible.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.ScrollRects">
            <summary>
            Rectangles scrolling on main thread only.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.Layer.StickyPositionConstraint">
            <summary>
            Sticky position constraint information
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.LayerTree.CompositingReasonsResponse">
            <summary>
            CompositingReasonsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.CompositingReasonsResponse.CompositingReasons">
            <summary>
            compositingReasons
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.CompositingReasonsResponse.CompositingReasonIds">
            <summary>
            compositingReasonIds
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.LayerTree.LoadSnapshotResponse">
            <summary>
            LoadSnapshotResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.LoadSnapshotResponse.SnapshotId">
            <summary>
            snapshotId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.LayerTree.MakeSnapshotResponse">
            <summary>
            MakeSnapshotResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.MakeSnapshotResponse.SnapshotId">
            <summary>
            snapshotId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.LayerTree.ProfileSnapshotResponse">
            <summary>
            ProfileSnapshotResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.ProfileSnapshotResponse.Timings">
            <summary>
            timings
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.LayerTree.ReplaySnapshotResponse">
            <summary>
            ReplaySnapshotResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.ReplaySnapshotResponse.DataURL">
            <summary>
            dataURL
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.LayerTree.SnapshotCommandLogResponse">
            <summary>
            SnapshotCommandLogResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.LayerTree.SnapshotCommandLogResponse.CommandLog">
            <summary>
            commandLog
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.LayerTree.LayerTreeClient">
            <summary>
            LayerTree
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.LayerTree.LayerTreeClient.CompositingReasonsAsync(System.String)">
            <summary>
            Provides the reasons why the given layer was composited.
            </summary>
            <param name = "layerId">The id of the layer for which we want to get the reasons it was composited.</param>
            <returns>returns System.Threading.Tasks.Task&lt;CompositingReasonsResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.LayerTree.LayerTreeClient.DisableAsync">
            <summary>
            Disables compositing tree inspection.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.LayerTree.LayerTreeClient.EnableAsync">
            <summary>
            Enables compositing tree inspection.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.LayerTree.LayerTreeClient.LoadSnapshotAsync(System.Collections.Generic.IList{CefSharp.DevTools.LayerTree.PictureTile})">
            <summary>
            Returns the snapshot identifier.
            </summary>
            <param name = "tiles">An array of tiles composing the snapshot.</param>
            <returns>returns System.Threading.Tasks.Task&lt;LoadSnapshotResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.LayerTree.LayerTreeClient.MakeSnapshotAsync(System.String)">
            <summary>
            Returns the layer snapshot identifier.
            </summary>
            <param name = "layerId">The id of the layer.</param>
            <returns>returns System.Threading.Tasks.Task&lt;MakeSnapshotResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.LayerTree.LayerTreeClient.ProfileSnapshotAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},CefSharp.DevTools.DOM.Rect)">
            <summary>
            ProfileSnapshot
            </summary>
            <param name = "snapshotId">The id of the layer snapshot.</param>
            <param name = "minRepeatCount">The maximum number of times to replay the snapshot (1, if not specified).</param>
            <param name = "minDuration">The minimum duration (in seconds) to replay the snapshot.</param>
            <param name = "clipRect">The clip rectangle to apply when replaying the snapshot.</param>
            <returns>returns System.Threading.Tasks.Task&lt;ProfileSnapshotResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.LayerTree.LayerTreeClient.ReleaseSnapshotAsync(System.String)">
            <summary>
            Releases layer snapshot captured by the back-end.
            </summary>
            <param name = "snapshotId">The id of the layer snapshot.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.LayerTree.LayerTreeClient.ReplaySnapshotAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64})">
            <summary>
            Replays the layer snapshot and returns the resulting bitmap.
            </summary>
            <param name = "snapshotId">The id of the layer snapshot.</param>
            <param name = "fromStep">The first step to replay from (replay from the very start if not specified).</param>
            <param name = "toStep">The last step to replay to (replay till the end if not specified).</param>
            <param name = "scale">The scale to apply while replaying (defaults to 1).</param>
            <returns>returns System.Threading.Tasks.Task&lt;ReplaySnapshotResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.LayerTree.LayerTreeClient.SnapshotCommandLogAsync(System.String)">
            <summary>
            Replays the layer snapshot and returns canvas log.
            </summary>
            <param name = "snapshotId">The id of the layer snapshot.</param>
            <returns>returns System.Threading.Tasks.Task&lt;SnapshotCommandLogResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Log.LogEntry">
            <summary>
            Log entry.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Log.LogEntry.Source">
            <summary>
            Log entry source.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Log.LogEntry.Level">
            <summary>
            Log entry severity.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Log.LogEntry.Text">
            <summary>
            Logged text.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Log.LogEntry.Timestamp">
            <summary>
            Timestamp when this entry was added.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Log.LogEntry.Url">
            <summary>
            URL of the resource if known.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Log.LogEntry.LineNumber">
            <summary>
            Line number in the resource.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Log.LogEntry.StackTrace">
            <summary>
            JavaScript stack trace.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Log.LogEntry.NetworkRequestId">
            <summary>
            Identifier of the network request associated with this entry.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Log.LogEntry.WorkerId">
            <summary>
            Identifier of the worker associated with this entry.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Log.LogEntry.Args">
            <summary>
            Call arguments.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Log.ViolationSetting">
            <summary>
            Violation configuration setting.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Log.ViolationSetting.Name">
            <summary>
            Violation type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Log.ViolationSetting.Threshold">
            <summary>
            Time threshold to trigger upon.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Log.LogClient">
            <summary>
            Provides access to log entries.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Log.LogClient.ClearAsync">
            <summary>
            Clears the log.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Log.LogClient.DisableAsync">
            <summary>
            Disables log domain, prevents further log entries from being reported to the client.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Log.LogClient.EnableAsync">
            <summary>
            Enables log domain, sends the entries collected so far to the client by means of the
            `entryAdded` notification.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Log.LogClient.StartViolationsReportAsync(System.Collections.Generic.IList{CefSharp.DevTools.Log.ViolationSetting})">
            <summary>
            start violation reporting.
            </summary>
            <param name = "config">Configuration for violations.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Log.LogClient.StopViolationsReportAsync">
            <summary>
            Stop violation reporting.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Memory.PressureLevel">
            <summary>
            Memory pressure level.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Memory.PressureLevel.Moderate">
            <summary>
            moderate
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Memory.PressureLevel.Critical">
            <summary>
            critical
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Memory.SamplingProfileNode">
            <summary>
            Heap profile sample.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.SamplingProfileNode.Size">
            <summary>
            Size of the sampled allocation.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.SamplingProfileNode.Total">
            <summary>
            Total bytes attributed to this sample.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.SamplingProfileNode.Stack">
            <summary>
            Execution stack at the point of allocation.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Memory.SamplingProfile">
            <summary>
            Array of heap profile samples.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.SamplingProfile.Samples">
            <summary>
            Samples
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.SamplingProfile.Modules">
            <summary>
            Modules
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Memory.Module">
            <summary>
            Executable module information
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.Module.Name">
            <summary>
            Name of the module.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.Module.Uuid">
            <summary>
            UUID of the module.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.Module.BaseAddress">
            <summary>
            Base address where the module is loaded into memory. Encoded as a decimal
            or hexadecimal (0x prefixed) string.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.Module.Size">
            <summary>
            Size of the module in bytes.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Memory.GetDOMCountersResponse">
            <summary>
            GetDOMCountersResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.GetDOMCountersResponse.Documents">
            <summary>
            documents
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.GetDOMCountersResponse.Nodes">
            <summary>
            nodes
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.GetDOMCountersResponse.JsEventListeners">
            <summary>
            jsEventListeners
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Memory.GetAllTimeSamplingProfileResponse">
            <summary>
            GetAllTimeSamplingProfileResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.GetAllTimeSamplingProfileResponse.Profile">
            <summary>
            profile
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Memory.GetBrowserSamplingProfileResponse">
            <summary>
            GetBrowserSamplingProfileResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.GetBrowserSamplingProfileResponse.Profile">
            <summary>
            profile
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Memory.GetSamplingProfileResponse">
            <summary>
            GetSamplingProfileResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Memory.GetSamplingProfileResponse.Profile">
            <summary>
            profile
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Memory.MemoryClient">
            <summary>
            Memory
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Memory.MemoryClient.GetDOMCountersAsync">
            <summary>
            GetDOMCounters
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetDOMCountersResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Memory.MemoryClient.PrepareForLeakDetectionAsync">
            <summary>
            PrepareForLeakDetection
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Memory.MemoryClient.ForciblyPurgeJavaScriptMemoryAsync">
            <summary>
            Simulate OomIntervention by purging V8 memory.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Memory.MemoryClient.SetPressureNotificationsSuppressedAsync(System.Boolean)">
            <summary>
            Enable/disable suppressing memory pressure notifications in all processes.
            </summary>
            <param name = "suppressed">If true, memory pressure notifications will be suppressed.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Memory.MemoryClient.SimulatePressureNotificationAsync(CefSharp.DevTools.Memory.PressureLevel)">
            <summary>
            Simulate a memory pressure notification in all processes.
            </summary>
            <param name = "level">Memory pressure level of the notification.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Memory.MemoryClient.StartSamplingAsync(System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Start collecting native memory profile.
            </summary>
            <param name = "samplingInterval">Average number of bytes between samples.</param>
            <param name = "suppressRandomness">Do not randomize intervals between samples.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Memory.MemoryClient.StopSamplingAsync">
            <summary>
            Stop collecting native memory profile.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Memory.MemoryClient.GetAllTimeSamplingProfileAsync">
            <summary>
            Retrieve native memory allocations profile
            collected since renderer process startup.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetAllTimeSamplingProfileResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Memory.MemoryClient.GetBrowserSamplingProfileAsync">
            <summary>
            Retrieve native memory allocations profile
            collected since browser process startup.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetBrowserSamplingProfileResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Memory.MemoryClient.GetSamplingProfileAsync">
            <summary>
            Retrieve native memory allocations profile collected since last
            `startSampling` call.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetSamplingProfileResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Network.ResourceType">
            <summary>
            Resource type as it was perceived by the rendering engine.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.Document">
            <summary>
            Document
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.Stylesheet">
            <summary>
            Stylesheet
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.Media">
            <summary>
            Media
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.Script">
            <summary>
            Script
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.TextTrack">
            <summary>
            TextTrack
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.XHR">
            <summary>
            XHR
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.Fetch">
            <summary>
            Fetch
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.EventSource">
            <summary>
            EventSource
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.WebSocket">
            <summary>
            WebSocket
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.Manifest">
            <summary>
            Manifest
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.SignedExchange">
            <summary>
            SignedExchange
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.Ping">
            <summary>
            Ping
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.CSPViolationReport">
            <summary>
            CSPViolationReport
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourceType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.ErrorReason">
            <summary>
            Network level fetch failure reason.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.Aborted">
            <summary>
            Aborted
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.TimedOut">
            <summary>
            TimedOut
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.AccessDenied">
            <summary>
            AccessDenied
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.ConnectionClosed">
            <summary>
            ConnectionClosed
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.ConnectionReset">
            <summary>
            ConnectionReset
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.ConnectionRefused">
            <summary>
            ConnectionRefused
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.ConnectionAborted">
            <summary>
            ConnectionAborted
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.ConnectionFailed">
            <summary>
            ConnectionFailed
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.NameNotResolved">
            <summary>
            NameNotResolved
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.InternetDisconnected">
            <summary>
            InternetDisconnected
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.AddressUnreachable">
            <summary>
            AddressUnreachable
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.BlockedByClient">
            <summary>
            BlockedByClient
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ErrorReason.BlockedByResponse">
            <summary>
            BlockedByResponse
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.ConnectionType">
            <summary>
            The underlying connection technology that the browser is supposedly using.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ConnectionType.None">
            <summary>
            none
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ConnectionType.Cellular2g">
            <summary>
            cellular2g
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ConnectionType.Cellular3g">
            <summary>
            cellular3g
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ConnectionType.Cellular4g">
            <summary>
            cellular4g
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ConnectionType.Bluetooth">
            <summary>
            bluetooth
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ConnectionType.Ethernet">
            <summary>
            ethernet
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ConnectionType.Wifi">
            <summary>
            wifi
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ConnectionType.Wimax">
            <summary>
            wimax
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ConnectionType.Other">
            <summary>
            other
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.CookieSameSite">
            <summary>
            Represents the cookie's 'SameSite' status:
            https://tools.ietf.org/html/draft-west-first-party-cookies
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookieSameSite.Strict">
            <summary>
            Strict
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookieSameSite.Lax">
            <summary>
            Lax
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookieSameSite.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.CookiePriority">
            <summary>
            Represents the cookie's 'Priority' status:
            https://tools.ietf.org/html/draft-west-cookie-priority-00
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookiePriority.Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookiePriority.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookiePriority.High">
            <summary>
            High
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.ResourceTiming">
            <summary>
            Timing information for the request.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.RequestTime">
            <summary>
            Timing's requestTime is a baseline in seconds, while the other numbers are ticks in
            milliseconds relatively to this requestTime.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.ProxyStart">
            <summary>
            Started resolving proxy.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.ProxyEnd">
            <summary>
            Finished resolving proxy.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.DnsStart">
            <summary>
            Started DNS address resolve.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.DnsEnd">
            <summary>
            Finished DNS address resolve.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.ConnectStart">
            <summary>
            Started connecting to the remote host.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.ConnectEnd">
            <summary>
            Connected to the remote host.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.SslStart">
            <summary>
            Started SSL handshake.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.SslEnd">
            <summary>
            Finished SSL handshake.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.WorkerStart">
            <summary>
            Started running ServiceWorker.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.WorkerReady">
            <summary>
            Finished Starting ServiceWorker.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.WorkerFetchStart">
            <summary>
            Started fetch event.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.WorkerRespondWithSettled">
            <summary>
            Settled fetch event respondWith promise.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.SendStart">
            <summary>
            Started sending request.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.SendEnd">
            <summary>
            Finished sending request.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.PushStart">
            <summary>
            Time the server started pushing request.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.PushEnd">
            <summary>
            Time the server finished pushing request.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.ResourceTiming.ReceiveHeadersEnd">
            <summary>
            Finished receiving response headers.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.ResourcePriority">
            <summary>
            Loading priority of a resource request.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourcePriority.VeryLow">
            <summary>
            VeryLow
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourcePriority.Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourcePriority.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourcePriority.High">
            <summary>
            High
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ResourcePriority.VeryHigh">
            <summary>
            VeryHigh
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.PostDataEntry">
            <summary>
            Post data entry for HTTP request
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.PostDataEntry.Bytes">
            <summary>
            Bytes
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.Request">
            <summary>
            HTTP request data.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Request.Url">
            <summary>
            Request URL (without fragment).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Request.UrlFragment">
            <summary>
            Fragment of the requested URL starting with hash, if present.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Request.Method">
            <summary>
            HTTP request method.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Request.Headers">
            <summary>
            HTTP request headers.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Request.PostData">
            <summary>
            HTTP POST request data.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Request.HasPostData">
            <summary>
            True when the request has POST data. Note that postData might still be omitted when this flag is true when the data is too long.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Request.PostDataEntries">
            <summary>
            Request body elements. This will be converted from base64 to binary
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Request.mixedContentType">
            <summary>
            The mixed content type of the request.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Request.initialPriority">
            <summary>
            Priority of the resource request at the time request is sent.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Request.ReferrerPolicy">
            <summary>
            The referrer policy of the request, as defined in https://www.w3.org/TR/referrer-policy/
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Request.IsLinkPreload">
            <summary>
            Whether is loaded via link preload.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.SignedCertificateTimestamp">
            <summary>
            Details of a signed certificate timestamp (SCT).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedCertificateTimestamp.Status">
            <summary>
            Validation status.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedCertificateTimestamp.Origin">
            <summary>
            Origin.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedCertificateTimestamp.LogDescription">
            <summary>
            Log name / description.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedCertificateTimestamp.LogId">
            <summary>
            Log ID.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedCertificateTimestamp.Timestamp">
            <summary>
            Issuance date.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedCertificateTimestamp.HashAlgorithm">
            <summary>
            Hash algorithm.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedCertificateTimestamp.SignatureAlgorithm">
            <summary>
            Signature algorithm.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedCertificateTimestamp.SignatureData">
            <summary>
            Signature data.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.SecurityDetails">
            <summary>
            Security details about a request.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.Protocol">
            <summary>
            Protocol name (e.g. "TLS 1.2" or "QUIC").
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.KeyExchange">
            <summary>
            Key Exchange used by the connection, or the empty string if not applicable.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.KeyExchangeGroup">
            <summary>
            (EC)DH group used by the connection, if applicable.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.Cipher">
            <summary>
            Cipher name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.Mac">
            <summary>
            TLS MAC. Note that AEAD ciphers do not have separate MACs.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.CertificateId">
            <summary>
            Certificate ID value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.SubjectName">
            <summary>
            Certificate subject name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.SanList">
            <summary>
            Subject Alternative Name (SAN) DNS names and IP addresses.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.Issuer">
            <summary>
            Name of the issuing CA.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.ValidFrom">
            <summary>
            Certificate valid from date.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.ValidTo">
            <summary>
            Certificate valid to (expiration) date
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.SignedCertificateTimestampList">
            <summary>
            List of signed certificate timestamps (SCTs).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityDetails.certificateTransparencyCompliance">
            <summary>
            Whether the request complied with Certificate Transparency policy
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.CertificateTransparencyCompliance">
            <summary>
            Whether the request complied with Certificate Transparency policy.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CertificateTransparencyCompliance.Unknown">
            <summary>
            unknown
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CertificateTransparencyCompliance.NotCompliant">
            <summary>
            not-compliant
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CertificateTransparencyCompliance.Compliant">
            <summary>
            compliant
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.BlockedReason">
            <summary>
            The reason why request was blocked.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.Other">
            <summary>
            other
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.Csp">
            <summary>
            csp
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.MixedContent">
            <summary>
            mixed-content
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.Origin">
            <summary>
            origin
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.Inspector">
            <summary>
            inspector
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.SubresourceFilter">
            <summary>
            subresource-filter
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.ContentType">
            <summary>
            content-type
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.CollapsedByClient">
            <summary>
            collapsed-by-client
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.CoepFrameResourceNeedsCoepHeader">
            <summary>
            coep-frame-resource-needs-coep-header
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.CoopSandboxedIframeCannotNavigateToCoopPage">
            <summary>
            coop-sandboxed-iframe-cannot-navigate-to-coop-page
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.CorpNotSameOrigin">
            <summary>
            corp-not-same-origin
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.CorpNotSameOriginAfterDefaultedToSameOriginByCoep">
            <summary>
            corp-not-same-origin-after-defaulted-to-same-origin-by-coep
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.BlockedReason.CorpNotSameSite">
            <summary>
            corp-not-same-site
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.ServiceWorkerResponseSource">
            <summary>
            Source of serviceworker response.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ServiceWorkerResponseSource.CacheStorage">
            <summary>
            cache-storage
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ServiceWorkerResponseSource.HttpCache">
            <summary>
            http-cache
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ServiceWorkerResponseSource.FallbackCode">
            <summary>
            fallback-code
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.ServiceWorkerResponseSource.Network">
            <summary>
            network
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.Response">
            <summary>
            HTTP response data.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.Url">
            <summary>
            Response URL. This URL can be different from CachedResource.url in case of redirect.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.Status">
            <summary>
            HTTP response status code.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.StatusText">
            <summary>
            HTTP response status text.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.Headers">
            <summary>
            HTTP response headers.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.HeadersText">
            <summary>
            HTTP response headers text.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.MimeType">
            <summary>
            Resource mimeType as determined by the browser.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.RequestHeaders">
            <summary>
            Refined HTTP request headers that were actually transmitted over the network.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.RequestHeadersText">
            <summary>
            HTTP request headers text.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.ConnectionReused">
            <summary>
            Specifies whether physical connection was actually reused for this request.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.ConnectionId">
            <summary>
            Physical connection id that was actually used for this request.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.RemoteIPAddress">
            <summary>
            Remote IP address.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.RemotePort">
            <summary>
            Remote port.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.FromDiskCache">
            <summary>
            Specifies that the request was served from the disk cache.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.FromServiceWorker">
            <summary>
            Specifies that the request was served from the ServiceWorker.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.FromPrefetchCache">
            <summary>
            Specifies that the request was served from the prefetch cache.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.EncodedDataLength">
            <summary>
            Total number of bytes received for this request so far.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.Timing">
            <summary>
            Timing information for the given request.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.serviceWorkerResponseSource">
            <summary>
            Response source of response from ServiceWorker.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.ResponseTime">
            <summary>
            The time at which the returned response was generated.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.CacheStorageCacheName">
            <summary>
            Cache Storage Cache Name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.Protocol">
            <summary>
            Protocol used to fetch this request.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.securityState">
            <summary>
            Security state of the request resource.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Response.SecurityDetails">
            <summary>
            Security details for the request.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.WebSocketRequest">
            <summary>
            WebSocket request data.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.WebSocketRequest.Headers">
            <summary>
            HTTP request headers.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.WebSocketResponse">
            <summary>
            WebSocket response data.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.WebSocketResponse.Status">
            <summary>
            HTTP response status code.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.WebSocketResponse.StatusText">
            <summary>
            HTTP response status text.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.WebSocketResponse.Headers">
            <summary>
            HTTP response headers.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.WebSocketResponse.HeadersText">
            <summary>
            HTTP response headers text.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.WebSocketResponse.RequestHeaders">
            <summary>
            HTTP request headers.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.WebSocketResponse.RequestHeadersText">
            <summary>
            HTTP request headers text.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.WebSocketFrame">
            <summary>
            WebSocket message data. This represents an entire WebSocket message, not just a fragmented frame as the name suggests.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.WebSocketFrame.Opcode">
            <summary>
            WebSocket message opcode.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.WebSocketFrame.Mask">
            <summary>
            WebSocket message mask.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.WebSocketFrame.PayloadData">
            <summary>
            WebSocket message payload data.
            If the opcode is 1, this is a text message and payloadData is a UTF-8 string.
            If the opcode isn't 1, then payloadData is a base64 encoded string representing binary data.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.CachedResource">
            <summary>
            Information about the cached resource.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CachedResource.Url">
            <summary>
            Resource URL. This is the url of the original network request.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CachedResource.type">
            <summary>
            Type of this resource.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CachedResource.Response">
            <summary>
            Cached response data.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CachedResource.BodySize">
            <summary>
            Cached response body size.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.Initiator">
            <summary>
            Information about the request initiator.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Initiator.Type">
            <summary>
            Type of this initiator.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Initiator.Stack">
            <summary>
            Initiator JavaScript stack trace, set for Script only.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Initiator.Url">
            <summary>
            Initiator URL, set for Parser type or for Script type (when script is importing module) or for SignedExchange type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Initiator.LineNumber">
            <summary>
            Initiator line number, set for Parser type or for Script type (when script is importing
            module) (0-based).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.Cookie">
            <summary>
            Cookie object
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Cookie.Name">
            <summary>
            Cookie name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Cookie.Value">
            <summary>
            Cookie value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Cookie.Domain">
            <summary>
            Cookie domain.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Cookie.Path">
            <summary>
            Cookie path.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Cookie.Expires">
            <summary>
            Cookie expiration date as the number of seconds since the UNIX epoch.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Cookie.Size">
            <summary>
            Cookie size.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Cookie.HttpOnly">
            <summary>
            True if cookie is http-only.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Cookie.Secure">
            <summary>
            True if cookie is secure.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Cookie.Session">
            <summary>
            True in case of session cookie.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Cookie.sameSite">
            <summary>
            Cookie SameSite type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.Cookie.priority">
            <summary>
            Cookie Priority
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.SetCookieBlockedReason">
            <summary>
            Types of reasons why a cookie may not be stored from a response.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SetCookieBlockedReason.SecureOnly">
            <summary>
            SecureOnly
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SetCookieBlockedReason.SameSiteStrict">
            <summary>
            SameSiteStrict
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SetCookieBlockedReason.SameSiteLax">
            <summary>
            SameSiteLax
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SetCookieBlockedReason.SameSiteUnspecifiedTreatedAsLax">
            <summary>
            SameSiteUnspecifiedTreatedAsLax
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SetCookieBlockedReason.SameSiteNoneInsecure">
            <summary>
            SameSiteNoneInsecure
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SetCookieBlockedReason.UserPreferences">
            <summary>
            UserPreferences
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SetCookieBlockedReason.SyntaxError">
            <summary>
            SyntaxError
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SetCookieBlockedReason.SchemeNotSupported">
            <summary>
            SchemeNotSupported
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SetCookieBlockedReason.OverwriteSecure">
            <summary>
            OverwriteSecure
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SetCookieBlockedReason.InvalidDomain">
            <summary>
            InvalidDomain
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SetCookieBlockedReason.InvalidPrefix">
            <summary>
            InvalidPrefix
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SetCookieBlockedReason.UnknownError">
            <summary>
            UnknownError
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.CookieBlockedReason">
            <summary>
            Types of reasons why a cookie may not be sent with a request.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookieBlockedReason.SecureOnly">
            <summary>
            SecureOnly
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookieBlockedReason.NotOnPath">
            <summary>
            NotOnPath
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookieBlockedReason.DomainMismatch">
            <summary>
            DomainMismatch
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookieBlockedReason.SameSiteStrict">
            <summary>
            SameSiteStrict
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookieBlockedReason.SameSiteLax">
            <summary>
            SameSiteLax
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookieBlockedReason.SameSiteUnspecifiedTreatedAsLax">
            <summary>
            SameSiteUnspecifiedTreatedAsLax
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookieBlockedReason.SameSiteNoneInsecure">
            <summary>
            SameSiteNoneInsecure
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookieBlockedReason.UserPreferences">
            <summary>
            UserPreferences
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CookieBlockedReason.UnknownError">
            <summary>
            UnknownError
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.BlockedSetCookieWithReason">
            <summary>
            A cookie which was not stored from a response with the corresponding reason.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.BlockedSetCookieWithReason.blockedReasons">
            <summary>
            The reason(s) this cookie was blocked.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.BlockedSetCookieWithReason.CookieLine">
            <summary>
            The string representing this individual cookie as it would appear in the header.
            This is not the entire "cookie" or "set-cookie" header which could have multiple cookies.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.BlockedSetCookieWithReason.Cookie">
            <summary>
            The cookie object which represents the cookie which was not stored. It is optional because
            sometimes complete cookie information is not available, such as in the case of parsing
            errors.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.BlockedCookieWithReason">
            <summary>
            A cookie with was not sent with a request with the corresponding reason.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.BlockedCookieWithReason.blockedReasons">
            <summary>
            The reason(s) the cookie was blocked.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.BlockedCookieWithReason.Cookie">
            <summary>
            The cookie object representing the cookie which was not sent.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.CookieParam">
            <summary>
            Cookie parameter object
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CookieParam.Name">
            <summary>
            Cookie name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CookieParam.Value">
            <summary>
            Cookie value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CookieParam.Url">
            <summary>
            The request-URI to associate with the setting of the cookie. This value can affect the
            default domain and path values of the created cookie.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CookieParam.Domain">
            <summary>
            Cookie domain.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CookieParam.Path">
            <summary>
            Cookie path.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CookieParam.Secure">
            <summary>
            True if cookie is secure.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CookieParam.HttpOnly">
            <summary>
            True if cookie is http-only.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CookieParam.sameSite">
            <summary>
            Cookie SameSite type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CookieParam.Expires">
            <summary>
            Cookie expiration date, session cookie if not set
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CookieParam.priority">
            <summary>
            Cookie Priority.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.AuthChallenge">
            <summary>
            Authorization challenge for HTTP status code 401 or 407.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.AuthChallenge.Source">
            <summary>
            Source of the authentication challenge.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.AuthChallenge.Origin">
            <summary>
            Origin of the challenger.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.AuthChallenge.Scheme">
            <summary>
            The authentication scheme used, such as basic or digest
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.AuthChallenge.Realm">
            <summary>
            The realm of the challenge. May be empty.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.AuthChallengeResponse">
            <summary>
            Response to an AuthChallenge.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.AuthChallengeResponse.Response">
            <summary>
            The decision on what to do in response to the authorization challenge.  Default means
            deferring to the default behavior of the net stack, which will likely either the Cancel
            authentication or display a popup dialog box.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.AuthChallengeResponse.Username">
            <summary>
            The username to provide, possibly empty. Should only be set if response is
            ProvideCredentials.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.AuthChallengeResponse.Password">
            <summary>
            The password to provide, possibly empty. Should only be set if response is
            ProvideCredentials.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.InterceptionStage">
            <summary>
            Stages of the interception to begin intercepting. Request will intercept before the request is
            sent. Response will intercept after the response is received.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.InterceptionStage.Request">
            <summary>
            Request
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.InterceptionStage.HeadersReceived">
            <summary>
            HeadersReceived
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.RequestPattern">
            <summary>
            Request pattern for interception.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.RequestPattern.UrlPattern">
            <summary>
            Wildcards ('*' -> zero or more, '?' -> exactly one) are allowed. Escape character is
            backslash. Omitting is equivalent to "*".
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.RequestPattern.resourceType">
            <summary>
            If set, only requests for matching resource types will be intercepted.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.RequestPattern.interceptionStage">
            <summary>
            Stage at wich to begin intercepting requests. Default is Request.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.SignedExchangeSignature">
            <summary>
            Information about a signed exchange signature.
            https://wicg.github.io/webpackage/draft-yasskin-httpbis-origin-signed-exchanges-impl.html#rfc.section.3.1
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeSignature.Label">
            <summary>
            Signed exchange signature label.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeSignature.Signature">
            <summary>
            The hex string of signed exchange signature.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeSignature.Integrity">
            <summary>
            Signed exchange signature integrity.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeSignature.CertUrl">
            <summary>
            Signed exchange signature cert Url.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeSignature.CertSha256">
            <summary>
            The hex string of signed exchange signature cert sha256.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeSignature.ValidityUrl">
            <summary>
            Signed exchange signature validity Url.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeSignature.Date">
            <summary>
            Signed exchange signature date.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeSignature.Expires">
            <summary>
            Signed exchange signature expires.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeSignature.Certificates">
            <summary>
            The encoded certificates.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.SignedExchangeHeader">
            <summary>
            Information about a signed exchange header.
            https://wicg.github.io/webpackage/draft-yasskin-httpbis-origin-signed-exchanges-impl.html#cbor-representation
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeHeader.RequestUrl">
            <summary>
            Signed exchange request URL.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeHeader.ResponseCode">
            <summary>
            Signed exchange response code.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeHeader.ResponseHeaders">
            <summary>
            Signed exchange response headers.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeHeader.Signatures">
            <summary>
            Signed exchange response signature.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:CefSharp.DevTools.Network.SignedExchangeHeader.HeaderIntegrity" -->
        <member name="T:CefSharp.DevTools.Network.SignedExchangeErrorField">
            <summary>
            Field type for a signed exchange related error.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SignedExchangeErrorField.SignatureSig">
            <summary>
            signatureSig
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SignedExchangeErrorField.SignatureIntegrity">
            <summary>
            signatureIntegrity
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SignedExchangeErrorField.SignatureCertUrl">
            <summary>
            signatureCertUrl
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SignedExchangeErrorField.SignatureCertSha256">
            <summary>
            signatureCertSha256
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SignedExchangeErrorField.SignatureValidityUrl">
            <summary>
            signatureValidityUrl
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.SignedExchangeErrorField.SignatureTimestamps">
            <summary>
            signatureTimestamps
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.SignedExchangeError">
            <summary>
            Information about a signed exchange response.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeError.Message">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeError.SignatureIndex">
            <summary>
            The index of the signature which caused the error.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeError.errorField">
            <summary>
            The field which caused the error.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.SignedExchangeInfo">
            <summary>
            Information about a signed exchange response.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeInfo.OuterResponse">
            <summary>
            The outer response of signed HTTP exchange which was received from network.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeInfo.Header">
            <summary>
            Information about the signed exchange header.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeInfo.SecurityDetails">
            <summary>
            Security details for the signed exchange header.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SignedExchangeInfo.Errors">
            <summary>
            Errors occurred while handling the signed exchagne.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.CrossOriginOpenerPolicyValue">
            <summary>
            CrossOriginOpenerPolicyValue
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CrossOriginOpenerPolicyValue.SameOrigin">
            <summary>
            SameOrigin
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CrossOriginOpenerPolicyValue.SameOriginAllowPopups">
            <summary>
            SameOriginAllowPopups
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CrossOriginOpenerPolicyValue.UnsafeNone">
            <summary>
            UnsafeNone
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CrossOriginOpenerPolicyValue.SameOriginPlusCoep">
            <summary>
            SameOriginPlusCoep
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.CrossOriginOpenerPolicyStatus">
            <summary>
            CrossOriginOpenerPolicyStatus
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CrossOriginOpenerPolicyStatus.value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.CrossOriginEmbedderPolicyValue">
            <summary>
            CrossOriginEmbedderPolicyValue
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CrossOriginEmbedderPolicyValue.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Network.CrossOriginEmbedderPolicyValue.RequireCorp">
            <summary>
            RequireCorp
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.CrossOriginEmbedderPolicyStatus">
            <summary>
            CrossOriginEmbedderPolicyStatus
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.CrossOriginEmbedderPolicyStatus.value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.SecurityIsolationStatus">
            <summary>
            SecurityIsolationStatus
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityIsolationStatus.Coop">
            <summary>
            Coop
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SecurityIsolationStatus.Coep">
            <summary>
            Coep
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.GetAllCookiesResponse">
            <summary>
            GetAllCookiesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.GetAllCookiesResponse.Cookies">
            <summary>
            cookies
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.GetCertificateResponse">
            <summary>
            GetCertificateResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.GetCertificateResponse.TableNames">
            <summary>
            tableNames
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.GetCookiesResponse">
            <summary>
            GetCookiesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.GetCookiesResponse.Cookies">
            <summary>
            cookies
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.GetResponseBodyResponse">
            <summary>
            GetResponseBodyResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.GetResponseBodyResponse.Body">
            <summary>
            body
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.GetResponseBodyResponse.Base64Encoded">
            <summary>
            base64Encoded
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.GetRequestPostDataResponse">
            <summary>
            GetRequestPostDataResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.GetRequestPostDataResponse.PostData">
            <summary>
            postData
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.GetResponseBodyForInterceptionResponse">
            <summary>
            GetResponseBodyForInterceptionResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.GetResponseBodyForInterceptionResponse.Body">
            <summary>
            body
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.GetResponseBodyForInterceptionResponse.Base64Encoded">
            <summary>
            base64Encoded
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.TakeResponseBodyForInterceptionAsStreamResponse">
            <summary>
            TakeResponseBodyForInterceptionAsStreamResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.TakeResponseBodyForInterceptionAsStreamResponse.Stream">
            <summary>
            stream
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.SearchInResponseBodyResponse">
            <summary>
            SearchInResponseBodyResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SearchInResponseBodyResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.SetCookieResponse">
            <summary>
            SetCookieResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.SetCookieResponse.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.GetSecurityIsolationStatusResponse">
            <summary>
            GetSecurityIsolationStatusResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Network.GetSecurityIsolationStatusResponse.Status">
            <summary>
            status
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Network.NetworkClient">
            <summary>
            Network domain allows tracking network activities of the page. It exposes information about http,
            file, data and other requests and responses, their headers, bodies, timing, etc.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.ClearBrowserCacheAsync">
            <summary>
            Clears browser cache.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.ClearBrowserCookiesAsync">
            <summary>
            Clears browser cookies.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Network.NetworkClient.DeleteCookiesAsync(System.String,System.String,System.String,System.String)" -->
        <member name="M:CefSharp.DevTools.Network.NetworkClient.DisableAsync">
            <summary>
            Disables network tracking, prevents network events from being sent to the client.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.EmulateNetworkConditionsAsync(System.Boolean,System.Int64,System.Int64,System.Int64,System.Nullable{CefSharp.DevTools.Network.ConnectionType})">
            <summary>
            Activates emulation of network conditions.
            </summary>
            <param name = "offline">True to emulate internet disconnection.</param>
            <param name = "latency">Minimum latency from request sent to response headers received (ms).</param>
            <param name = "downloadThroughput">Maximal aggregated download throughput (bytes/sec). -1 disables download throttling.</param>
            <param name = "uploadThroughput">Maximal aggregated upload throughput (bytes/sec).  -1 disables upload throttling.</param>
            <param name = "connectionType">Connection type if known.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.EnableAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Enables network tracking, network events will now be delivered to the client.
            </summary>
            <param name = "maxTotalBufferSize">Buffer size in bytes to use when preserving network payloads (XHRs, etc).</param>
            <param name = "maxResourceBufferSize">Per-resource buffer size in bytes to use when preserving network payloads (XHRs, etc).</param>
            <param name = "maxPostDataSize">Longest post body size (in bytes) that would be included in requestWillBeSent notification</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.GetAllCookiesAsync">
            <summary>
            Returns all browser cookies. Depending on the backend support, will return detailed cookie
            information in the `cookies` field.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetAllCookiesResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.GetCertificateAsync(System.String)">
            <summary>
            Returns the DER-encoded certificate.
            </summary>
            <param name = "origin">Origin to get certificate for.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetCertificateResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Network.NetworkClient.GetCookiesAsync(System.String[])" -->
        <member name="M:CefSharp.DevTools.Network.NetworkClient.GetResponseBodyAsync(System.String)">
            <summary>
            Returns content served for the given request.
            </summary>
            <param name = "requestId">Identifier of the network request to get content for.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetResponseBodyResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.GetRequestPostDataAsync(System.String)">
            <summary>
            Returns post data sent with the request. Returns an error when no data was sent with the request.
            </summary>
            <param name = "requestId">Identifier of the network request to get content for.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetRequestPostDataResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.GetResponseBodyForInterceptionAsync(System.String)">
            <summary>
            Returns content served for the given currently intercepted request.
            </summary>
            <param name = "interceptionId">Identifier for the intercepted request to get body for.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetResponseBodyForInterceptionResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.TakeResponseBodyForInterceptionAsStreamAsync(System.String)">
            <summary>
            Returns a handle to the stream representing the response body. Note that after this command,
            the intercepted request can't be continued as is -- you either need to cancel it or to provide
            the response body. The stream only supports sequential read, IO.read will fail if the position
            is specified.
            </summary>
            <param name = "interceptionId">interceptionId</param>
            <returns>returns System.Threading.Tasks.Task&lt;TakeResponseBodyForInterceptionAsStreamResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.ReplayXHRAsync(System.String)">
            <summary>
            This method sends a new XMLHttpRequest which is identical to the original one. The following
            parameters should be identical: method, url, async, request body, extra headers, withCredentials
            attribute, user, password.
            </summary>
            <param name = "requestId">Identifier of XHR to replay.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.SearchInResponseBodyAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Searches for given string in response content.
            </summary>
            <param name = "requestId">Identifier of the network response to search.</param>
            <param name = "query">String to search for.</param>
            <param name = "caseSensitive">If true, search is case sensitive.</param>
            <param name = "isRegex">If true, treats string parameter as regex.</param>
            <returns>returns System.Threading.Tasks.Task&lt;SearchInResponseBodyResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.SetBlockedURLsAsync(System.String[])">
            <summary>
            Blocks URLs from loading.
            </summary>
            <param name = "urls">URL patterns to block. Wildcards ('*') are allowed.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.SetBypassServiceWorkerAsync(System.Boolean)">
            <summary>
            Toggles ignoring of service worker for each request.
            </summary>
            <param name = "bypass">Bypass service worker and load from network.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.SetCacheDisabledAsync(System.Boolean)">
            <summary>
            Toggles ignoring cache for each request. If `true`, cache will not be used.
            </summary>
            <param name = "cacheDisabled">Cache disabled state.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Network.NetworkClient.SetCookieAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{CefSharp.DevTools.Network.CookieSameSite},System.Nullable{System.Int64},System.Nullable{CefSharp.DevTools.Network.CookiePriority})" -->
        <member name="M:CefSharp.DevTools.Network.NetworkClient.SetCookiesAsync(System.Collections.Generic.IList{CefSharp.DevTools.Network.CookieParam})">
            <summary>
            Sets given cookies.
            </summary>
            <param name = "cookies">Cookies to be set.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.SetDataSizeLimitsForTestAsync(System.Int32,System.Int32)">
            <summary>
            For testing.
            </summary>
            <param name = "maxTotalSize">Maximum total buffer size.</param>
            <param name = "maxResourceSize">Maximum per-resource size.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.SetExtraHTTPHeadersAsync(CefSharp.DevTools.Network.Headers)">
            <summary>
            Specifies whether to always send extra HTTP headers with the requests from this page.
            </summary>
            <param name = "headers">Map with extra HTTP headers.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.SetUserAgentOverrideAsync(System.String,System.String,System.String,CefSharp.DevTools.Emulation.UserAgentMetadata)">
            <summary>
            Allows overriding user agent with the given string.
            </summary>
            <param name = "userAgent">User agent to use.</param>
            <param name = "acceptLanguage">Browser langugage to emulate.</param>
            <param name = "platform">The platform navigator.platform should return.</param>
            <param name = "userAgentMetadata">To be sent in Sec-CH-UA-* headers and returned in navigator.userAgentData</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Network.NetworkClient.GetSecurityIsolationStatusAsync(System.String)">
            <summary>
            Returns information about the COEP/COOP isolation status.
            </summary>
            <param name = "frameId">If no frameId is provided, the status of the target is provided.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetSecurityIsolationStatusResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Overlay.SourceOrderConfig">
            <summary>
            Configuration data for drawing the source order of an elements children.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.SourceOrderConfig.ParentOutlineColor">
            <summary>
            the color to outline the givent element in.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.SourceOrderConfig.ChildOutlineColor">
            <summary>
            the color to outline the child elements in.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Overlay.GridHighlightConfig">
            <summary>
            Configuration data for the highlighting of Grid elements.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.ShowGridExtensionLines">
            <summary>
            Whether the extension lines from grid cells to the rulers should be shown (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.ShowPositiveLineNumbers">
            <summary>
            Show Positive line number labels (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.ShowNegativeLineNumbers">
            <summary>
            Show Negative line number labels (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.ShowAreaNames">
            <summary>
            Show area name labels (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.ShowLineNames">
            <summary>
            Show line name labels (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.ShowTrackSizes">
            <summary>
            Show track size labels (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.GridBorderColor">
            <summary>
            The grid container border highlight color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.CellBorderColor">
            <summary>
            The cell border color (default: transparent). Deprecated, please use rowLineColor and columnLineColor instead.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.RowLineColor">
            <summary>
            The row line color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.ColumnLineColor">
            <summary>
            The column line color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.GridBorderDash">
            <summary>
            Whether the grid border is dashed (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.CellBorderDash">
            <summary>
            Whether the cell border is dashed (default: false). Deprecated, please us rowLineDash and columnLineDash instead.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.RowLineDash">
            <summary>
            Whether row lines are dashed (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.ColumnLineDash">
            <summary>
            Whether column lines are dashed (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.RowGapColor">
            <summary>
            The row gap highlight fill color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.RowHatchColor">
            <summary>
            The row gap hatching fill color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.ColumnGapColor">
            <summary>
            The column gap highlight fill color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.ColumnHatchColor">
            <summary>
            The column gap hatching fill color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridHighlightConfig.AreaBorderColor">
            <summary>
            The named grid areas border color (Default: transparent).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Overlay.HighlightConfig">
            <summary>
            Configuration data for the highlighting of page elements.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.ShowInfo">
            <summary>
            Whether the node info tooltip should be shown (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.ShowStyles">
            <summary>
            Whether the node styles in the tooltip (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.ShowRulers">
            <summary>
            Whether the rulers should be shown (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.ShowAccessibilityInfo">
            <summary>
            Whether the a11y info should be shown (default: true).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.ShowExtensionLines">
            <summary>
            Whether the extension lines from node to the rulers should be shown (default: false).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.ContentColor">
            <summary>
            The content box highlight fill color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.PaddingColor">
            <summary>
            The padding highlight fill color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.BorderColor">
            <summary>
            The border highlight fill color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.MarginColor">
            <summary>
            The margin highlight fill color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.EventTargetColor">
            <summary>
            The event target element highlight fill color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.ShapeColor">
            <summary>
            The shape outside fill color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.ShapeMarginColor">
            <summary>
            The shape margin fill color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.CssGridColor">
            <summary>
            The grid layout color (default: transparent).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.colorFormat">
            <summary>
            The color format used to format color styles (default: hex).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HighlightConfig.GridHighlightConfig">
            <summary>
            The grid layout highlight configuration (default: all transparent).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Overlay.ColorFormat">
            <summary>
            ColorFormat
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Overlay.ColorFormat.Rgb">
            <summary>
            rgb
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Overlay.ColorFormat.Hsl">
            <summary>
            hsl
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Overlay.ColorFormat.Hex">
            <summary>
            hex
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Overlay.GridNodeHighlightConfig">
            <summary>
            Configurations for Persistent Grid Highlight
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridNodeHighlightConfig.GridHighlightConfig">
            <summary>
            A descriptor for the highlight appearance.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GridNodeHighlightConfig.NodeId">
            <summary>
            Identifier of the node to highlight.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Overlay.HingeConfig">
            <summary>
            Configuration for dual screen hinge
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HingeConfig.Rect">
            <summary>
            A rectangle represent hinge
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HingeConfig.ContentColor">
            <summary>
            The content box highlight fill color (default: a dark color).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.HingeConfig.OutlineColor">
            <summary>
            The content box highlight outline color (default: transparent).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Overlay.InspectMode">
            <summary>
            InspectMode
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Overlay.InspectMode.SearchForNode">
            <summary>
            searchForNode
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Overlay.InspectMode.SearchForUAShadowDOM">
            <summary>
            searchForUAShadowDOM
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Overlay.InspectMode.CaptureAreaScreenshot">
            <summary>
            captureAreaScreenshot
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Overlay.InspectMode.ShowDistances">
            <summary>
            showDistances
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Overlay.InspectMode.None">
            <summary>
            none
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Overlay.GetHighlightObjectForTestResponse">
            <summary>
            GetHighlightObjectForTestResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GetHighlightObjectForTestResponse.Highlight">
            <summary>
            highlight
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Overlay.GetGridHighlightObjectsForTestResponse">
            <summary>
            GetGridHighlightObjectsForTestResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GetGridHighlightObjectsForTestResponse.Highlights">
            <summary>
            highlights
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Overlay.GetSourceOrderHighlightObjectForTestResponse">
            <summary>
            GetSourceOrderHighlightObjectForTestResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Overlay.GetSourceOrderHighlightObjectForTestResponse.Highlight">
            <summary>
            highlight
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Overlay.OverlayClient">
            <summary>
            This domain provides various functionality related to drawing atop the inspected page.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.DisableAsync">
            <summary>
            Disables domain notifications.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.EnableAsync">
            <summary>
            Enables domain notifications.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.GetHighlightObjectForTestAsync(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{CefSharp.DevTools.Overlay.ColorFormat},System.Nullable{System.Boolean})">
            <summary>
            For testing.
            </summary>
            <param name = "nodeId">Id of the node to get highlight object for.</param>
            <param name = "includeDistance">Whether to include distance info.</param>
            <param name = "includeStyle">Whether to include style info.</param>
            <param name = "colorFormat">The color format to get config with (default: hex).</param>
            <param name = "showAccessibilityInfo">Whether to show accessibility info (default: true).</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetHighlightObjectForTestResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.GetGridHighlightObjectsForTestAsync(System.Int32[])">
            <summary>
            For Persistent Grid testing.
            </summary>
            <param name = "nodeIds">Ids of the node to get highlight object for.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetGridHighlightObjectsForTestResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.GetSourceOrderHighlightObjectForTestAsync(System.Int32)">
            <summary>
            For Source Order Viewer testing.
            </summary>
            <param name = "nodeId">Id of the node to highlight.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetSourceOrderHighlightObjectForTestResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.HideHighlightAsync">
            <summary>
            Hides any highlight.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.HighlightFrameAsync(System.String,CefSharp.DevTools.DOM.RGBA,CefSharp.DevTools.DOM.RGBA)">
            <summary>
            Highlights owner element of the frame with given id.
            </summary>
            <param name = "frameId">Identifier of the frame to highlight.</param>
            <param name = "contentColor">The content box highlight fill color (default: transparent).</param>
            <param name = "contentOutlineColor">The content box highlight outline color (default: transparent).</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.HighlightNodeAsync(CefSharp.DevTools.Overlay.HighlightConfig,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Highlights DOM node with given id or with the given JavaScript object wrapper. Either nodeId or
            objectId must be specified.
            </summary>
            <param name = "highlightConfig">A descriptor for the highlight appearance.</param>
            <param name = "nodeId">Identifier of the node to highlight.</param>
            <param name = "backendNodeId">Identifier of the backend node to highlight.</param>
            <param name = "objectId">JavaScript object id of the node to be highlighted.</param>
            <param name = "selector">Selectors to highlight relevant nodes.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.HighlightQuadAsync(System.Int64[],CefSharp.DevTools.DOM.RGBA,CefSharp.DevTools.DOM.RGBA)">
            <summary>
            Highlights given quad. Coordinates are absolute with respect to the main frame viewport.
            </summary>
            <param name = "quad">Quad to highlight</param>
            <param name = "color">The highlight fill color (default: transparent).</param>
            <param name = "outlineColor">The highlight outline color (default: transparent).</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.HighlightRectAsync(System.Int32,System.Int32,System.Int32,System.Int32,CefSharp.DevTools.DOM.RGBA,CefSharp.DevTools.DOM.RGBA)">
            <summary>
            Highlights given rectangle. Coordinates are absolute with respect to the main frame viewport.
            </summary>
            <param name = "x">X coordinate</param>
            <param name = "y">Y coordinate</param>
            <param name = "width">Rectangle width</param>
            <param name = "height">Rectangle height</param>
            <param name = "color">The highlight fill color (default: transparent).</param>
            <param name = "outlineColor">The highlight outline color (default: transparent).</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.HighlightSourceOrderAsync(CefSharp.DevTools.Overlay.SourceOrderConfig,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Highlights the source order of the children of the DOM node with given id or with the given
            JavaScript object wrapper. Either nodeId or objectId must be specified.
            </summary>
            <param name = "sourceOrderConfig">A descriptor for the appearance of the overlay drawing.</param>
            <param name = "nodeId">Identifier of the node to highlight.</param>
            <param name = "backendNodeId">Identifier of the backend node to highlight.</param>
            <param name = "objectId">JavaScript object id of the node to be highlighted.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Overlay.OverlayClient.SetInspectModeAsync(CefSharp.DevTools.Overlay.InspectMode,CefSharp.DevTools.Overlay.HighlightConfig)" -->
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.SetShowAdHighlightsAsync(System.Boolean)">
            <summary>
            Highlights owner element of all frames detected to be ads.
            </summary>
            <param name = "show">True for showing ad highlights</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.SetPausedInDebuggerMessageAsync(System.String)">
            <summary>
            SetPausedInDebuggerMessage
            </summary>
            <param name = "message">The message to display, also triggers resume and step over controls.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.SetShowDebugBordersAsync(System.Boolean)">
            <summary>
            Requests that backend shows debug borders on layers
            </summary>
            <param name = "show">True for showing debug borders</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.SetShowFPSCounterAsync(System.Boolean)">
            <summary>
            Requests that backend shows the FPS counter
            </summary>
            <param name = "show">True for showing the FPS counter</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.SetShowGridOverlaysAsync(System.Collections.Generic.IList{CefSharp.DevTools.Overlay.GridNodeHighlightConfig})">
            <summary>
            Highlight multiple elements with the CSS Grid overlay.
            </summary>
            <param name = "gridNodeHighlightConfigs">An array of node identifiers and descriptors for the highlight appearance.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.SetShowPaintRectsAsync(System.Boolean)">
            <summary>
            Requests that backend shows paint rectangles
            </summary>
            <param name = "result">True for showing paint rectangles</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.SetShowLayoutShiftRegionsAsync(System.Boolean)">
            <summary>
            Requests that backend shows layout shift regions
            </summary>
            <param name = "result">True for showing layout shift regions</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.SetShowScrollBottleneckRectsAsync(System.Boolean)">
            <summary>
            Requests that backend shows scroll bottleneck rects
            </summary>
            <param name = "show">True for showing scroll bottleneck rects</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.SetShowHitTestBordersAsync(System.Boolean)">
            <summary>
            Requests that backend shows hit-test borders on layers
            </summary>
            <param name = "show">True for showing hit-test borders</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.SetShowViewportSizeOnResizeAsync(System.Boolean)">
            <summary>
            Paints viewport size upon main frame resize.
            </summary>
            <param name = "show">Whether to paint size or not.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Overlay.OverlayClient.SetShowHingeAsync(CefSharp.DevTools.Overlay.HingeConfig)">
            <summary>
            Add a dual screen device hinge
            </summary>
            <param name = "hingeConfig">hinge data, null means hideHinge</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Page.AdFrameType">
            <summary>
            Indicates whether a frame has been identified as an ad.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.AdFrameType.None">
            <summary>
            none
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.AdFrameType.Child">
            <summary>
            child
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.AdFrameType.Root">
            <summary>
            root
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.SecureContextType">
            <summary>
            Indicates whether the frame is a secure context and why it is the case.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.SecureContextType.Secure">
            <summary>
            Secure
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.SecureContextType.SecureLocalhost">
            <summary>
            SecureLocalhost
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.SecureContextType.InsecureScheme">
            <summary>
            InsecureScheme
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.SecureContextType.InsecureAncestor">
            <summary>
            InsecureAncestor
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.CrossOriginIsolatedContextType">
            <summary>
            Indicates whether the frame is cross-origin isolated and why it is the case.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.CrossOriginIsolatedContextType.Isolated">
            <summary>
            Isolated
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.CrossOriginIsolatedContextType.NotIsolated">
            <summary>
            NotIsolated
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.CrossOriginIsolatedContextType.NotIsolatedFeatureDisabled">
            <summary>
            NotIsolatedFeatureDisabled
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.Frame">
            <summary>
            Information about the Frame on the page.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.Id">
            <summary>
            Frame unique identifier.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.ParentId">
            <summary>
            Parent frame identifier.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.LoaderId">
            <summary>
            Identifier of the loader associated with this frame.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.Name">
            <summary>
            Frame's name as specified in the tag.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.Url">
            <summary>
            Frame document's URL without fragment.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.UrlFragment">
            <summary>
            Frame document's URL fragment including the '#'.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.DomainAndRegistry">
            <summary>
            Frame document's registered domain, taking the public suffixes list into account.
            Extracted from the Frame's url.
            Example URLs: http://www.google.com/file.html -> "google.com"
                          http://a.b.co.uk/file.html      -> "b.co.uk"
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.SecurityOrigin">
            <summary>
            Frame document's security origin.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.MimeType">
            <summary>
            Frame document's mimeType as determined by the browser.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.UnreachableUrl">
            <summary>
            If the frame failed to load, this contains the URL that could not be loaded. Note that unlike url above, this URL may contain a fragment.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.adFrameType">
            <summary>
            Indicates whether this frame was tagged as an ad.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.secureContextType">
            <summary>
            Indicates whether the main document is a secure context and explains why that is the case.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Frame.crossOriginIsolatedContextType">
            <summary>
            Indicates whether this is a cross origin isolated context.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.FrameResource">
            <summary>
            Information about the Resource on the page.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FrameResource.Url">
            <summary>
            Resource URL.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FrameResource.type">
            <summary>
            Type of this resource.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FrameResource.MimeType">
            <summary>
            Resource mimeType as determined by the browser.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FrameResource.LastModified">
            <summary>
            last-modified timestamp as reported by server.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FrameResource.ContentSize">
            <summary>
            Resource content size.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FrameResource.Failed">
            <summary>
            True if the resource failed to load.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FrameResource.Canceled">
            <summary>
            True if the resource was canceled during loading.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.FrameResourceTree">
            <summary>
            Information about the Frame hierarchy along with their cached resources.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FrameResourceTree.Frame">
            <summary>
            Frame information for this tree item.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FrameResourceTree.ChildFrames">
            <summary>
            Child frames.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FrameResourceTree.Resources">
            <summary>
            Information about frame resources.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.FrameTree">
            <summary>
            Information about the Frame hierarchy.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FrameTree.Frame">
            <summary>
            Frame information for this tree item.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FrameTree.ChildFrames">
            <summary>
            Child frames.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.TransitionType">
            <summary>
            Transition type.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.Link">
            <summary>
            link
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.Typed">
            <summary>
            typed
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.AddressBar">
            <summary>
            address_bar
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.AutoBookmark">
            <summary>
            auto_bookmark
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.AutoSubframe">
            <summary>
            auto_subframe
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.ManualSubframe">
            <summary>
            manual_subframe
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.Generated">
            <summary>
            generated
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.AutoToplevel">
            <summary>
            auto_toplevel
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.FormSubmit">
            <summary>
            form_submit
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.Reload">
            <summary>
            reload
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.Keyword">
            <summary>
            keyword
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.KeywordGenerated">
            <summary>
            keyword_generated
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.TransitionType.Other">
            <summary>
            other
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.NavigationEntry">
            <summary>
            Navigation history entry.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.NavigationEntry.Id">
            <summary>
            Unique id of the navigation history entry.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.NavigationEntry.Url">
            <summary>
            URL of the navigation history entry.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.NavigationEntry.UserTypedURL">
            <summary>
            URL that the user typed in the url bar.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.NavigationEntry.Title">
            <summary>
            Title of the navigation history entry.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.NavigationEntry.transitionType">
            <summary>
            Transition type.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.ScreencastFrameMetadata">
            <summary>
            Screencast frame metadata.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.ScreencastFrameMetadata.OffsetTop">
            <summary>
            Top offset in DIP.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.ScreencastFrameMetadata.PageScaleFactor">
            <summary>
            Page scale factor.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.ScreencastFrameMetadata.DeviceWidth">
            <summary>
            Device screen width in DIP.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.ScreencastFrameMetadata.DeviceHeight">
            <summary>
            Device screen height in DIP.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.ScreencastFrameMetadata.ScrollOffsetX">
            <summary>
            Position of horizontal scroll in CSS pixels.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.ScreencastFrameMetadata.ScrollOffsetY">
            <summary>
            Position of vertical scroll in CSS pixels.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.ScreencastFrameMetadata.Timestamp">
            <summary>
            Frame swap timestamp.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.DialogType">
            <summary>
            Javascript dialog type.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.DialogType.Alert">
            <summary>
            alert
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.DialogType.Confirm">
            <summary>
            confirm
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.DialogType.Prompt">
            <summary>
            prompt
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.DialogType.Beforeunload">
            <summary>
            beforeunload
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.AppManifestError">
            <summary>
            Error while paring app manifest.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.AppManifestError.Message">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.AppManifestError.Critical">
            <summary>
            If criticial, this is a non-recoverable parse error.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.AppManifestError.Line">
            <summary>
            Error line.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.AppManifestError.Column">
            <summary>
            Error column.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.AppManifestParsedProperties">
            <summary>
            Parsed app manifest properties.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.AppManifestParsedProperties.Scope">
            <summary>
            Computed scope value
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.LayoutViewport">
            <summary>
            Layout viewport position and dimensions.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.LayoutViewport.PageX">
            <summary>
            Horizontal offset relative to the document (CSS pixels).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.LayoutViewport.PageY">
            <summary>
            Vertical offset relative to the document (CSS pixels).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.LayoutViewport.ClientWidth">
            <summary>
            Width (CSS pixels), excludes scrollbar if present.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.LayoutViewport.ClientHeight">
            <summary>
            Height (CSS pixels), excludes scrollbar if present.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.VisualViewport">
            <summary>
            Visual viewport position, dimensions, and scale.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.VisualViewport.OffsetX">
            <summary>
            Horizontal offset relative to the layout viewport (CSS pixels).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.VisualViewport.OffsetY">
            <summary>
            Vertical offset relative to the layout viewport (CSS pixels).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.VisualViewport.PageX">
            <summary>
            Horizontal offset relative to the document (CSS pixels).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.VisualViewport.PageY">
            <summary>
            Vertical offset relative to the document (CSS pixels).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.VisualViewport.ClientWidth">
            <summary>
            Width (CSS pixels), excludes scrollbar if present.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.VisualViewport.ClientHeight">
            <summary>
            Height (CSS pixels), excludes scrollbar if present.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.VisualViewport.Scale">
            <summary>
            Scale relative to the ideal viewport (size at width=device-width).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.VisualViewport.Zoom">
            <summary>
            Page zoom factor (CSS to device independent pixels ratio).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.Viewport">
            <summary>
            Viewport for capturing screenshot.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Viewport.X">
            <summary>
            X offset in device independent pixels (dip).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Viewport.Y">
            <summary>
            Y offset in device independent pixels (dip).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Viewport.Width">
            <summary>
            Rectangle width in device independent pixels (dip).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Viewport.Height">
            <summary>
            Rectangle height in device independent pixels (dip).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.Viewport.Scale">
            <summary>
            Page scale factor.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.FontFamilies">
            <summary>
            Generic font families collection.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FontFamilies.Standard">
            <summary>
            The standard font-family.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FontFamilies.Fixed">
            <summary>
            The fixed font-family.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FontFamilies.Serif">
            <summary>
            The serif font-family.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FontFamilies.SansSerif">
            <summary>
            The sansSerif font-family.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FontFamilies.Cursive">
            <summary>
            The cursive font-family.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FontFamilies.Fantasy">
            <summary>
            The fantasy font-family.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FontFamilies.Pictograph">
            <summary>
            The pictograph font-family.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.FontSizes">
            <summary>
            Default font sizes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FontSizes.Standard">
            <summary>
            Default standard font size.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.FontSizes.Fixed">
            <summary>
            Default fixed font size.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.ClientNavigationReason">
            <summary>
            ClientNavigationReason
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ClientNavigationReason.FormSubmissionGet">
            <summary>
            formSubmissionGet
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ClientNavigationReason.FormSubmissionPost">
            <summary>
            formSubmissionPost
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ClientNavigationReason.HttpHeaderRefresh">
            <summary>
            httpHeaderRefresh
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ClientNavigationReason.ScriptInitiated">
            <summary>
            scriptInitiated
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ClientNavigationReason.MetaTagRefresh">
            <summary>
            metaTagRefresh
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ClientNavigationReason.PageBlockInterstitial">
            <summary>
            pageBlockInterstitial
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ClientNavigationReason.Reload">
            <summary>
            reload
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ClientNavigationReason.AnchorClick">
            <summary>
            anchorClick
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.ClientNavigationDisposition">
            <summary>
            ClientNavigationDisposition
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ClientNavigationDisposition.CurrentTab">
            <summary>
            currentTab
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ClientNavigationDisposition.NewTab">
            <summary>
            newTab
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ClientNavigationDisposition.NewWindow">
            <summary>
            newWindow
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ClientNavigationDisposition.Download">
            <summary>
            download
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.InstallabilityErrorArgument">
            <summary>
            InstallabilityErrorArgument
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.InstallabilityErrorArgument.Name">
            <summary>
            Argument name (e.g. name:'minimum-icon-size-in-pixels').
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.InstallabilityErrorArgument.Value">
            <summary>
            Argument value (e.g. value:'64').
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.InstallabilityError">
            <summary>
            The installability error
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.InstallabilityError.ErrorId">
            <summary>
            The error id (e.g. 'manifest-missing-suitable-icon').
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.InstallabilityError.ErrorArguments">
            <summary>
            The list of error arguments (e.g. {name:'minimum-icon-size-in-pixels', value:'64'}).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.ReferrerPolicy">
            <summary>
            The referring-policy used for the navigation.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ReferrerPolicy.NoReferrer">
            <summary>
            noReferrer
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ReferrerPolicy.NoReferrerWhenDowngrade">
            <summary>
            noReferrerWhenDowngrade
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ReferrerPolicy.Origin">
            <summary>
            origin
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ReferrerPolicy.OriginWhenCrossOrigin">
            <summary>
            originWhenCrossOrigin
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ReferrerPolicy.SameOrigin">
            <summary>
            sameOrigin
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ReferrerPolicy.StrictOrigin">
            <summary>
            strictOrigin
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ReferrerPolicy.StrictOriginWhenCrossOrigin">
            <summary>
            strictOriginWhenCrossOrigin
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Page.ReferrerPolicy.UnsafeUrl">
            <summary>
            unsafeUrl
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.AddScriptToEvaluateOnNewDocumentResponse">
            <summary>
            AddScriptToEvaluateOnNewDocumentResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.AddScriptToEvaluateOnNewDocumentResponse.Identifier">
            <summary>
            identifier
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.CaptureScreenshotResponse">
            <summary>
            CaptureScreenshotResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.CaptureScreenshotResponse.Data">
            <summary>
            data
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.CaptureSnapshotResponse">
            <summary>
            CaptureSnapshotResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.CaptureSnapshotResponse.Data">
            <summary>
            data
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.CreateIsolatedWorldResponse">
            <summary>
            CreateIsolatedWorldResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.CreateIsolatedWorldResponse.ExecutionContextId">
            <summary>
            executionContextId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.GetAppManifestResponse">
            <summary>
            GetAppManifestResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetAppManifestResponse.Url">
            <summary>
            url
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetAppManifestResponse.Errors">
            <summary>
            errors
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetAppManifestResponse.Data">
            <summary>
            data
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetAppManifestResponse.Parsed">
            <summary>
            parsed
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.GetInstallabilityErrorsResponse">
            <summary>
            GetInstallabilityErrorsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetInstallabilityErrorsResponse.InstallabilityErrors">
            <summary>
            installabilityErrors
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.GetManifestIconsResponse">
            <summary>
            GetManifestIconsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetManifestIconsResponse.PrimaryIcon">
            <summary>
            primaryIcon
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.GetFrameTreeResponse">
            <summary>
            GetFrameTreeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetFrameTreeResponse.FrameTree">
            <summary>
            frameTree
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.GetLayoutMetricsResponse">
            <summary>
            GetLayoutMetricsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetLayoutMetricsResponse.LayoutViewport">
            <summary>
            layoutViewport
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetLayoutMetricsResponse.VisualViewport">
            <summary>
            visualViewport
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetLayoutMetricsResponse.ContentSize">
            <summary>
            contentSize
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.GetNavigationHistoryResponse">
            <summary>
            GetNavigationHistoryResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetNavigationHistoryResponse.CurrentIndex">
            <summary>
            currentIndex
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetNavigationHistoryResponse.Entries">
            <summary>
            entries
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.GetResourceContentResponse">
            <summary>
            GetResourceContentResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetResourceContentResponse.Content">
            <summary>
            content
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetResourceContentResponse.Base64Encoded">
            <summary>
            base64Encoded
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.GetResourceTreeResponse">
            <summary>
            GetResourceTreeResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.GetResourceTreeResponse.FrameTree">
            <summary>
            frameTree
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.NavigateResponse">
            <summary>
            NavigateResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.NavigateResponse.FrameId">
            <summary>
            frameId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.NavigateResponse.LoaderId">
            <summary>
            loaderId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.NavigateResponse.ErrorText">
            <summary>
            errorText
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.PrintToPDFResponse">
            <summary>
            PrintToPDFResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.PrintToPDFResponse.Data">
            <summary>
            data
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.PrintToPDFResponse.Stream">
            <summary>
            stream
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.SearchInResourceResponse">
            <summary>
            SearchInResourceResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Page.SearchInResourceResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Page.PageClient">
            <summary>
            Actions and events related to the inspected page belong to the page domain.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Page.PageClient.AddScriptToEvaluateOnNewDocumentAsync(System.String,System.String)" -->
        <member name="M:CefSharp.DevTools.Page.PageClient.BringToFrontAsync">
            <summary>
            Brings page to front (activates tab).
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.CaptureScreenshotAsync(System.String,System.Nullable{System.Int32},CefSharp.DevTools.Page.Viewport,System.Nullable{System.Boolean})">
            <summary>
            Capture page screenshot.
            </summary>
            <param name = "format">Image compression format (defaults to png).</param>
            <param name = "quality">Compression quality from range [0..100] (jpeg only).</param>
            <param name = "clip">Capture the screenshot of a given region only.</param>
            <param name = "fromSurface">Capture the screenshot from the surface, rather than the view. Defaults to true.</param>
            <returns>returns System.Threading.Tasks.Task&lt;CaptureScreenshotResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.CaptureSnapshotAsync(System.String)">
            <summary>
            Returns a snapshot of the page as a string. For MHTML format, the serialization includes
            iframes, shadow DOM, external resources, and element-inline styles.
            </summary>
            <param name = "format">Format (defaults to mhtml).</param>
            <returns>returns System.Threading.Tasks.Task&lt;CaptureSnapshotResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Page.PageClient.CreateIsolatedWorldAsync(System.String,System.String,System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.Page.PageClient.DisableAsync">
            <summary>
            Disables page domain notifications.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.EnableAsync">
            <summary>
            Enables page domain notifications.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.GetAppManifestAsync">
            <summary>
            GetAppManifest
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetAppManifestResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.GetInstallabilityErrorsAsync">
            <summary>
            GetInstallabilityErrors
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetInstallabilityErrorsResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.GetManifestIconsAsync">
            <summary>
            GetManifestIcons
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetManifestIconsResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.GetFrameTreeAsync">
            <summary>
            Returns present frame tree structure.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetFrameTreeResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.GetLayoutMetricsAsync">
            <summary>
            Returns metrics relating to the layouting of the page, such as viewport bounds/scale.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetLayoutMetricsResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.GetNavigationHistoryAsync">
            <summary>
            Returns navigation history for the current page.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetNavigationHistoryResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.ResetNavigationHistoryAsync">
            <summary>
            Resets navigation history for the current page.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.GetResourceContentAsync(System.String,System.String)">
            <summary>
            Returns content of the given resource.
            </summary>
            <param name = "frameId">Frame id to get resource for.</param>
            <param name = "url">URL of the resource to get content for.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetResourceContentResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.GetResourceTreeAsync">
            <summary>
            Returns present frame / resource tree structure.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetResourceTreeResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Page.PageClient.HandleJavaScriptDialogAsync(System.Boolean,System.String)" -->
        <member name="M:CefSharp.DevTools.Page.PageClient.NavigateAsync(System.String,System.String,System.Nullable{CefSharp.DevTools.Page.TransitionType},System.String,System.Nullable{CefSharp.DevTools.Page.ReferrerPolicy})">
            <summary>
            Navigates current page to the given URL.
            </summary>
            <param name = "url">URL to navigate the page to.</param>
            <param name = "referrer">Referrer URL.</param>
            <param name = "transitionType">Intended transition type.</param>
            <param name = "frameId">Frame id to navigate, if not specified navigates the top frame.</param>
            <param name = "referrerPolicy">Referrer-policy used for the navigation.</param>
            <returns>returns System.Threading.Tasks.Task&lt;NavigateResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.NavigateToHistoryEntryAsync(System.Int32)">
            <summary>
            Navigates current page to the given history entry.
            </summary>
            <param name = "entryId">Unique id of the entry to navigate to.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Page.PageClient.PrintToPDFAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Page.PageClient.ReloadAsync(System.Nullable{System.Boolean},System.String)" -->
        <member name="M:CefSharp.DevTools.Page.PageClient.RemoveScriptToEvaluateOnNewDocumentAsync(System.String)">
            <summary>
            Removes given script from the list.
            </summary>
            <param name = "identifier">identifier</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.ScreencastFrameAckAsync(System.Int32)">
            <summary>
            Acknowledges that a screencast frame has been received by the frontend.
            </summary>
            <param name = "sessionId">Frame number.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.SearchInResourceAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Searches for given string in resource content.
            </summary>
            <param name = "frameId">Frame id for resource to search in.</param>
            <param name = "url">URL of the resource to search in.</param>
            <param name = "query">String to search for.</param>
            <param name = "caseSensitive">If true, search is case sensitive.</param>
            <param name = "isRegex">If true, treats string parameter as regex.</param>
            <returns>returns System.Threading.Tasks.Task&lt;SearchInResourceResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.SetAdBlockingEnabledAsync(System.Boolean)">
            <summary>
            Enable Chrome's experimental ad filter on all sites.
            </summary>
            <param name = "enabled">Whether to block ads.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.SetBypassCSPAsync(System.Boolean)">
            <summary>
            Enable page Content Security Policy by-passing.
            </summary>
            <param name = "enabled">Whether to bypass page CSP.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.SetFontFamiliesAsync(CefSharp.DevTools.Page.FontFamilies)">
            <summary>
            Set generic font families.
            </summary>
            <param name = "fontFamilies">Specifies font families to set. If a font family is not specified, it won't be changed.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.SetFontSizesAsync(CefSharp.DevTools.Page.FontSizes)">
            <summary>
            Set default font sizes.
            </summary>
            <param name = "fontSizes">Specifies font sizes to set. If a font size is not specified, it won't be changed.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.SetDocumentContentAsync(System.String,System.String)">
            <summary>
            Sets given markup as the document's HTML.
            </summary>
            <param name = "frameId">Frame id to set HTML for.</param>
            <param name = "html">HTML content to set.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.SetLifecycleEventsEnabledAsync(System.Boolean)">
            <summary>
            Controls whether page will emit lifecycle events.
            </summary>
            <param name = "enabled">If true, starts emitting lifecycle events.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.StartScreencastAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Starts sending each frame using the `screencastFrame` event.
            </summary>
            <param name = "format">Image compression format.</param>
            <param name = "quality">Compression quality from range [0..100].</param>
            <param name = "maxWidth">Maximum screenshot width.</param>
            <param name = "maxHeight">Maximum screenshot height.</param>
            <param name = "everyNthFrame">Send every n-th frame.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.StopLoadingAsync">
            <summary>
            Force the page stop all navigations and pending resource fetches.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.CrashAsync">
            <summary>
            Crashes renderer on the IO thread, generates minidumps.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.CloseAsync">
            <summary>
            Tries to close page, running its beforeunload hooks, if any.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.SetWebLifecycleStateAsync(System.String)">
            <summary>
            Tries to update the web lifecycle state of the page.
            It will transition the page to the given state according to:
            https://github.com/WICG/web-lifecycle/
            </summary>
            <param name = "state">Target lifecycle state</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.StopScreencastAsync">
            <summary>
            Stops sending each frame in the `screencastFrame`.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.SetProduceCompilationCacheAsync(System.Boolean)">
            <summary>
            Forces compilation cache to be generated for every subresource script.
            </summary>
            <param name = "enabled">enabled</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.AddCompilationCacheAsync(System.String,System.Byte[])">
            <summary>
            Seeds compilation cache for given url. Compilation cache does not survive
            cross-process navigation.
            </summary>
            <param name = "url">url</param>
            <param name = "data">Base64-encoded data</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.ClearCompilationCacheAsync">
            <summary>
            Clears seeded compilation cache.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.GenerateTestReportAsync(System.String,System.String)">
            <summary>
            Generates a report for testing.
            </summary>
            <param name = "message">Message to be displayed in the report.</param>
            <param name = "group">Specifies the endpoint group to deliver the report to.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.WaitForDebuggerAsync">
            <summary>
            Pauses page execution. Can be resumed using generic Runtime.runIfWaitingForDebugger.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Page.PageClient.SetInterceptFileChooserDialogAsync(System.Boolean)">
            <summary>
            Intercept file chooser requests and transfer control to protocol clients.
            When file chooser interception is enabled, native file chooser dialog is not shown.
            Instead, a protocol event `Page.fileChooserOpened` is emitted.
            </summary>
            <param name = "enabled">enabled</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Performance.Metric">
            <summary>
            Run-time execution metric.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Performance.Metric.Name">
            <summary>
            Metric name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Performance.Metric.Value">
            <summary>
            Metric value.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Performance.GetMetricsResponse">
            <summary>
            GetMetricsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Performance.GetMetricsResponse.Metrics">
            <summary>
            metrics
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Performance.PerformanceClient">
            <summary>
            Performance
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Performance.PerformanceClient.DisableAsync">
            <summary>
            Disable collecting and reporting metrics.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Performance.PerformanceClient.EnableAsync(System.String)">
            <summary>
            Enable collecting and reporting metrics.
            </summary>
            <param name = "timeDomain">Time domain to use for collecting and reporting duration metrics.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Performance.PerformanceClient.GetMetricsAsync">
            <summary>
            Retrieve current values of run-time metrics.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetMetricsResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Security.MixedContentType">
            <summary>
            A description of mixed content (HTTP resources on HTTPS pages), as defined by
            https://www.w3.org/TR/mixed-content/#categories
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.MixedContentType.Blockable">
            <summary>
            blockable
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.MixedContentType.OptionallyBlockable">
            <summary>
            optionally-blockable
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.MixedContentType.None">
            <summary>
            none
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Security.SecurityState">
            <summary>
            The security level of a page or resource.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.SecurityState.Unknown">
            <summary>
            unknown
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.SecurityState.Neutral">
            <summary>
            neutral
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.SecurityState.Insecure">
            <summary>
            insecure
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.SecurityState.Secure">
            <summary>
            secure
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.SecurityState.Info">
            <summary>
            info
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.SecurityState.InsecureBroken">
            <summary>
            insecure-broken
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Security.CertificateSecurityState">
            <summary>
            Details about the security state of the page certificate.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.Protocol">
            <summary>
            Protocol name (e.g. "TLS 1.2" or "QUIC").
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.KeyExchange">
            <summary>
            Key Exchange used by the connection, or the empty string if not applicable.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.KeyExchangeGroup">
            <summary>
            (EC)DH group used by the connection, if applicable.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.Cipher">
            <summary>
            Cipher name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.Mac">
            <summary>
            TLS MAC. Note that AEAD ciphers do not have separate MACs.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.Certificate">
            <summary>
            Page certificate.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.SubjectName">
            <summary>
            Certificate subject name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.Issuer">
            <summary>
            Name of the issuing CA.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.ValidFrom">
            <summary>
            Certificate valid from date.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.ValidTo">
            <summary>
            Certificate valid to (expiration) date
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.CertificateNetworkError">
            <summary>
            The highest priority network error code, if the certificate has an error.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.CertificateHasWeakSignature">
            <summary>
            True if the certificate uses a weak signature aglorithm.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.CertificateHasSha1Signature">
            <summary>
            True if the certificate has a SHA1 signature in the chain.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.ModernSSL">
            <summary>
            True if modern SSL
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.ObsoleteSslProtocol">
            <summary>
            True if the connection is using an obsolete SSL protocol.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.ObsoleteSslKeyExchange">
            <summary>
            True if the connection is using an obsolete SSL key exchange.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.ObsoleteSslCipher">
            <summary>
            True if the connection is using an obsolete SSL cipher.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.CertificateSecurityState.ObsoleteSslSignature">
            <summary>
            True if the connection is using an obsolete SSL signature.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Security.SafetyTipStatus">
            <summary>
            SafetyTipStatus
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.SafetyTipStatus.BadReputation">
            <summary>
            badReputation
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.SafetyTipStatus.Lookalike">
            <summary>
            lookalike
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Security.SafetyTipInfo">
            <summary>
            SafetyTipInfo
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.SafetyTipInfo.safetyTipStatus">
            <summary>
            Describes whether the page triggers any safety tips or reputation warnings. Default is unknown.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.SafetyTipInfo.SafeUrl">
            <summary>
            The URL the safety tip suggested ("Did you mean?"). Only filled in for lookalike matches.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Security.VisibleSecurityState">
            <summary>
            Security state information about the page.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.VisibleSecurityState.securityState">
            <summary>
            The security level of the page.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.VisibleSecurityState.CertificateSecurityState">
            <summary>
            Security state details about the page certificate.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.VisibleSecurityState.SafetyTipInfo">
            <summary>
            The type of Safety Tip triggered on the page. Note that this field will be set even if the Safety Tip UI was not actually shown.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.VisibleSecurityState.SecurityStateIssueIds">
            <summary>
            Array of security state issues ids.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Security.SecurityStateExplanation">
            <summary>
            An explanation of an factor contributing to the security state.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.SecurityStateExplanation.securityState">
            <summary>
            Security state representing the severity of the factor being explained.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.SecurityStateExplanation.Title">
            <summary>
            Title describing the type of factor.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.SecurityStateExplanation.Summary">
            <summary>
            Short phrase describing the type of factor.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.SecurityStateExplanation.Description">
            <summary>
            Full text explanation of the factor.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.SecurityStateExplanation.mixedContentType">
            <summary>
            The type of mixed content described by the explanation.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.SecurityStateExplanation.Certificate">
            <summary>
            Page certificate.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.SecurityStateExplanation.Recommendations">
            <summary>
            Recommendations to fix any issues.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Security.InsecureContentStatus">
            <summary>
            Information about insecure content on the page.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.InsecureContentStatus.RanMixedContent">
            <summary>
            Always false.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.InsecureContentStatus.DisplayedMixedContent">
            <summary>
            Always false.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.InsecureContentStatus.ContainedMixedForm">
            <summary>
            Always false.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.InsecureContentStatus.RanContentWithCertErrors">
            <summary>
            Always false.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.InsecureContentStatus.DisplayedContentWithCertErrors">
            <summary>
            Always false.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.InsecureContentStatus.ranInsecureContentStyle">
            <summary>
            Always set to unknown.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Security.InsecureContentStatus.displayedInsecureContentStyle">
            <summary>
            Always set to unknown.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Security.CertificateErrorAction">
            <summary>
            The action to take when a certificate error occurs. continue will continue processing the
            request and cancel will cancel the request.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.CertificateErrorAction.Continue">
            <summary>
            continue
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Security.CertificateErrorAction.Cancel">
            <summary>
            cancel
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Security.SecurityClient">
            <summary>
            Security
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Security.SecurityClient.DisableAsync">
            <summary>
            Disables tracking security state changes.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Security.SecurityClient.EnableAsync">
            <summary>
            Enables tracking security state changes.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Security.SecurityClient.SetIgnoreCertificateErrorsAsync(System.Boolean)">
            <summary>
            Enable/disable whether all certificate errors should be ignored.
            </summary>
            <param name = "ignore">If true, all certificate errors will be ignored.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.ServiceWorker.ServiceWorkerRegistration">
            <summary>
            ServiceWorker registration.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerRegistration.RegistrationId">
            <summary>
            RegistrationId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerRegistration.ScopeURL">
            <summary>
            ScopeURL
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerRegistration.IsDeleted">
            <summary>
            IsDeleted
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersionRunningStatus">
            <summary>
            ServiceWorkerVersionRunningStatus
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersionRunningStatus.Stopped">
            <summary>
            stopped
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersionRunningStatus.Starting">
            <summary>
            starting
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersionRunningStatus.Running">
            <summary>
            running
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersionRunningStatus.Stopping">
            <summary>
            stopping
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersionStatus">
            <summary>
            ServiceWorkerVersionStatus
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersionStatus.New">
            <summary>
            new
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersionStatus.Installing">
            <summary>
            installing
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersionStatus.Installed">
            <summary>
            installed
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersionStatus.Activating">
            <summary>
            activating
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersionStatus.Activated">
            <summary>
            activated
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersionStatus.Redundant">
            <summary>
            redundant
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersion">
            <summary>
            ServiceWorker version.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersion.VersionId">
            <summary>
            VersionId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersion.RegistrationId">
            <summary>
            RegistrationId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersion.ScriptURL">
            <summary>
            ScriptURL
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersion.runningStatus">
            <summary>
            RunningStatus
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersion.status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersion.ScriptLastModified">
            <summary>
            The Last-Modified header value of the main script.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersion.ScriptResponseTime">
            <summary>
            The time at which the response headers of the main script were received from the server.
            For cached script it is the last time the cache entry was validated.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersion.ControlledClients">
            <summary>
            ControlledClients
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerVersion.TargetId">
            <summary>
            TargetId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.ServiceWorker.ServiceWorkerErrorMessage">
            <summary>
            ServiceWorker error message.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerErrorMessage.ErrorMessage">
            <summary>
            ErrorMessage
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerErrorMessage.RegistrationId">
            <summary>
            RegistrationId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerErrorMessage.VersionId">
            <summary>
            VersionId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerErrorMessage.SourceURL">
            <summary>
            SourceURL
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerErrorMessage.LineNumber">
            <summary>
            LineNumber
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.ServiceWorker.ServiceWorkerErrorMessage.ColumnNumber">
            <summary>
            ColumnNumber
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient">
            <summary>
            ServiceWorker
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.DeliverPushMessageAsync(System.String,System.String,System.String)">
            <summary>
            DeliverPushMessage
            </summary>
            <param name = "origin">origin</param>
            <param name = "registrationId">registrationId</param>
            <param name = "data">data</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.DisableAsync">
            <summary>
            Disable
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.DispatchSyncEventAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>
            DispatchSyncEvent
            </summary>
            <param name = "origin">origin</param>
            <param name = "registrationId">registrationId</param>
            <param name = "tag">tag</param>
            <param name = "lastChance">lastChance</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.DispatchPeriodicSyncEventAsync(System.String,System.String,System.String)">
            <summary>
            DispatchPeriodicSyncEvent
            </summary>
            <param name = "origin">origin</param>
            <param name = "registrationId">registrationId</param>
            <param name = "tag">tag</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.EnableAsync">
            <summary>
            Enable
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.InspectWorkerAsync(System.String)">
            <summary>
            InspectWorker
            </summary>
            <param name = "versionId">versionId</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.SetForceUpdateOnPageLoadAsync(System.Boolean)">
            <summary>
            SetForceUpdateOnPageLoad
            </summary>
            <param name = "forceUpdateOnPageLoad">forceUpdateOnPageLoad</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.SkipWaitingAsync(System.String)">
            <summary>
            SkipWaiting
            </summary>
            <param name = "scopeURL">scopeURL</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.StartWorkerAsync(System.String)">
            <summary>
            StartWorker
            </summary>
            <param name = "scopeURL">scopeURL</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.StopAllWorkersAsync">
            <summary>
            StopAllWorkers
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.StopWorkerAsync(System.String)">
            <summary>
            StopWorker
            </summary>
            <param name = "versionId">versionId</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.UnregisterAsync(System.String)">
            <summary>
            Unregister
            </summary>
            <param name = "scopeURL">scopeURL</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.ServiceWorker.ServiceWorkerClient.UpdateRegistrationAsync(System.String)">
            <summary>
            UpdateRegistration
            </summary>
            <param name = "scopeURL">scopeURL</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Storage.StorageType">
            <summary>
            Enum of possible storage types.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Storage.StorageType.Appcache">
            <summary>
            appcache
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Storage.StorageType.Cookies">
            <summary>
            cookies
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Storage.StorageType.FileSystems">
            <summary>
            file_systems
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Storage.StorageType.Indexeddb">
            <summary>
            indexeddb
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Storage.StorageType.LocalStorage">
            <summary>
            local_storage
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Storage.StorageType.ShaderCache">
            <summary>
            shader_cache
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Storage.StorageType.Websql">
            <summary>
            websql
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Storage.StorageType.ServiceWorkers">
            <summary>
            service_workers
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Storage.StorageType.CacheStorage">
            <summary>
            cache_storage
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Storage.StorageType.All">
            <summary>
            all
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Storage.StorageType.Other">
            <summary>
            other
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Storage.UsageForType">
            <summary>
            Usage for a storage type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Storage.UsageForType.storageType">
            <summary>
            Name of storage type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Storage.UsageForType.Usage">
            <summary>
            Storage usage (bytes).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Storage.GetCookiesResponse">
            <summary>
            GetCookiesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Storage.GetCookiesResponse.Cookies">
            <summary>
            cookies
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Storage.GetUsageAndQuotaResponse">
            <summary>
            GetUsageAndQuotaResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Storage.GetUsageAndQuotaResponse.Usage">
            <summary>
            usage
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Storage.GetUsageAndQuotaResponse.Quota">
            <summary>
            quota
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Storage.GetUsageAndQuotaResponse.UsageBreakdown">
            <summary>
            usageBreakdown
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Storage.StorageClient">
            <summary>
            Storage
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Storage.StorageClient.ClearDataForOriginAsync(System.String,System.String)">
            <summary>
            Clears storage for origin.
            </summary>
            <param name = "origin">Security origin.</param>
            <param name = "storageTypes">Comma separated list of StorageType to clear.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Storage.StorageClient.GetCookiesAsync(System.String)">
            <summary>
            Returns all browser cookies.
            </summary>
            <param name = "browserContextId">Browser context to use when called on the browser endpoint.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetCookiesResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Storage.StorageClient.SetCookiesAsync(System.Collections.Generic.IList{CefSharp.DevTools.Network.CookieParam},System.String)">
            <summary>
            Sets given cookies.
            </summary>
            <param name = "cookies">Cookies to be set.</param>
            <param name = "browserContextId">Browser context to use when called on the browser endpoint.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Storage.StorageClient.ClearCookiesAsync(System.String)">
            <summary>
            Clears cookies.
            </summary>
            <param name = "browserContextId">Browser context to use when called on the browser endpoint.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Storage.StorageClient.GetUsageAndQuotaAsync(System.String)">
            <summary>
            Returns usage and quota in bytes.
            </summary>
            <param name = "origin">Security origin.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetUsageAndQuotaResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Storage.StorageClient.TrackCacheStorageForOriginAsync(System.String)">
            <summary>
            Registers origin to be notified when an update occurs to its cache storage list.
            </summary>
            <param name = "origin">Security origin.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Storage.StorageClient.TrackIndexedDBForOriginAsync(System.String)">
            <summary>
            Registers origin to be notified when an update occurs to its IndexedDB.
            </summary>
            <param name = "origin">Security origin.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Storage.StorageClient.UntrackCacheStorageForOriginAsync(System.String)">
            <summary>
            Unregisters origin from receiving notifications for cache storage.
            </summary>
            <param name = "origin">Security origin.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Storage.StorageClient.UntrackIndexedDBForOriginAsync(System.String)">
            <summary>
            Unregisters origin from receiving notifications for IndexedDB.
            </summary>
            <param name = "origin">Security origin.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.SystemInfo.GPUDevice">
            <summary>
            Describes a single graphics processor (GPU).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUDevice.VendorId">
            <summary>
            PCI ID of the GPU vendor, if available; 0 otherwise.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUDevice.DeviceId">
            <summary>
            PCI ID of the GPU device, if available; 0 otherwise.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUDevice.SubSysId">
            <summary>
            Sub sys ID of the GPU, only available on Windows.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUDevice.Revision">
            <summary>
            Revision of the GPU, only available on Windows.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUDevice.VendorString">
            <summary>
            String description of the GPU vendor, if the PCI ID is not available.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUDevice.DeviceString">
            <summary>
            String description of the GPU device, if the PCI ID is not available.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUDevice.DriverVendor">
            <summary>
            String description of the GPU driver vendor.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUDevice.DriverVersion">
            <summary>
            String description of the GPU driver version.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.SystemInfo.Size">
            <summary>
            Describes the width and height dimensions of an entity.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.Size.Width">
            <summary>
            Width in pixels.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.Size.Height">
            <summary>
            Height in pixels.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.SystemInfo.VideoDecodeAcceleratorCapability">
            <summary>
            Describes a supported video decoding profile with its associated minimum and
            maximum resolutions.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.VideoDecodeAcceleratorCapability.Profile">
            <summary>
            Video codec profile that is supported, e.g. VP9 Profile 2.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.VideoDecodeAcceleratorCapability.MaxResolution">
            <summary>
            Maximum video dimensions in pixels supported for this |profile|.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.VideoDecodeAcceleratorCapability.MinResolution">
            <summary>
            Minimum video dimensions in pixels supported for this |profile|.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.SystemInfo.VideoEncodeAcceleratorCapability">
            <summary>
            Describes a supported video encoding profile with its associated maximum
            resolution and maximum framerate.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.VideoEncodeAcceleratorCapability.Profile">
            <summary>
            Video codec profile that is supported, e.g H264 Main.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.VideoEncodeAcceleratorCapability.MaxResolution">
            <summary>
            Maximum video dimensions in pixels supported for this |profile|.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.VideoEncodeAcceleratorCapability.MaxFramerateNumerator">
            <summary>
            Maximum encoding framerate in frames per second supported for this
            |profile|, as fraction's numerator and denominator, e.g. 24/1 fps,
            24000/1001 fps, etc.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.VideoEncodeAcceleratorCapability.MaxFramerateDenominator">
            <summary>
            MaxFramerateDenominator
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.SystemInfo.SubsamplingFormat">
            <summary>
            YUV subsampling type of the pixels of a given image.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.SystemInfo.SubsamplingFormat.Yuv420">
            <summary>
            yuv420
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.SystemInfo.SubsamplingFormat.Yuv422">
            <summary>
            yuv422
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.SystemInfo.SubsamplingFormat.Yuv444">
            <summary>
            yuv444
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.SystemInfo.ImageType">
            <summary>
            Image format of a given image.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.SystemInfo.ImageType.Jpeg">
            <summary>
            jpeg
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.SystemInfo.ImageType.Webp">
            <summary>
            webp
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.SystemInfo.ImageType.Unknown">
            <summary>
            unknown
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.SystemInfo.ImageDecodeAcceleratorCapability">
            <summary>
            Describes a supported image decoding profile with its associated minimum and
            maximum resolutions and subsampling.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.ImageDecodeAcceleratorCapability.imageType">
            <summary>
            Image coded, e.g. Jpeg.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.ImageDecodeAcceleratorCapability.MaxDimensions">
            <summary>
            Maximum supported dimensions of the image in pixels.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.ImageDecodeAcceleratorCapability.MinDimensions">
            <summary>
            Minimum supported dimensions of the image in pixels.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.ImageDecodeAcceleratorCapability.subsamplings">
            <summary>
            Optional array of supported subsampling formats, e.g. 4:2:0, if known.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.SystemInfo.GPUInfo">
            <summary>
            Provides information about the GPU(s) on the system.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUInfo.Devices">
            <summary>
            The graphics devices on the system. Element 0 is the primary GPU.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUInfo.AuxAttributes">
            <summary>
            An optional dictionary of additional GPU related attributes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUInfo.FeatureStatus">
            <summary>
            An optional dictionary of graphics features and their status.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUInfo.DriverBugWorkarounds">
            <summary>
            An optional array of GPU driver bug workarounds.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUInfo.VideoDecoding">
            <summary>
            Supported accelerated video decoding capabilities.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUInfo.VideoEncoding">
            <summary>
            Supported accelerated video encoding capabilities.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GPUInfo.ImageDecoding">
            <summary>
            Supported accelerated image decoding capabilities.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.SystemInfo.ProcessInfo">
            <summary>
            Represents process info.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.ProcessInfo.Type">
            <summary>
            Specifies process type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.ProcessInfo.Id">
            <summary>
            Specifies process id.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.ProcessInfo.CpuTime">
            <summary>
            Specifies cumulative CPU usage in seconds across all threads of the
            process since the process start.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.SystemInfo.GetInfoResponse">
            <summary>
            GetInfoResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GetInfoResponse.Gpu">
            <summary>
            gpu
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GetInfoResponse.ModelName">
            <summary>
            modelName
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GetInfoResponse.ModelVersion">
            <summary>
            modelVersion
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GetInfoResponse.CommandLine">
            <summary>
            commandLine
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.SystemInfo.GetProcessInfoResponse">
            <summary>
            GetProcessInfoResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.SystemInfo.GetProcessInfoResponse.ProcessInfo">
            <summary>
            processInfo
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.SystemInfo.SystemInfoClient">
            <summary>
            The SystemInfo domain defines methods and events for querying low-level system information.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.SystemInfo.SystemInfoClient.GetInfoAsync">
            <summary>
            Returns information about the system.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetInfoResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.SystemInfo.SystemInfoClient.GetProcessInfoAsync">
            <summary>
            Returns information about all running processes.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetProcessInfoResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Target.TargetInfo">
            <summary>
            TargetInfo
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.TargetInfo.TargetId">
            <summary>
            TargetId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.TargetInfo.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.TargetInfo.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.TargetInfo.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.TargetInfo.Attached">
            <summary>
            Whether the target has an attached client.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.TargetInfo.OpenerId">
            <summary>
            Opener target Id
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.TargetInfo.CanAccessOpener">
            <summary>
            Whether the opened window has access to the originating window.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.TargetInfo.BrowserContextId">
            <summary>
            BrowserContextId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Target.RemoteLocation">
            <summary>
            RemoteLocation
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.RemoteLocation.Host">
            <summary>
            Host
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.RemoteLocation.Port">
            <summary>
            Port
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Target.AttachToTargetResponse">
            <summary>
            AttachToTargetResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.AttachToTargetResponse.SessionId">
            <summary>
            sessionId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Target.AttachToBrowserTargetResponse">
            <summary>
            AttachToBrowserTargetResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.AttachToBrowserTargetResponse.SessionId">
            <summary>
            sessionId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Target.CloseTargetResponse">
            <summary>
            CloseTargetResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.CloseTargetResponse.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Target.CreateBrowserContextResponse">
            <summary>
            CreateBrowserContextResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.CreateBrowserContextResponse.BrowserContextId">
            <summary>
            browserContextId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Target.GetBrowserContextsResponse">
            <summary>
            GetBrowserContextsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.GetBrowserContextsResponse.BrowserContextIds">
            <summary>
            browserContextIds
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Target.CreateTargetResponse">
            <summary>
            CreateTargetResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.CreateTargetResponse.TargetId">
            <summary>
            targetId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Target.GetTargetInfoResponse">
            <summary>
            GetTargetInfoResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.GetTargetInfoResponse.TargetInfo">
            <summary>
            targetInfo
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Target.GetTargetsResponse">
            <summary>
            GetTargetsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Target.GetTargetsResponse.TargetInfos">
            <summary>
            targetInfos
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Target.TargetClient">
            <summary>
            Supports additional targets discovery and allows to attach to them.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Target.TargetClient.ActivateTargetAsync(System.String)">
            <summary>
            Activates (focuses) the target.
            </summary>
            <param name = "targetId">targetId</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Target.TargetClient.AttachToTargetAsync(System.String,System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.Target.TargetClient.AttachToBrowserTargetAsync">
            <summary>
            Attaches to the browser target, only uses flat sessionId mode.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;AttachToBrowserTargetResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Target.TargetClient.CloseTargetAsync(System.String)">
            <summary>
            Closes the target. If the target is a page that gets closed too.
            </summary>
            <param name = "targetId">targetId</param>
            <returns>returns System.Threading.Tasks.Task&lt;CloseTargetResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Target.TargetClient.ExposeDevToolsProtocolAsync(System.String,System.String)">
            <summary>
            Inject object to the target's main frame that provides a communication
            channel with browser target.
            
            Injected object will be available as `window[bindingName]`.
            
            The object has the follwing API:
            - `binding.send(json)` - a method to send messages over the remote debugging protocol
            - `binding.onmessage = json => handleMessage(json)` - a callback that will be called for the protocol notifications and command responses.
            </summary>
            <param name = "targetId">targetId</param>
            <param name = "bindingName">Binding name, 'cdp' if not specified.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Target.TargetClient.CreateBrowserContextAsync(System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Creates a new empty BrowserContext. Similar to an incognito profile but you can have more than
            one.
            </summary>
            <param name = "disposeOnDetach">If specified, disposes this context when debugging session disconnects.</param>
            <param name = "proxyServer">Proxy server, similar to the one passed to --proxy-server</param>
            <param name = "proxyBypassList">Proxy bypass list, similar to the one passed to --proxy-bypass-list</param>
            <returns>returns System.Threading.Tasks.Task&lt;CreateBrowserContextResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Target.TargetClient.GetBrowserContextsAsync">
            <summary>
            Returns all browser contexts created with `Target.createBrowserContext` method.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetBrowserContextsResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Target.TargetClient.CreateTargetAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.Target.TargetClient.DetachFromTargetAsync(System.String,System.String)">
            <summary>
            Detaches session with given id.
            </summary>
            <param name = "sessionId">Session to detach.</param>
            <param name = "targetId">Deprecated.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Target.TargetClient.DisposeBrowserContextAsync(System.String)">
            <summary>
            Deletes a BrowserContext. All the belonging pages will be closed without calling their
            beforeunload hooks.
            </summary>
            <param name = "browserContextId">browserContextId</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Target.TargetClient.GetTargetInfoAsync(System.String)">
            <summary>
            Returns information about a target.
            </summary>
            <param name = "targetId">targetId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetTargetInfoResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Target.TargetClient.GetTargetsAsync">
            <summary>
            Retrieves a list of available targets.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetTargetsResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Target.TargetClient.SetAutoAttachAsync(System.Boolean,System.Boolean,System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.Target.TargetClient.SetDiscoverTargetsAsync(System.Boolean)">
            <summary>
            Controls whether to discover available targets and notify via
            `targetCreated/targetInfoChanged/targetDestroyed` events.
            </summary>
            <param name = "discover">Whether to discover available targets.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Target.TargetClient.SetRemoteLocationsAsync(System.Collections.Generic.IList{CefSharp.DevTools.Target.RemoteLocation})">
            <summary>
            Enables target discovery for the specified locations, when `setDiscoverTargets` was set to
            `true`.
            </summary>
            <param name = "locations">List of remote locations.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Tracing.TraceConfig">
            <summary>
            TraceConfig
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Tracing.TraceConfig.RecordMode">
            <summary>
            Controls how the trace buffer stores data.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Tracing.TraceConfig.EnableSampling">
            <summary>
            Turns on JavaScript stack sampling.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Tracing.TraceConfig.EnableSystrace">
            <summary>
            Turns on system tracing.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Tracing.TraceConfig.EnableArgumentFilter">
            <summary>
            Turns on argument filter.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Tracing.TraceConfig.IncludedCategories">
            <summary>
            Included category filters.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Tracing.TraceConfig.ExcludedCategories">
            <summary>
            Excluded category filters.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Tracing.TraceConfig.SyntheticDelays">
            <summary>
            Configuration to synthesize the delays in tracing.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Tracing.TraceConfig.MemoryDumpConfig">
            <summary>
            Configuration for memory dump triggers. Used only when "memory-infra" category is enabled.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Tracing.StreamFormat">
            <summary>
            Data format of a trace. Can be either the legacy JSON format or the
            protocol buffer format. Note that the JSON format will be deprecated soon.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Tracing.StreamFormat.Json">
            <summary>
            json
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Tracing.StreamFormat.Proto">
            <summary>
            proto
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Tracing.StreamCompression">
            <summary>
            Compression type to use for traces returned via streams.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Tracing.StreamCompression.None">
            <summary>
            none
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Tracing.StreamCompression.Gzip">
            <summary>
            gzip
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Tracing.GetCategoriesResponse">
            <summary>
            GetCategoriesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Tracing.GetCategoriesResponse.Categories">
            <summary>
            categories
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Tracing.RequestMemoryDumpResponse">
            <summary>
            RequestMemoryDumpResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Tracing.RequestMemoryDumpResponse.DumpGuid">
            <summary>
            dumpGuid
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Tracing.RequestMemoryDumpResponse.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Tracing.TracingClient">
            <summary>
            Tracing
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Tracing.TracingClient.EndAsync">
            <summary>
            Stop trace events collection.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Tracing.TracingClient.GetCategoriesAsync">
            <summary>
            Gets supported tracing categories.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetCategoriesResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Tracing.TracingClient.RecordClockSyncMarkerAsync(System.String)">
            <summary>
            Record a clock sync marker in the trace.
            </summary>
            <param name = "syncId">The ID of this clock sync marker</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Tracing.TracingClient.RequestMemoryDumpAsync(System.Nullable{System.Boolean})">
            <summary>
            Request a global memory dump.
            </summary>
            <param name = "deterministic">Enables more deterministic results by forcing garbage collection</param>
            <returns>returns System.Threading.Tasks.Task&lt;RequestMemoryDumpResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Tracing.TracingClient.StartAsync(System.String,System.String,System.Nullable{System.Int64},System.String,System.Nullable{CefSharp.DevTools.Tracing.StreamFormat},System.Nullable{CefSharp.DevTools.Tracing.StreamCompression},CefSharp.DevTools.Tracing.TraceConfig)" -->
        <member name="T:CefSharp.DevTools.Fetch.RequestStage">
            <summary>
            Stages of the request to handle. Request will intercept before the request is
            sent. Response will intercept after the response is received (but before response
            body is received.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Fetch.RequestStage.Request">
            <summary>
            Request
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Fetch.RequestStage.Response">
            <summary>
            Response
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Fetch.RequestPattern">
            <summary>
            RequestPattern
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.RequestPattern.UrlPattern">
            <summary>
            Wildcards ('*' -> zero or more, '?' -> exactly one) are allowed. Escape character is
            backslash. Omitting is equivalent to "*".
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.RequestPattern.resourceType">
            <summary>
            If set, only requests for matching resource types will be intercepted.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.RequestPattern.requestStage">
            <summary>
            Stage at wich to begin intercepting requests. Default is Request.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Fetch.HeaderEntry">
            <summary>
            Response HTTP header entry
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.HeaderEntry.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.HeaderEntry.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Fetch.AuthChallenge">
            <summary>
            Authorization challenge for HTTP status code 401 or 407.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.AuthChallenge.Source">
            <summary>
            Source of the authentication challenge.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.AuthChallenge.Origin">
            <summary>
            Origin of the challenger.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.AuthChallenge.Scheme">
            <summary>
            The authentication scheme used, such as basic or digest
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.AuthChallenge.Realm">
            <summary>
            The realm of the challenge. May be empty.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Fetch.AuthChallengeResponse">
            <summary>
            Response to an AuthChallenge.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.AuthChallengeResponse.Response">
            <summary>
            The decision on what to do in response to the authorization challenge.  Default means
            deferring to the default behavior of the net stack, which will likely either the Cancel
            authentication or display a popup dialog box.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.AuthChallengeResponse.Username">
            <summary>
            The username to provide, possibly empty. Should only be set if response is
            ProvideCredentials.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.AuthChallengeResponse.Password">
            <summary>
            The password to provide, possibly empty. Should only be set if response is
            ProvideCredentials.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Fetch.GetResponseBodyResponse">
            <summary>
            GetResponseBodyResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.GetResponseBodyResponse.Body">
            <summary>
            body
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.GetResponseBodyResponse.Base64Encoded">
            <summary>
            base64Encoded
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Fetch.TakeResponseBodyAsStreamResponse">
            <summary>
            TakeResponseBodyAsStreamResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Fetch.TakeResponseBodyAsStreamResponse.Stream">
            <summary>
            stream
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Fetch.FetchClient">
            <summary>
            A domain for letting clients substitute browser's network layer with client code.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Fetch.FetchClient.DisableAsync">
            <summary>
            Disables the fetch domain.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Fetch.FetchClient.EnableAsync(System.Collections.Generic.IList{CefSharp.DevTools.Fetch.RequestPattern},System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.Fetch.FetchClient.FailRequestAsync(System.String,CefSharp.DevTools.Network.ErrorReason)">
            <summary>
            Causes the request to fail with specified reason.
            </summary>
            <param name = "requestId">An id the client received in requestPaused event.</param>
            <param name = "errorReason">Causes the request to fail with the given reason.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Fetch.FetchClient.FulfillRequestAsync(System.String,System.Int32,System.Collections.Generic.IList{CefSharp.DevTools.Fetch.HeaderEntry},System.Byte[],System.Byte[],System.String)" -->
        <member name="M:CefSharp.DevTools.Fetch.FetchClient.ContinueRequestAsync(System.String,System.String,System.String,System.Byte[],System.Collections.Generic.IList{CefSharp.DevTools.Fetch.HeaderEntry})">
            <summary>
            Continues the request, optionally modifying some of its parameters.
            </summary>
            <param name = "requestId">An id the client received in requestPaused event.</param>
            <param name = "url">If set, the request url will be modified in a way that's not observable by page.</param>
            <param name = "method">If set, the request method is overridden.</param>
            <param name = "postData">If set, overrides the post data in the request.</param>
            <param name = "headers">If set, overrides the request headers.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Fetch.FetchClient.ContinueWithAuthAsync(System.String,CefSharp.DevTools.Fetch.AuthChallengeResponse)">
            <summary>
            Continues a request supplying authChallengeResponse following authRequired event.
            </summary>
            <param name = "requestId">An id the client received in authRequired event.</param>
            <param name = "authChallengeResponse">Response to  with an authChallenge.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Fetch.FetchClient.GetResponseBodyAsync(System.String)">
            <summary>
            Causes the body of the response to be received from the server and
            returned as a single string. May only be issued for a request that
            is paused in the Response stage and is mutually exclusive with
            takeResponseBodyForInterceptionAsStream. Calling other methods that
            affect the request or disabling fetch domain before body is received
            results in an undefined behavior.
            </summary>
            <param name = "requestId">Identifier for the intercepted request to get body for.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetResponseBodyResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Fetch.FetchClient.TakeResponseBodyAsStreamAsync(System.String)">
            <summary>
            Returns a handle to the stream representing the response body.
            The request must be paused in the HeadersReceived stage.
            Note that after this command the request can't be continued
            as is -- client either needs to cancel it or to provide the
            response body.
            The stream only supports sequential read, IO.read will fail if the position
            is specified.
            This method is mutually exclusive with getResponseBody.
            Calling other methods that affect the request or disabling fetch
            domain before body is received results in an undefined behavior.
            </summary>
            <param name = "requestId">requestId</param>
            <returns>returns System.Threading.Tasks.Task&lt;TakeResponseBodyAsStreamResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.WebAudio.ContextType">
            <summary>
            Enum of BaseAudioContext types
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAudio.ContextType.Realtime">
            <summary>
            realtime
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAudio.ContextType.Offline">
            <summary>
            offline
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAudio.ContextState">
            <summary>
            Enum of AudioContextState from the spec
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAudio.ContextState.Suspended">
            <summary>
            suspended
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAudio.ContextState.Running">
            <summary>
            running
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAudio.ContextState.Closed">
            <summary>
            closed
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAudio.ChannelCountMode">
            <summary>
            Enum of AudioNode::ChannelCountMode from the spec
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAudio.ChannelCountMode.ClampedMax">
            <summary>
            clamped-max
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAudio.ChannelCountMode.Explicit">
            <summary>
            explicit
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAudio.ChannelCountMode.Max">
            <summary>
            max
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAudio.ChannelInterpretation">
            <summary>
            Enum of AudioNode::ChannelInterpretation from the spec
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAudio.ChannelInterpretation.Discrete">
            <summary>
            discrete
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAudio.ChannelInterpretation.Speakers">
            <summary>
            speakers
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAudio.AutomationRate">
            <summary>
            Enum of AudioParam::AutomationRate from the spec
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAudio.AutomationRate.ARate">
            <summary>
            a-rate
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAudio.AutomationRate.KRate">
            <summary>
            k-rate
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAudio.ContextRealtimeData">
            <summary>
            Fields in AudioContext that change in real-time.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.ContextRealtimeData.CurrentTime">
            <summary>
            The current context time in second in BaseAudioContext.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.ContextRealtimeData.RenderCapacity">
            <summary>
            The time spent on rendering graph divided by render qunatum duration,
            and multiplied by 100. 100 means the audio renderer reached the full
            capacity and glitch may occur.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.ContextRealtimeData.CallbackIntervalMean">
            <summary>
            A running mean of callback interval.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.ContextRealtimeData.CallbackIntervalVariance">
            <summary>
            A running variance of callback interval.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAudio.BaseAudioContext">
            <summary>
            Protocol object for BaseAudioContext
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.BaseAudioContext.ContextId">
            <summary>
            ContextId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.BaseAudioContext.contextType">
            <summary>
            ContextType
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.BaseAudioContext.contextState">
            <summary>
            ContextState
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.BaseAudioContext.RealtimeData">
            <summary>
            RealtimeData
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.BaseAudioContext.CallbackBufferSize">
            <summary>
            Platform-dependent callback buffer size.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.BaseAudioContext.MaxOutputChannelCount">
            <summary>
            Number of output channels supported by audio hardware in use.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.BaseAudioContext.SampleRate">
            <summary>
            Context sample rate.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAudio.AudioListener">
            <summary>
            Protocol object for AudioListner
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioListener.ListenerId">
            <summary>
            ListenerId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioListener.ContextId">
            <summary>
            ContextId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAudio.AudioNode">
            <summary>
            Protocol object for AudioNode
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioNode.NodeId">
            <summary>
            NodeId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioNode.ContextId">
            <summary>
            ContextId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioNode.NodeType">
            <summary>
            NodeType
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioNode.NumberOfInputs">
            <summary>
            NumberOfInputs
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioNode.NumberOfOutputs">
            <summary>
            NumberOfOutputs
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioNode.ChannelCount">
            <summary>
            ChannelCount
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioNode.channelCountMode">
            <summary>
            ChannelCountMode
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioNode.channelInterpretation">
            <summary>
            ChannelInterpretation
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAudio.AudioParam">
            <summary>
            Protocol object for AudioParam
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioParam.ParamId">
            <summary>
            ParamId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioParam.NodeId">
            <summary>
            NodeId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioParam.ContextId">
            <summary>
            ContextId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioParam.ParamType">
            <summary>
            ParamType
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioParam.rate">
            <summary>
            Rate
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioParam.DefaultValue">
            <summary>
            DefaultValue
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioParam.MinValue">
            <summary>
            MinValue
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.AudioParam.MaxValue">
            <summary>
            MaxValue
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAudio.GetRealtimeDataResponse">
            <summary>
            GetRealtimeDataResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAudio.GetRealtimeDataResponse.RealtimeData">
            <summary>
            realtimeData
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAudio.WebAudioClient">
            <summary>
            This domain allows inspection of Web Audio API.
            https://webaudio.github.io/web-audio-api/
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.WebAudio.WebAudioClient.EnableAsync">
            <summary>
            Enables the WebAudio domain and starts sending context lifetime events.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.WebAudio.WebAudioClient.DisableAsync">
            <summary>
            Disables the WebAudio domain.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.WebAudio.WebAudioClient.GetRealtimeDataAsync(System.String)">
            <summary>
            Fetch the realtime data from the registered contexts.
            </summary>
            <param name = "contextId">contextId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetRealtimeDataResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.WebAuthn.AuthenticatorProtocol">
            <summary>
            AuthenticatorProtocol
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAuthn.AuthenticatorProtocol.U2f">
            <summary>
            u2f
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAuthn.AuthenticatorProtocol.Ctap2">
            <summary>
            ctap2
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAuthn.AuthenticatorTransport">
            <summary>
            AuthenticatorTransport
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAuthn.AuthenticatorTransport.Usb">
            <summary>
            usb
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAuthn.AuthenticatorTransport.Nfc">
            <summary>
            nfc
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAuthn.AuthenticatorTransport.Ble">
            <summary>
            ble
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAuthn.AuthenticatorTransport.Cable">
            <summary>
            cable
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.WebAuthn.AuthenticatorTransport.Internal">
            <summary>
            internal
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAuthn.VirtualAuthenticatorOptions">
            <summary>
            VirtualAuthenticatorOptions
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.VirtualAuthenticatorOptions.protocol">
            <summary>
            Protocol
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.VirtualAuthenticatorOptions.transport">
            <summary>
            Transport
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.VirtualAuthenticatorOptions.HasResidentKey">
            <summary>
            Defaults to false.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.VirtualAuthenticatorOptions.HasUserVerification">
            <summary>
            Defaults to false.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.VirtualAuthenticatorOptions.AutomaticPresenceSimulation">
            <summary>
            If set to true, tests of user presence will succeed immediately.
            Otherwise, they will not be resolved. Defaults to true.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.VirtualAuthenticatorOptions.IsUserVerified">
            <summary>
            Sets whether User Verification succeeds or fails for an authenticator.
            Defaults to false.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAuthn.Credential">
            <summary>
            Credential
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.Credential.CredentialId">
            <summary>
            CredentialId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.Credential.IsResidentCredential">
            <summary>
            IsResidentCredential
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.Credential.RpId">
            <summary>
            Relying Party ID the credential is scoped to. Must be set when adding a
            credential.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.Credential.PrivateKey">
            <summary>
            The ECDSA P-256 private key in PKCS#8 format.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.Credential.UserHandle">
            <summary>
            An opaque byte sequence with a maximum size of 64 bytes mapping the
            credential to a specific user.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.Credential.SignCount">
            <summary>
            Signature counter. This is incremented by one for each successful
            assertion.
            See https://w3c.github.io/webauthn/#signature-counter
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAuthn.AddVirtualAuthenticatorResponse">
            <summary>
            AddVirtualAuthenticatorResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.AddVirtualAuthenticatorResponse.AuthenticatorId">
            <summary>
            authenticatorId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAuthn.GetCredentialResponse">
            <summary>
            GetCredentialResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.GetCredentialResponse.Credential">
            <summary>
            credential
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAuthn.GetCredentialsResponse">
            <summary>
            GetCredentialsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.WebAuthn.GetCredentialsResponse.Credentials">
            <summary>
            credentials
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.WebAuthn.WebAuthnClient">
            <summary>
            This domain allows configuring virtual authenticators to test the WebAuthn
            API.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.WebAuthn.WebAuthnClient.EnableAsync">
            <summary>
            Enable the WebAuthn domain and start intercepting credential storage and
            retrieval with a virtual authenticator.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.WebAuthn.WebAuthnClient.DisableAsync">
            <summary>
            Disable the WebAuthn domain.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.WebAuthn.WebAuthnClient.AddVirtualAuthenticatorAsync(CefSharp.DevTools.WebAuthn.VirtualAuthenticatorOptions)">
            <summary>
            Creates and adds a virtual authenticator.
            </summary>
            <param name = "options">options</param>
            <returns>returns System.Threading.Tasks.Task&lt;AddVirtualAuthenticatorResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.WebAuthn.WebAuthnClient.RemoveVirtualAuthenticatorAsync(System.String)">
            <summary>
            Removes the given authenticator.
            </summary>
            <param name = "authenticatorId">authenticatorId</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.WebAuthn.WebAuthnClient.AddCredentialAsync(System.String,CefSharp.DevTools.WebAuthn.Credential)">
            <summary>
            Adds the credential to the specified authenticator.
            </summary>
            <param name = "authenticatorId">authenticatorId</param>
            <param name = "credential">credential</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.WebAuthn.WebAuthnClient.GetCredentialAsync(System.String,System.Byte[])">
            <summary>
            Returns a single credential stored in the given virtual authenticator that
            matches the credential ID.
            </summary>
            <param name = "authenticatorId">authenticatorId</param>
            <param name = "credentialId">credentialId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetCredentialResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.WebAuthn.WebAuthnClient.GetCredentialsAsync(System.String)">
            <summary>
            Returns all the credentials stored in the given virtual authenticator.
            </summary>
            <param name = "authenticatorId">authenticatorId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetCredentialsResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.WebAuthn.WebAuthnClient.RemoveCredentialAsync(System.String,System.Byte[])">
            <summary>
            Removes a credential from the authenticator.
            </summary>
            <param name = "authenticatorId">authenticatorId</param>
            <param name = "credentialId">credentialId</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.WebAuthn.WebAuthnClient.ClearCredentialsAsync(System.String)">
            <summary>
            Clears all the credentials from the specified device.
            </summary>
            <param name = "authenticatorId">authenticatorId</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.WebAuthn.WebAuthnClient.SetUserVerifiedAsync(System.String,System.Boolean)">
            <summary>
            Sets whether User Verification succeeds or fails for an authenticator.
            The default is true.
            </summary>
            <param name = "authenticatorId">authenticatorId</param>
            <param name = "isUserVerified">isUserVerified</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.WebAuthn.WebAuthnClient.SetAutomaticPresenceSimulationAsync(System.String,System.Boolean)">
            <summary>
            Sets whether tests of user presence will succeed immediately (if true) or fail to resolve (if false) for an authenticator.
            The default is true.
            </summary>
            <param name = "authenticatorId">authenticatorId</param>
            <param name = "enabled">enabled</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Media.PlayerMessage">
            <summary>
            Have one type per entry in MediaLogRecord::Type
            Corresponds to kMessage
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Media.PlayerMessage.Level">
            <summary>
            Keep in sync with MediaLogMessageLevel
            We are currently keeping the message level 'error' separate from the
            PlayerError type because right now they represent different things,
            this one being a DVLOG(ERROR) style log message that gets printed
            based on what log level is selected in the UI, and the other is a
            representation of a media::PipelineStatus object. Soon however we're
            going to be moving away from using PipelineStatus for errors and
            introducing a new error type which should hopefully let us integrate
            the error log level into the PlayerError type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Media.PlayerMessage.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Media.PlayerProperty">
            <summary>
            Corresponds to kMediaPropertyChange
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Media.PlayerProperty.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Media.PlayerProperty.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Media.PlayerEvent">
            <summary>
            Corresponds to kMediaEventTriggered
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Media.PlayerEvent.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Media.PlayerEvent.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Media.PlayerError">
            <summary>
            Corresponds to kMediaError
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Media.PlayerError.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Media.PlayerError.ErrorCode">
            <summary>
            When this switches to using media::Status instead of PipelineStatus
            we can remove "errorCode" and replace it with the fields from
            a Status instance. This also seems like a duplicate of the error
            level enum - there is a todo bug to have that level removed and
            use this instead. (crbug.com/1068454)
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Media.MediaClient">
            <summary>
            This domain allows detailed inspection of media elements
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Media.MediaClient.EnableAsync">
            <summary>
            Enables the Media domain
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Media.MediaClient.DisableAsync">
            <summary>
            Disables the Media domain.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.Location">
            <summary>
            Location in the source code.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.Location.ScriptId">
            <summary>
            Script identifier as reported in the `Debugger.scriptParsed`.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.Location.LineNumber">
            <summary>
            Line number in the script (0-based).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.Location.ColumnNumber">
            <summary>
            Column number in the script (0-based).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.ScriptPosition">
            <summary>
            Location in the source code.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.ScriptPosition.LineNumber">
            <summary>
            LineNumber
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.ScriptPosition.ColumnNumber">
            <summary>
            ColumnNumber
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.LocationRange">
            <summary>
            Location range within one script.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.LocationRange.ScriptId">
            <summary>
            ScriptId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.LocationRange.Start">
            <summary>
            Start
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.LocationRange.End">
            <summary>
            End
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.CallFrame">
            <summary>
            JavaScript call frame. Array of call frames form the call stack.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.CallFrame.CallFrameId">
            <summary>
            Call frame identifier. This identifier is only valid while the virtual machine is paused.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.CallFrame.FunctionName">
            <summary>
            Name of the JavaScript function called on this call frame.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.CallFrame.FunctionLocation">
            <summary>
            Location in the source code.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.CallFrame.Location">
            <summary>
            Location in the source code.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.CallFrame.Url">
            <summary>
            JavaScript script name or url.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.CallFrame.ScopeChain">
            <summary>
            Scope chain for this call frame.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.CallFrame.This">
            <summary>
            `this` object for this call frame.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.CallFrame.ReturnValue">
            <summary>
            The value being returned, if the function is at return point.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.Scope">
            <summary>
            Scope description.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.Scope.Type">
            <summary>
            Scope type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.Scope.Object">
            <summary>
            Object representing the scope. For `global` and `with` scopes it represents the actual
            object; for the rest of the scopes, it is artificial transient object enumerating scope
            variables as its properties.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.Scope.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.Scope.StartLocation">
            <summary>
            Location in the source code where scope starts
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.Scope.EndLocation">
            <summary>
            Location in the source code where scope ends
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.SearchMatch">
            <summary>
            Search match for resource.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SearchMatch.LineNumber">
            <summary>
            Line number in resource content.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SearchMatch.LineContent">
            <summary>
            Line with match content.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.BreakLocation">
            <summary>
            BreakLocation
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.BreakLocation.ScriptId">
            <summary>
            Script identifier as reported in the `Debugger.scriptParsed`.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.BreakLocation.LineNumber">
            <summary>
            Line number in the script (0-based).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.BreakLocation.ColumnNumber">
            <summary>
            Column number in the script (0-based).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.BreakLocation.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.ScriptLanguage">
            <summary>
            Enum of possible script languages.
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Debugger.ScriptLanguage.JavaScript">
            <summary>
            JavaScript
            </summary>
        </member>
        <member name="F:CefSharp.DevTools.Debugger.ScriptLanguage.WebAssembly">
            <summary>
            WebAssembly
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.DebugSymbols">
            <summary>
            Debug symbols available for a wasm script.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.DebugSymbols.Type">
            <summary>
            Type of the debug symbols.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.DebugSymbols.ExternalURL">
            <summary>
            URL of the external symbol source.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.EnableResponse">
            <summary>
            EnableResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.EnableResponse.DebuggerId">
            <summary>
            debuggerId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.EvaluateOnCallFrameResponse">
            <summary>
            EvaluateOnCallFrameResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.EvaluateOnCallFrameResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.EvaluateOnCallFrameResponse.ExceptionDetails">
            <summary>
            exceptionDetails
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.ExecuteWasmEvaluatorResponse">
            <summary>
            ExecuteWasmEvaluatorResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.ExecuteWasmEvaluatorResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.ExecuteWasmEvaluatorResponse.ExceptionDetails">
            <summary>
            exceptionDetails
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.GetPossibleBreakpointsResponse">
            <summary>
            GetPossibleBreakpointsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.GetPossibleBreakpointsResponse.Locations">
            <summary>
            locations
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.GetScriptSourceResponse">
            <summary>
            GetScriptSourceResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.GetScriptSourceResponse.ScriptSource">
            <summary>
            scriptSource
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.GetScriptSourceResponse.Bytecode">
            <summary>
            bytecode
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.GetStackTraceResponse">
            <summary>
            GetStackTraceResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.GetStackTraceResponse.StackTrace">
            <summary>
            stackTrace
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.RestartFrameResponse">
            <summary>
            RestartFrameResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.RestartFrameResponse.CallFrames">
            <summary>
            callFrames
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.RestartFrameResponse.AsyncStackTrace">
            <summary>
            asyncStackTrace
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.RestartFrameResponse.AsyncStackTraceId">
            <summary>
            asyncStackTraceId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.SearchInContentResponse">
            <summary>
            SearchInContentResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SearchInContentResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.SetBreakpointResponse">
            <summary>
            SetBreakpointResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SetBreakpointResponse.BreakpointId">
            <summary>
            breakpointId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SetBreakpointResponse.ActualLocation">
            <summary>
            actualLocation
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.SetInstrumentationBreakpointResponse">
            <summary>
            SetInstrumentationBreakpointResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SetInstrumentationBreakpointResponse.BreakpointId">
            <summary>
            breakpointId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.SetBreakpointByUrlResponse">
            <summary>
            SetBreakpointByUrlResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SetBreakpointByUrlResponse.BreakpointId">
            <summary>
            breakpointId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SetBreakpointByUrlResponse.Locations">
            <summary>
            locations
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.SetBreakpointOnFunctionCallResponse">
            <summary>
            SetBreakpointOnFunctionCallResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SetBreakpointOnFunctionCallResponse.BreakpointId">
            <summary>
            breakpointId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.SetScriptSourceResponse">
            <summary>
            SetScriptSourceResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SetScriptSourceResponse.CallFrames">
            <summary>
            callFrames
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SetScriptSourceResponse.StackChanged">
            <summary>
            stackChanged
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SetScriptSourceResponse.AsyncStackTrace">
            <summary>
            asyncStackTrace
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SetScriptSourceResponse.AsyncStackTraceId">
            <summary>
            asyncStackTraceId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Debugger.SetScriptSourceResponse.ExceptionDetails">
            <summary>
            exceptionDetails
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Debugger.DebuggerClient">
            <summary>
            Debugger domain exposes JavaScript debugging capabilities. It allows setting and removing
            breakpoints, stepping through execution, exploring stack traces, etc.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.ContinueToLocationAsync(CefSharp.DevTools.Debugger.Location,System.String)">
            <summary>
            Continues execution until specific location is reached.
            </summary>
            <param name = "location">Location to continue to.</param>
            <param name = "targetCallFrames">targetCallFrames</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.DisableAsync">
            <summary>
            Disables debugger for given page.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Debugger.DebuggerClient.EnableAsync(System.Nullable{System.Int64})" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Debugger.DebuggerClient.EvaluateOnCallFrameAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int64})" -->
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.ExecuteWasmEvaluatorAsync(System.String,System.Byte[],System.Nullable{System.Int64})">
            <summary>
            Execute a Wasm Evaluator module on a given call frame.
            </summary>
            <param name = "callFrameId">WebAssembly call frame identifier to evaluate on.</param>
            <param name = "evaluator">Code of the evaluator module.</param>
            <param name = "timeout">Terminate execution after timing out (number of milliseconds).</param>
            <returns>returns System.Threading.Tasks.Task&lt;ExecuteWasmEvaluatorResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Debugger.DebuggerClient.GetPossibleBreakpointsAsync(CefSharp.DevTools.Debugger.Location,CefSharp.DevTools.Debugger.Location,System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.GetScriptSourceAsync(System.String)">
            <summary>
            Returns source for the script with given id.
            </summary>
            <param name = "scriptId">Id of the script to get source for.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetScriptSourceResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.GetStackTraceAsync(CefSharp.DevTools.Runtime.StackTraceId)">
            <summary>
            Returns stack trace with given `stackTraceId`.
            </summary>
            <param name = "stackTraceId">stackTraceId</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetStackTraceResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.PauseAsync">
            <summary>
            Stops on the next JavaScript statement.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.RemoveBreakpointAsync(System.String)">
            <summary>
            Removes JavaScript breakpoint.
            </summary>
            <param name = "breakpointId">breakpointId</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.RestartFrameAsync(System.String)">
            <summary>
            Restarts particular call frame from the beginning.
            </summary>
            <param name = "callFrameId">Call frame identifier to evaluate on.</param>
            <returns>returns System.Threading.Tasks.Task&lt;RestartFrameResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Debugger.DebuggerClient.ResumeAsync(System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.SearchInContentAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Searches for given string in script content.
            </summary>
            <param name = "scriptId">Id of the script to search in.</param>
            <param name = "query">String to search for.</param>
            <param name = "caseSensitive">If true, search is case sensitive.</param>
            <param name = "isRegex">If true, treats string parameter as regex.</param>
            <returns>returns System.Threading.Tasks.Task&lt;SearchInContentResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Debugger.DebuggerClient.SetAsyncCallStackDepthAsync(System.Int32)" -->
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.SetBlackboxPatternsAsync(System.String[])">
            <summary>
            Replace previous blackbox patterns with passed ones. Forces backend to skip stepping/pausing in
            scripts with url matching one of the patterns. VM will try to leave blackboxed script by
            performing 'step in' several times, finally resorting to 'step out' if unsuccessful.
            </summary>
            <param name = "patterns">Array of regexps that will be used to check script url for blackbox state.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.SetBlackboxedRangesAsync(System.String,System.Collections.Generic.IList{CefSharp.DevTools.Debugger.ScriptPosition})">
            <summary>
            Makes backend skip steps in the script in blackboxed ranges. VM will try leave blacklisted
            scripts by performing 'step in' several times, finally resorting to 'step out' if unsuccessful.
            Positions array contains positions where blackbox state is changed. First interval isn't
            blackboxed. Array should be sorted.
            </summary>
            <param name = "scriptId">Id of the script.</param>
            <param name = "positions">positions</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Debugger.DebuggerClient.SetBreakpointAsync(CefSharp.DevTools.Debugger.Location,System.String)" -->
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.SetInstrumentationBreakpointAsync(System.String)">
            <summary>
            Sets instrumentation breakpoint.
            </summary>
            <param name = "instrumentation">Instrumentation name.</param>
            <returns>returns System.Threading.Tasks.Task&lt;SetInstrumentationBreakpointResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Debugger.DebuggerClient.SetBreakpointByUrlAsync(System.Int32,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Debugger.DebuggerClient.SetBreakpointOnFunctionCallAsync(System.String,System.String)" -->
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.SetBreakpointsActiveAsync(System.Boolean)">
            <summary>
            Activates / deactivates all breakpoints on the page.
            </summary>
            <param name = "active">New value for breakpoints active state.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.SetPauseOnExceptionsAsync(System.String)">
            <summary>
            Defines pause on exceptions state. Can be set to stop on all exceptions, uncaught exceptions or
            no exceptions. Initial pause on exceptions state is `none`.
            </summary>
            <param name = "state">Pause on exceptions mode.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.SetReturnValueAsync(CefSharp.DevTools.Runtime.CallArgument)">
            <summary>
            Changes return value in top frame. Available only at return break position.
            </summary>
            <param name = "newValue">New return value.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Debugger.DebuggerClient.SetScriptSourceAsync(System.String,System.String,System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.SetSkipAllPausesAsync(System.Boolean)">
            <summary>
            Makes page not interrupt on any pauses (breakpoint, exception, dom exception etc).
            </summary>
            <param name = "skip">New value for skip pauses state.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Debugger.DebuggerClient.SetVariableValueAsync(System.Int32,System.String,CefSharp.DevTools.Runtime.CallArgument,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Debugger.DebuggerClient.StepIntoAsync(System.Nullable{System.Boolean},System.Collections.Generic.IList{CefSharp.DevTools.Debugger.LocationRange})" -->
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.StepOutAsync">
            <summary>
            Steps out of the function call.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Debugger.DebuggerClient.StepOverAsync(System.Collections.Generic.IList{CefSharp.DevTools.Debugger.LocationRange})">
            <summary>
            Steps over the statement.
            </summary>
            <param name = "skipList">The skipList specifies location ranges that should be skipped on step over.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.HeapProfiler.SamplingHeapProfileNode">
            <summary>
            Sampling Heap Profile node. Holds callsite information, allocation statistics and child nodes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.SamplingHeapProfileNode.CallFrame">
            <summary>
            Function location.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.SamplingHeapProfileNode.SelfSize">
            <summary>
            Allocations size in bytes for the node excluding children.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.SamplingHeapProfileNode.Id">
            <summary>
            Node id. Ids are unique across all profiles collected between startSampling and stopSampling.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.SamplingHeapProfileNode.Children">
            <summary>
            Child nodes.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.HeapProfiler.SamplingHeapProfileSample">
            <summary>
            A single sample from a sampling profile.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.SamplingHeapProfileSample.Size">
            <summary>
            Allocation size in bytes attributed to the sample.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.SamplingHeapProfileSample.NodeId">
            <summary>
            Id of the corresponding profile tree node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.SamplingHeapProfileSample.Ordinal">
            <summary>
            Time-ordered sample ordinal number. It is unique across all profiles retrieved
            between startSampling and stopSampling.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.HeapProfiler.SamplingHeapProfile">
            <summary>
            Sampling profile.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.SamplingHeapProfile.Head">
            <summary>
            Head
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.SamplingHeapProfile.Samples">
            <summary>
            Samples
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.HeapProfiler.GetHeapObjectIdResponse">
            <summary>
            GetHeapObjectIdResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.GetHeapObjectIdResponse.HeapSnapshotObjectId">
            <summary>
            heapSnapshotObjectId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.HeapProfiler.GetObjectByHeapObjectIdResponse">
            <summary>
            GetObjectByHeapObjectIdResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.GetObjectByHeapObjectIdResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.HeapProfiler.GetSamplingProfileResponse">
            <summary>
            GetSamplingProfileResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.GetSamplingProfileResponse.Profile">
            <summary>
            profile
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.HeapProfiler.StopSamplingResponse">
            <summary>
            StopSamplingResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.HeapProfiler.StopSamplingResponse.Profile">
            <summary>
            profile
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.HeapProfiler.HeapProfilerClient">
            <summary>
            HeapProfiler
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.HeapProfiler.HeapProfilerClient.AddInspectedHeapObjectAsync(System.String)">
            <summary>
            Enables console to refer to the node with given id via $x (see Command Line API for more details
            $x functions).
            </summary>
            <param name = "heapObjectId">Heap snapshot object id to be accessible by means of $x command line API.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.HeapProfiler.HeapProfilerClient.CollectGarbageAsync">
            <summary>
            CollectGarbage
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.HeapProfiler.HeapProfilerClient.DisableAsync">
            <summary>
            Disable
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.HeapProfiler.HeapProfilerClient.EnableAsync">
            <summary>
            Enable
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.HeapProfiler.HeapProfilerClient.GetHeapObjectIdAsync(System.String)">
            <summary>
            GetHeapObjectId
            </summary>
            <param name = "objectId">Identifier of the object to get heap object id for.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetHeapObjectIdResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.HeapProfiler.HeapProfilerClient.GetObjectByHeapObjectIdAsync(System.String,System.String)">
            <summary>
            GetObjectByHeapObjectId
            </summary>
            <param name = "objectId">objectId</param>
            <param name = "objectGroup">Symbolic group name that can be used to release multiple objects.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GetObjectByHeapObjectIdResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.HeapProfiler.HeapProfilerClient.GetSamplingProfileAsync">
            <summary>
            GetSamplingProfile
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetSamplingProfileResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.HeapProfiler.HeapProfilerClient.StartSamplingAsync(System.Nullable{System.Int64})" -->
        <member name="M:CefSharp.DevTools.HeapProfiler.HeapProfilerClient.StartTrackingHeapObjectsAsync(System.Nullable{System.Boolean})">
            <summary>
            StartTrackingHeapObjects
            </summary>
            <param name = "trackAllocations">trackAllocations</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.HeapProfiler.HeapProfilerClient.StopSamplingAsync">
            <summary>
            StopSampling
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;StopSamplingResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.HeapProfiler.HeapProfilerClient.StopTrackingHeapObjectsAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.HeapProfiler.HeapProfilerClient.TakeHeapSnapshotAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            TakeHeapSnapshot
            </summary>
            <param name = "reportProgress">If true 'reportHeapSnapshotProgress' events will be generated while snapshot is being taken.</param>
            <param name = "treatGlobalObjectsAsRoots">If true, a raw snapshot without artifical roots will be generated</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.ProfileNode">
            <summary>
            Profile node. Holds callsite information, execution statistics and child nodes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.ProfileNode.Id">
            <summary>
            Unique id of the node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.ProfileNode.CallFrame">
            <summary>
            Function location.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.ProfileNode.HitCount">
            <summary>
            Number of samples where this node was on top of the call stack.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.ProfileNode.Children">
            <summary>
            Child node ids.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.ProfileNode.DeoptReason">
            <summary>
            The reason of being not optimized. The function may be deoptimized or marked as don't
            optimize.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.ProfileNode.PositionTicks">
            <summary>
            An array of source position ticks.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.Profile">
            <summary>
            Profile.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.Profile.Nodes">
            <summary>
            The list of profile nodes. First item is the root node.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.Profile.StartTime">
            <summary>
            Profiling start timestamp in microseconds.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.Profile.EndTime">
            <summary>
            Profiling end timestamp in microseconds.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.Profile.Samples">
            <summary>
            Ids of samples top nodes.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.Profile.TimeDeltas">
            <summary>
            Time intervals between adjacent samples in microseconds. The first delta is relative to the
            profile startTime.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.PositionTickInfo">
            <summary>
            Specifies a number of samples attributed to a certain source position.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.PositionTickInfo.Line">
            <summary>
            Source line number (1-based).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.PositionTickInfo.Ticks">
            <summary>
            Number of samples attributed to the source line.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.CoverageRange">
            <summary>
            Coverage data for a source range.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.CoverageRange.StartOffset">
            <summary>
            JavaScript script source offset for the range start.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.CoverageRange.EndOffset">
            <summary>
            JavaScript script source offset for the range end.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.CoverageRange.Count">
            <summary>
            Collected execution count of the source range.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.FunctionCoverage">
            <summary>
            Coverage data for a JavaScript function.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.FunctionCoverage.FunctionName">
            <summary>
            JavaScript function name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.FunctionCoverage.Ranges">
            <summary>
            Source ranges inside the function with coverage data.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.FunctionCoverage.IsBlockCoverage">
            <summary>
            Whether coverage data for this function has block granularity.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.ScriptCoverage">
            <summary>
            Coverage data for a JavaScript script.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.ScriptCoverage.ScriptId">
            <summary>
            JavaScript script id.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.ScriptCoverage.Url">
            <summary>
            JavaScript script name or url.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.ScriptCoverage.Functions">
            <summary>
            Functions contained in the script that has coverage data.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.TypeObject">
            <summary>
            Describes a type collected during runtime.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.TypeObject.Name">
            <summary>
            Name of a type collected with type profiling.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.TypeProfileEntry">
            <summary>
            Source offset and types for a parameter or return value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.TypeProfileEntry.Offset">
            <summary>
            Source offset of the parameter or end of function for return values.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.TypeProfileEntry.Types">
            <summary>
            The types for this parameter or return value.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.ScriptTypeProfile">
            <summary>
            Type profile data collected during runtime for a JavaScript script.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.ScriptTypeProfile.ScriptId">
            <summary>
            JavaScript script id.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.ScriptTypeProfile.Url">
            <summary>
            JavaScript script name or url.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.ScriptTypeProfile.Entries">
            <summary>
            Type profile entries for parameters and return values of the functions in the script.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.CounterInfo">
            <summary>
            Collected counter information.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.CounterInfo.Name">
            <summary>
            Counter name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.CounterInfo.Value">
            <summary>
            Counter value.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.GetBestEffortCoverageResponse">
            <summary>
            GetBestEffortCoverageResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.GetBestEffortCoverageResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.StartPreciseCoverageResponse">
            <summary>
            StartPreciseCoverageResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.StartPreciseCoverageResponse.Timestamp">
            <summary>
            timestamp
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.StopResponse">
            <summary>
            StopResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.StopResponse.Profile">
            <summary>
            profile
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.TakePreciseCoverageResponse">
            <summary>
            TakePreciseCoverageResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.TakePreciseCoverageResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.TakePreciseCoverageResponse.Timestamp">
            <summary>
            timestamp
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.TakeTypeProfileResponse">
            <summary>
            TakeTypeProfileResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.TakeTypeProfileResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.GetRuntimeCallStatsResponse">
            <summary>
            GetRuntimeCallStatsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Profiler.GetRuntimeCallStatsResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Profiler.ProfilerClient">
            <summary>
            Profiler
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.DisableAsync">
            <summary>
            Disable
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.EnableAsync">
            <summary>
            Enable
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.GetBestEffortCoverageAsync">
            <summary>
            Collect coverage data for the current isolate. The coverage data may be incomplete due to
            garbage collection.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetBestEffortCoverageResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.SetSamplingIntervalAsync(System.Int32)">
            <summary>
            Changes CPU profiler sampling interval. Must be called before CPU profiles recording started.
            </summary>
            <param name = "interval">New sampling interval in microseconds.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.StartAsync">
            <summary>
            Start
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.StartPreciseCoverageAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Enable precise code coverage. Coverage data for JavaScript executed before enabling precise code
            coverage may be incomplete. Enabling prevents running optimized code and resets execution
            counters.
            </summary>
            <param name = "callCount">Collect accurate call counts beyond simple 'covered' or 'not covered'.</param>
            <param name = "detailed">Collect block-based coverage.</param>
            <param name = "allowTriggeredUpdates">Allow the backend to send updates on its own initiative</param>
            <returns>returns System.Threading.Tasks.Task&lt;StartPreciseCoverageResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.StartTypeProfileAsync">
            <summary>
            Enable type profile.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.StopAsync">
            <summary>
            Stop
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;StopResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.StopPreciseCoverageAsync">
            <summary>
            Disable precise code coverage. Disabling releases unnecessary execution count records and allows
            executing optimized code.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.StopTypeProfileAsync">
            <summary>
            Disable type profile. Disabling releases type profile data collected so far.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.TakePreciseCoverageAsync">
            <summary>
            Collect coverage data for the current isolate, and resets execution counters. Precise code
            coverage needs to have started.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;TakePreciseCoverageResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.TakeTypeProfileAsync">
            <summary>
            Collect type profile.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;TakeTypeProfileResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.EnableRuntimeCallStatsAsync">
            <summary>
            Enable run time call stats collection.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.DisableRuntimeCallStatsAsync">
            <summary>
            Disable run time call stats collection.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Profiler.ProfilerClient.GetRuntimeCallStatsAsync">
            <summary>
            Retrieve run time call stats.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetRuntimeCallStatsResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.RemoteObject">
            <summary>
            Mirror object referencing original JavaScript object.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.RemoteObject.Type">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.RemoteObject.Subtype">
            <summary>
            Object subtype hint. Specified for `object` or `wasm` type values only.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.RemoteObject.ClassName">
            <summary>
            Object class (constructor) name. Specified for `object` type values only.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.RemoteObject.Value">
            <summary>
            Remote object value in case of primitive values or JSON values (if it was requested).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.RemoteObject.UnserializableValue">
            <summary>
            Primitive value which can not be JSON-stringified does not have `value`, but gets this
            property.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.RemoteObject.Description">
            <summary>
            String representation of the object.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.RemoteObject.ObjectId">
            <summary>
            Unique object identifier (for non-primitive values).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.RemoteObject.Preview">
            <summary>
            Preview containing abbreviated property values. Specified for `object` type values only.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.RemoteObject.CustomPreview">
            <summary>
            CustomPreview
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.CustomPreview">
            <summary>
            CustomPreview
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CustomPreview.Header">
            <summary>
            The JSON-stringified result of formatter.header(object, config) call.
            It contains json ML array that represents RemoteObject.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CustomPreview.BodyGetterId">
            <summary>
            If formatter returns true as a result of formatter.hasBody call then bodyGetterId will
            contain RemoteObjectId for the function that returns result of formatter.body(object, config) call.
            The result value is json ML array.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.ObjectPreview">
            <summary>
            Object containing abbreviated remote object value.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ObjectPreview.Type">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ObjectPreview.Subtype">
            <summary>
            Object subtype hint. Specified for `object` type values only.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ObjectPreview.Description">
            <summary>
            String representation of the object.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ObjectPreview.Overflow">
            <summary>
            True iff some of the properties or entries of the original object did not fit.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ObjectPreview.Properties">
            <summary>
            List of the properties.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ObjectPreview.Entries">
            <summary>
            List of the entries. Specified for `map` and `set` subtype values only.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.PropertyPreview">
            <summary>
            PropertyPreview
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyPreview.Name">
            <summary>
            Property name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyPreview.Type">
            <summary>
            Object type. Accessor means that the property itself is an accessor property.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyPreview.Value">
            <summary>
            User-friendly property value string.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyPreview.ValuePreview">
            <summary>
            Nested value preview.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyPreview.Subtype">
            <summary>
            Object subtype hint. Specified for `object` type values only.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.EntryPreview">
            <summary>
            EntryPreview
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.EntryPreview.Key">
            <summary>
            Preview of the key. Specified for map-like collection entries.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.EntryPreview.Value">
            <summary>
            Preview of the value.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.PropertyDescriptor">
            <summary>
            Object property descriptor.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyDescriptor.Name">
            <summary>
            Property name or symbol description.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyDescriptor.Value">
            <summary>
            The value associated with the property.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyDescriptor.Writable">
            <summary>
            True if the value associated with the property may be changed (data descriptors only).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyDescriptor.Get">
            <summary>
            A function which serves as a getter for the property, or `undefined` if there is no getter
            (accessor descriptors only).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyDescriptor.Set">
            <summary>
            A function which serves as a setter for the property, or `undefined` if there is no setter
            (accessor descriptors only).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyDescriptor.Configurable">
            <summary>
            True if the type of this property descriptor may be changed and if the property may be
            deleted from the corresponding object.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyDescriptor.Enumerable">
            <summary>
            True if this property shows up during enumeration of the properties on the corresponding
            object.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyDescriptor.WasThrown">
            <summary>
            True if the result was thrown during the evaluation.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyDescriptor.IsOwn">
            <summary>
            True if the property is owned for the object.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PropertyDescriptor.Symbol">
            <summary>
            Property symbol object, if the property is of the `symbol` type.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.InternalPropertyDescriptor">
            <summary>
            Object internal property descriptor. This property isn't normally visible in JavaScript code.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.InternalPropertyDescriptor.Name">
            <summary>
            Conventional property name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.InternalPropertyDescriptor.Value">
            <summary>
            The value associated with the property.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.PrivatePropertyDescriptor">
            <summary>
            Object private field descriptor.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PrivatePropertyDescriptor.Name">
            <summary>
            Private property name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PrivatePropertyDescriptor.Value">
            <summary>
            The value associated with the private property.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PrivatePropertyDescriptor.Get">
            <summary>
            A function which serves as a getter for the private property,
            or `undefined` if there is no getter (accessor descriptors only).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.PrivatePropertyDescriptor.Set">
            <summary>
            A function which serves as a setter for the private property,
            or `undefined` if there is no setter (accessor descriptors only).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.CallArgument">
            <summary>
            Represents function call argument. Either remote object id `objectId`, primitive `value`,
            unserializable primitive value or neither of (for undefined) them should be specified.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CallArgument.Value">
            <summary>
            Primitive value or serializable javascript object.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CallArgument.UnserializableValue">
            <summary>
            Primitive value which can not be JSON-stringified.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CallArgument.ObjectId">
            <summary>
            Remote object handle.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.ExecutionContextDescription">
            <summary>
            Description of an isolated world.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExecutionContextDescription.Id">
            <summary>
            Unique id of the execution context. It can be used to specify in which execution context
            script evaluation should be performed.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExecutionContextDescription.Origin">
            <summary>
            Execution context origin.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExecutionContextDescription.Name">
            <summary>
            Human readable name describing given context.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExecutionContextDescription.AuxData">
            <summary>
            Embedder-specific auxiliary data.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.ExceptionDetails">
            <summary>
            Detailed information about exception (or error) that was thrown during script compilation or
            execution.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExceptionDetails.ExceptionId">
            <summary>
            Exception id.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExceptionDetails.Text">
            <summary>
            Exception text, which should be used together with exception object when available.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExceptionDetails.LineNumber">
            <summary>
            Line number of the exception location (0-based).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExceptionDetails.ColumnNumber">
            <summary>
            Column number of the exception location (0-based).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExceptionDetails.ScriptId">
            <summary>
            Script ID of the exception location.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExceptionDetails.Url">
            <summary>
            URL of the exception location, to be used when the script was not reported.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExceptionDetails.StackTrace">
            <summary>
            JavaScript stack trace if available.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExceptionDetails.Exception">
            <summary>
            Exception object if available.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.ExceptionDetails.ExecutionContextId">
            <summary>
            Identifier of the context where exception happened.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.CallFrame">
            <summary>
            Stack entry for runtime errors and assertions.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CallFrame.FunctionName">
            <summary>
            JavaScript function name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CallFrame.ScriptId">
            <summary>
            JavaScript script id.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CallFrame.Url">
            <summary>
            JavaScript script name or url.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CallFrame.LineNumber">
            <summary>
            JavaScript script line number (0-based).
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CallFrame.ColumnNumber">
            <summary>
            JavaScript script column number (0-based).
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.StackTrace">
            <summary>
            Call frames for assertions or error messages.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.StackTrace.Description">
            <summary>
            String label of this stack trace. For async traces this may be a name of the function that
            initiated the async call.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.StackTrace.CallFrames">
            <summary>
            JavaScript function name.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.StackTrace.Parent">
            <summary>
            Asynchronous JavaScript stack trace that preceded this stack, if available.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.StackTrace.ParentId">
            <summary>
            Asynchronous JavaScript stack trace that preceded this stack, if available.
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.StackTraceId">
            <summary>
            If `debuggerId` is set stack trace comes from another debugger and can be resolved there. This
            allows to track cross-debugger calls. See `Runtime.StackTrace` and `Debugger.paused` for usages.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.StackTraceId.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.StackTraceId.DebuggerId">
            <summary>
            DebuggerId
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.AwaitPromiseResponse">
            <summary>
            AwaitPromiseResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.AwaitPromiseResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.AwaitPromiseResponse.ExceptionDetails">
            <summary>
            exceptionDetails
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.CallFunctionOnResponse">
            <summary>
            CallFunctionOnResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CallFunctionOnResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CallFunctionOnResponse.ExceptionDetails">
            <summary>
            exceptionDetails
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.CompileScriptResponse">
            <summary>
            CompileScriptResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CompileScriptResponse.ScriptId">
            <summary>
            scriptId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.CompileScriptResponse.ExceptionDetails">
            <summary>
            exceptionDetails
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.EvaluateResponse">
            <summary>
            EvaluateResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.EvaluateResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.EvaluateResponse.ExceptionDetails">
            <summary>
            exceptionDetails
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.GetIsolateIdResponse">
            <summary>
            GetIsolateIdResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.GetIsolateIdResponse.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.GetHeapUsageResponse">
            <summary>
            GetHeapUsageResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.GetHeapUsageResponse.UsedSize">
            <summary>
            usedSize
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.GetHeapUsageResponse.TotalSize">
            <summary>
            totalSize
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.GetPropertiesResponse">
            <summary>
            GetPropertiesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.GetPropertiesResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.GetPropertiesResponse.InternalProperties">
            <summary>
            internalProperties
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.GetPropertiesResponse.PrivateProperties">
            <summary>
            privateProperties
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.GetPropertiesResponse.ExceptionDetails">
            <summary>
            exceptionDetails
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.GlobalLexicalScopeNamesResponse">
            <summary>
            GlobalLexicalScopeNamesResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.GlobalLexicalScopeNamesResponse.Names">
            <summary>
            names
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.QueryObjectsResponse">
            <summary>
            QueryObjectsResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.QueryObjectsResponse.Objects">
            <summary>
            objects
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.RunScriptResponse">
            <summary>
            RunScriptResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.RunScriptResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.Runtime.RunScriptResponse.ExceptionDetails">
            <summary>
            exceptionDetails
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.Runtime.RuntimeClient">
            <summary>
            Runtime domain exposes JavaScript runtime by means of remote evaluation and mirror objects.
            Evaluation results are returned as mirror object that expose object type, string representation
            and unique identifier that can be used for further object reference. Original objects are
            maintained in memory unless they are either explicitly released or are released along with the
            other objects in their object group.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.AwaitPromiseAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Add handler to promise with given promise object id.
            </summary>
            <param name = "promiseObjectId">Identifier of the promise.</param>
            <param name = "returnByValue">Whether the result is expected to be a JSON object that should be sent by value.</param>
            <param name = "generatePreview">Whether preview should be generated for the result.</param>
            <returns>returns System.Threading.Tasks.Task&lt;AwaitPromiseResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Runtime.RuntimeClient.CallFunctionOnAsync(System.String,System.String,System.Collections.Generic.IList{CefSharp.DevTools.Runtime.CallArgument},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Runtime.RuntimeClient.CompileScriptAsync(System.String,System.String,System.Boolean,System.Nullable{System.Int32})" -->
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.DisableAsync">
            <summary>
            Disables reporting of execution contexts creation.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.DiscardConsoleEntriesAsync">
            <summary>
            Discards collected exceptions and console API calls.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.EnableAsync">
            <summary>
            Enables reporting of execution contexts creation by means of `executionContextCreated` event.
            When the reporting gets enabled the event will be sent immediately for each existing execution
            context.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Runtime.RuntimeClient.EvaluateAsync(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.GetIsolateIdAsync">
            <summary>
            Returns the isolate id.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetIsolateIdResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.GetHeapUsageAsync">
            <summary>
            Returns the JavaScript heap usage.
            It is the total usage of the corresponding isolate not scoped to a particular Runtime.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;GetHeapUsageResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Runtime.RuntimeClient.GetPropertiesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" -->
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.GlobalLexicalScopeNamesAsync(System.Nullable{System.Int32})">
            <summary>
            Returns all let, const and class variables from global scope.
            </summary>
            <param name = "executionContextId">Specifies in which execution context to lookup global scope variables.</param>
            <returns>returns System.Threading.Tasks.Task&lt;GlobalLexicalScopeNamesResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.QueryObjectsAsync(System.String,System.String)">
            <summary>
            QueryObjects
            </summary>
            <param name = "prototypeObjectId">Identifier of the prototype to return objects for.</param>
            <param name = "objectGroup">Symbolic group name that can be used to release the results.</param>
            <returns>returns System.Threading.Tasks.Task&lt;QueryObjectsResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.ReleaseObjectAsync(System.String)">
            <summary>
            Releases remote object with given id.
            </summary>
            <param name = "objectId">Identifier of the object to release.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.ReleaseObjectGroupAsync(System.String)">
            <summary>
            Releases all remote objects that belong to a given group.
            </summary>
            <param name = "objectGroup">Symbolic object group name.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.RunIfWaitingForDebuggerAsync">
            <summary>
            Tells inspected instance to run if it was waiting for debugger to attach.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Runtime.RuntimeClient.RunScriptAsync(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" -->
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.Runtime.RuntimeClient.SetAsyncCallStackDepthAsync(System.Int32)" -->
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.SetCustomObjectFormatterEnabledAsync(System.Boolean)">
            <summary>
            SetCustomObjectFormatterEnabled
            </summary>
            <param name = "enabled">enabled</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.SetMaxCallStackSizeToCaptureAsync(System.Int32)">
            <summary>
            SetMaxCallStackSizeToCapture
            </summary>
            <param name = "size">size</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.TerminateExecutionAsync">
            <summary>
            Terminate current or next JavaScript execution.
            Will cancel the termination when the outer-most script execution ends.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.AddBindingAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            If executionContextId is empty, adds binding with the given name on the
            global objects of all inspected contexts, including those created later,
            bindings survive reloads.
            If executionContextId is specified, adds binding only on global object of
            given execution context.
            Binding function takes exactly one argument, this argument should be string,
            in case of any other input, function throws an exception.
            Each binding function call produces Runtime.bindingCalled notification.
            </summary>
            <param name = "name">name</param>
            <param name = "executionContextId">executionContextId</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Runtime.RuntimeClient.RemoveBindingAsync(System.String)">
            <summary>
            This method does not remove binding function from global object but
            unsubscribes current runtime agent from Runtime.bindingCalled notifications.
            </summary>
            <param name = "name">name</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.DeviceOrientation.DeviceOrientationClient">
            <summary>
            DeviceOrientation
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.DeviceOrientation.DeviceOrientationClient.ClearDeviceOrientationOverrideAsync">
            <summary>
            Clears the overridden Device Orientation.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.DeviceOrientation.DeviceOrientationClient.SetDeviceOrientationOverrideAsync(System.Int64,System.Int64,System.Int64)">
            <summary>
            Overrides the Device Orientation.
            </summary>
            <param name = "alpha">Mock alpha</param>
            <param name = "beta">Mock beta</param>
            <param name = "gamma">Mock gamma</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.IO.ReadResponse">
            <summary>
            ReadResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IO.ReadResponse.Base64Encoded">
            <summary>
            base64Encoded
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IO.ReadResponse.Data">
            <summary>
            data
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IO.ReadResponse.Eof">
            <summary>
            eof
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IO.ResolveBlobResponse">
            <summary>
            ResolveBlobResponse
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.IO.ResolveBlobResponse.Uuid">
            <summary>
            uuid
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IO.IOClient">
            <summary>
            Input/Output operations for streams produced by DevTools.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.IO.IOClient.CloseAsync(System.String)">
            <summary>
            Close the stream, discard any temporary backing storage.
            </summary>
            <param name = "handle">Handle of the stream to close.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.DevTools.IO.IOClient.ReadAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})" -->
        <member name="M:CefSharp.DevTools.IO.IOClient.ResolveBlobAsync(System.String)">
            <summary>
            Return UUID of Blob object specified by a remote object id.
            </summary>
            <param name = "objectId">Object id of a Blob object wrapper.</param>
            <returns>returns System.Threading.Tasks.Task&lt;ResolveBlobResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Inspector.InspectorClient">
            <summary>
            Inspector
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Inspector.InspectorClient.DisableAsync">
            <summary>
            Disables inspector domain notifications.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Inspector.InspectorClient.EnableAsync">
            <summary>
            Enables inspector domain notifications.
            </summary>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.Tethering.TetheringClient">
            <summary>
            The Tethering domain defines methods and events for browser port binding.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.Tethering.TetheringClient.BindAsync(System.Int32)">
            <summary>
            Request browser port binding.
            </summary>
            <param name = "port">Port number to bind.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="M:CefSharp.DevTools.Tethering.TetheringClient.UnbindAsync(System.Int32)">
            <summary>
            Request browser port unbinding.
            </summary>
            <param name = "port">Port number to unbind.</param>
            <returns>returns System.Threading.Tasks.Task&lt;DevToolsMethodResponse&gt;</returns>
        </member>
        <member name="T:CefSharp.DevTools.DevToolsClientException">
            <summary>
            The exception that is thrown when there's a problem executing a DevTools protocol method.
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DevToolsClientException.Response">
            <summary>
            Get the Error Response
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.DevToolsClientException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.DevTools.DevToolsClientException"/> class with its message
            string set to a default message.
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.DevToolsClientException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.DevTools.DevToolsClientException"/> class with a specified error message.
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:CefSharp.DevTools.DevToolsClientException.#ctor(System.String,CefSharp.DevTools.DevToolsDomainErrorResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.DevTools.DevToolsClientException"/> class with a specified error message.
            </summary>
            <param name="message">message</param>
            <param name="errorResponse">error response</param>
        </member>
        <member name="M:CefSharp.DevTools.DevToolsClientException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.DevTools.DevToolsClientException"/> class with a specified error message
            and an inner exception.
            </summary>
            <param name="message">message</param>
            <param name="inner">inner exception</param>
        </member>
        <member name="T:CefSharp.DevTools.DevToolsDomainErrorResponse">
            <summary>
            Error Message parsed from JSON
            e.g. {"code":-32601,"message":"'Browser.getWindowForTarget' wasn't found"}
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DevToolsDomainErrorResponse.MessageId">
            <summary>
            Message Id
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DevToolsDomainErrorResponse.Code">
            <summary>
            Error Code
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DevToolsDomainErrorResponse.Message">
            <summary>
            Error Message
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DevToolsEventArgs">
            <summary>
            DevTools Event EventAargs
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DevToolsEventArgs.EventName">
            <summary>
            Method
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DevToolsEventArgs.ParametersAsJsonString">
            <summary>
            Event paramaters as Json string
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.DevToolsMethodResponse">
            <summary>
            DevTools Method Response
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DevToolsMethodResponse.MessageId">
            <summary>
            MessageId
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DevToolsMethodResponse.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="P:CefSharp.DevTools.DevToolsMethodResponse.ResponseAsJsonString">
            <summary>
            Method Response as Json string
            </summary>
        </member>
        <member name="T:CefSharp.DevTools.IDevToolsClient">
            <summary>
            DevTools Client
            </summary>
        </member>
        <member name="M:CefSharp.DevTools.IDevToolsClient.ExecuteDevToolsMethodAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Execute a method call over the DevTools protocol. This method can be called on any thread.
            See the DevTools protocol documentation at https://chromedevtools.github.io/devtools-protocol/ for details
            of supported methods and the expected <paramref name="parameters"/> dictionary contents.
            </summary>
            <param name="method">is the method name</param>
            <param name="parameters">are the method parameters represented as a dictionary,
            which may be empty.</param>
            <returns>return a Task that can be awaited to obtain the method result</returns>
        </member>
        <member name="T:CefSharp.Enums.CompositionUnderlineStyle">
            <summary>
            Composition underline style.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CompositionUnderlineStyle.Solid">
            <summary>
            Solid
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CompositionUnderlineStyle.Dot">
            <summary>
            Dot
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CompositionUnderlineStyle.Dash">
            <summary>
            Dash
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CompositionUnderlineStyle.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:CefSharp.Enums.CookiePriority">
            <summary>
            Cookie priority values.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CookiePriority.Low">
            <summary>
            Low Priority
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CookiePriority.Medium">
            <summary>
            Medium Priority
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CookiePriority.High">
            <summary>
            High Priority
            </summary>
        </member>
        <member name="T:CefSharp.Enums.CookieSameSite">
             <summary>
             Cookie same site values.
             </summary>
            <remarks>
             See https://source.chromium.org/chromium/chromium/src/+/master:net/cookies/cookie_constants.h
            </remarks>
        </member>
        <member name="F:CefSharp.Enums.CookieSameSite.Unspecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CookieSameSite.NoRestriction">
            <summary>
            Cookies will be sent in all contexts, i.e sending cross-origin is allowed.
            None used to be the default value, but recent browser versions made Lax the default value to have reasonably robust defense against some classes of cross-site request forgery (CSRF) attacks.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CookieSameSite.LaxMode">
            <summary>
            Cookies are allowed to be sent with top-level navigations and will be sent along with GET request initiated by third party website. This is the default value in modern browsers.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CookieSameSite.StrictMode">
            <summary>
            Cookies will only be sent in a first-party context and not be sent along with requests initiated by third party websites.
            </summary>
        </member>
        <member name="T:CefSharp.Enums.SchemeOptions">
            <summary>
            Configuration options for registering a custom scheme.
            These values are used when calling AddCustomScheme.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.SchemeOptions.None">
            <summary>
            Register scheme without options set
            </summary>
        </member>
        <member name="F:CefSharp.Enums.SchemeOptions.Standard">
             <summary>
             If Standard is set the scheme will be treated as a
             standard scheme. Standard schemes are subject to URL canonicalization and
             parsing rules as defined in the Common Internet Scheme Syntax RFC 1738
             Section 3.1 available at http://www.ietf.org/rfc/rfc1738.txt
            
             In particular, the syntax for standard scheme URLs must be of the form:
             <pre>
              [scheme]://[username]:[password]@[host]:[port]/[url-path]
             </pre> Standard scheme URLs must have a host component that is a fully
             qualified domain name as defined in Section 3.5 of RFC 1034 [13] and
             Section 2.1 of RFC 1123. These URLs will be canonicalized to
             "scheme://host/path" in the simplest case and
             "scheme://username:password@host:port/path" in the most explicit case. For
             example, "scheme:host/path" and "scheme:///host/path" will both be
             canonicalized to "scheme://host/path". The origin of a standard scheme URL
             is the combination of scheme, host and port (i.e., "scheme://host:port" in
             the most explicit case).
            
             For non-standard scheme URLs only the "scheme:" component is parsed and
             canonicalized. The remainder of the URL will be passed to the handler as-
             is. For example, "scheme:///some%20text" will remain the same. Non-standard
             scheme URLs cannot be used as a target for form submission.
             </summary>
        </member>
        <member name="F:CefSharp.Enums.SchemeOptions.Local">
            <summary>
            If Local is set the scheme will be treated with the same
            security rules as those applied to "file" URLs. Normal pages cannot link to
            or access local URLs. Also, by default, local URLs can only perform
            XMLHttpRequest calls to the same URL (origin + path) that originated the
            request. To allow XMLHttpRequest calls from a local URL to other URLs with
            the same origin set the CefSettings.FileAccessFromFileUrlsAllowed
            value to true. To allow XMLHttpRequest calls from a local URL to all
            origins set the CefSettings.UniversalAccessFromFileUrlsAllowed value
            to true.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.SchemeOptions.DisplayIsolated">
            <summary>
            If DisplayIsolated is set the scheme can only be
            displayed from other content hosted with the same scheme. For example,
            pages in other origins cannot create iframes or hyperlinks to URLs with the
            scheme. For schemes that must be accessible from other schemes don't set
            this, set CorsEnabled, and use CORS "Access-Control-Allow-Origin" headers
            to further restrict access.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.SchemeOptions.Secure">
            <summary>
            If Secure is set the scheme will be treated with the same
            security rules as those applied to "https" URLs. For example, loading this
            scheme from other secure schemes will not trigger mixed content warnings.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.SchemeOptions.CorsEnabled">
            <summary>
            If CorsEnabled is set the scheme can be sent CORS requests.
            This value should be set in most cases where Standard is set.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.SchemeOptions.CspBypassing">
            <summary>
            If CspBypassing is set the scheme can bypass Content-Security-Policy (CSP) checks.
            This value should not be set in most cases where Standard is set.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.SchemeOptions.FetchEnabled">
            <summary>
            If FetchEnabled is set the scheme can perform Fetch API requests.
            </summary>
        </member>
        <member name="T:CefSharp.Enums.AlphaType">
            <summary>
            Describes how to interpret the alpha component of a pixel.	
            </summary>
        </member>
        <member name="F:CefSharp.Enums.AlphaType.Opaque">
            <summary>
            No transparency. The alpha component is ignored.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.AlphaType.PreMultiplied">
            <summary>
            Transparency with pre-multiplied alpha component.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.AlphaType.PostMultiplied">
            <summary>
            Transparency with post-multiplied alpha component.
            </summary>
        </member>
        <member name="T:CefSharp.Enums.ChannelLayout">
            <summary>
            Enumerates the various representations of the ordering of audio channels.
            Logged to UMA, so never reuse a value, always add new/greater ones!
            See media\base\channel_layout.h
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.LayoutNone">
            <summary>
            None
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.LayoutUnsupported">
            <summary>
            Unsupported
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.LayoutMono">
            <summary>
            Front C
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.LayoutStereo">
            <summary>
            Front L, Front R
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout2_1">
            <summary>
            Front L, Front R, Back C
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.LayoutSurround">
            <summary>
            Front L, Front R, Front C
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout4_0">
            <summary>
            Front L, Front R, Front C, Back C
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout2_2">
            <summary>
            Front L, Front R, Side L, Side R
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.LayoutQuad">
            <summary>
            Front L, Front R, Back L, Back R
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout5_0">
            <summary>
            Front L, Front R, Front C, Side L, Side R
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout5_1">
            <summary>
            Front L, Front R, Front C, LFE, Side L, Side R
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout5_0Back">
            <summary>
            Front L, Front R, Front C, Back L, Back R
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout5_1Back">
            <summary>
            Front L, Front R, Front C, LFE, Back L, Back R
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout7_0">
            <summary>
            Front L, Front R, Front C, Side L, Side R, Back L, Back R
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout7_1">
            <summary>
            Front L, Front R, Front C, LFE, Side L, Side R, Back L, Back R
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout7_1Wide">
            <summary>
            Front L, Front R, Front C, LFE, Side L, Side R, Front LofC, Front RofC
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.LayoutStereoDownMix">
            <summary>
            Stereo L, Stereo R
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout2Point1">
            <summary>
            Stereo L, Stereo R, LFE
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout3_1">
            <summary>
            Stereo L, Stereo R, Front C, LFE
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout4_1">
            <summary>
            Stereo L, Stereo R, Front C, Rear C, LFE
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout6_0">
            <summary>
            Stereo L, Stereo R, Front C, Side L, Side R, Back C
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout6_0Front">
            <summary>
            Stereo L, Stereo R, Side L, Side R, Front LofC, Front RofC
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.LayoutHexagonal">
            <summary>
            Stereo L, Stereo R, Front C, Rear L, Rear R, Rear C
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout6_1">
            <summary>
            Stereo L, Stereo R, Front C, LFE, Side L, Side R, Rear Center
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout6_1Back">
            <summary>
            Stereo L, Stereo R, Front C, LFE, Back L, Back R, Rear Center
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout6_1Front">
            <summary>
            Stereo L, Stereo R, Side L, Side R, Front LofC, Front RofC, LFE
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout7_0Front">
            <summary>
            Front L, Front R, Front C, Side L, Side R, Front LofC, Front RofC
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout7_1WideBack">
            <summary>
            Front L, Front R, Front C, LFE, Back L, Back R, Front LofC, Front RofC
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.LayoutOctagonal">
            <summary>
            Front L, Front R, Front C, Side L, Side R, Rear L, Back R, Back C.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.LayoutDiscrete">
            <summary>
            Channels are not explicitly mapped to speakers.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.LayoutStereoKeyboardAndMic">
            <summary>
            Front L, Front R, Front C. Front C contains the keyboard mic audio. This
            layout is only intended for input for WebRTC. The Front C channel
            is stripped away in the WebRTC audio input pipeline and never seen outside
            of that.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.Layout4_1QuadSize">
            <summary>
            Front L, Front R, Side L, Side R, LFE
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ChannelLayout.LayoutBitstream">
            <summary>
            Actual channel layout is specified in the bitstream and the actual channel
            count is unknown at Chromium media pipeline level (useful for audio
            pass-through mode).
            </summary>
        </member>
        <member name="T:CefSharp.Enums.PointerType">
            <summary>
            The device type that caused the event.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.PointerType.Touch">
            <summary>
            An enum constant representing the touch option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.PointerType.Mouse">
            <summary>
            An enum constant representing the mouse option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.PointerType.Pen">
            <summary>
            An enum constant representing the pen option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.PointerType.Eraser">
            <summary>
            An enum constant representing the eraser option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.PointerType.Unknown">
            <summary>
            An enum constant representing the unknown option.
            </summary>
        </member>
        <member name="T:CefSharp.Enums.TextInputMode">
            <summary>
            Input mode of a virtual keyboard. These constants match their equivalents
            in Chromium's text_input_mode.h and should not be renumbered.
            See https://html.spec.whatwg.org/#input-modalities:-the-inputmode-attribute
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TextInputMode.Default">
            <summary>
            An enum constant representing the default option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TextInputMode.None">
            <summary>
            An enum constant representing the none option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TextInputMode.Text">
            <summary>
            An enum constant representing the text option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TextInputMode.Tel">
            <summary>
            An enum constant representing the tel option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TextInputMode.Url">
            <summary>
            An enum constant representing the URL option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TextInputMode.EMail">
            <summary>
            An enum constant representing the mail option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TextInputMode.Numeric">
            <summary>
            An enum constant representing the numeric option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TextInputMode.Decimal">
            <summary>
            An enum constant representing the decimal option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TextInputMode.Search">
            <summary>
            An enum constant representing the search option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TextInputMode.Max">
            <summary>
            An enum constant representing the Maximum option.
            </summary>
        </member>
        <member name="T:CefSharp.Enums.TouchEventType">
            <summary>
            Touch Event Type
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TouchEventType.Released">
            <summary>
            An enum constant representing the released option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TouchEventType.Pressed">
            <summary>
            An enum constant representing the pressed option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TouchEventType.Moved">
            <summary>
            An enum constant representing the moved option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.TouchEventType.Cancelled">
            <summary>
            An enum constant representing the cancelled option.
            </summary>
        </member>
        <member name="T:CefSharp.Enums.ValueType">
            <summary>
            Value types supported by <see cref="T:CefSharp.IValue"/>
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ValueType.Invalid">
            <summary>
            Invalid type
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ValueType.Null">
            <summary>
            Null
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ValueType.Bool">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ValueType.Int">
            <summary>
            Integer
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ValueType.Double">
            <summary>
            Double
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ValueType.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ValueType.Binary">
            <summary>
            Binary
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ValueType.Dictionary">
            <summary>
            Dictionary
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ValueType.List">
            <summary>
            List
            </summary>
        </member>
        <member name="T:CefSharp.Enums.ColorType">
            <summary>
            Describes how to interpret the components of a pixel.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ColorType.Rgba8888">
            <summary>
            RGBA with 8 bits per pixel (32bits total).
            </summary>
        </member>
        <member name="F:CefSharp.Enums.ColorType.Bgra8888">
            <summary>
            BGRA with 8 bits per pixel (32bits total).
            </summary>
        </member>
        <member name="T:CefSharp.Enums.CursorType">
            <summary>
            Cursor type values.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Pointer">
            <summary>
            Pointer
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Cross">
            <summary>
            An enum constant representing the cross option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Hand">
            <summary>
            An enum constant representing the hand option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.IBeam">
            <summary>
            An enum constant representing the beam option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Wait">
            <summary>
            An enum constant representing the wait option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Help">
            <summary>
            An enum constant representing the help option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.EastResize">
            <summary>
            An enum constant representing the east resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.NorthResize">
            <summary>
            An enum constant representing the north resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.NortheastResize">
            <summary>
            An enum constant representing the northeast resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.NorthwestResize">
            <summary>
            An enum constant representing the northwest resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.SouthResize">
            <summary>
            An enum constant representing the south resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.SoutheastResize">
            <summary>
            An enum constant representing the southeast resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.SouthwestResize">
            <summary>
            An enum constant representing the southwest resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.WestResize">
            <summary>
            An enum constant representing the west resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.NorthSouthResize">
            <summary>
            An enum constant representing the north south resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.EastWestResize">
            <summary>
            An enum constant representing the east west resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.NortheastSouthwestResize">
            <summary>
            An enum constant representing the northeast southwest resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.NorthwestSoutheastResize">
            <summary>
            An enum constant representing the northwest southeast resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.ColumnResize">
            <summary>
            An enum constant representing the column resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.RowResize">
            <summary>
            An enum constant representing the row resize option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.MiddlePanning">
            <summary>
            An enum constant representing the middle panning option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.EastPanning">
            <summary>
            An enum constant representing the east panning option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.NorthPanning">
            <summary>
            An enum constant representing the north panning option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.NortheastPanning">
            <summary>
            An enum constant representing the northeast panning option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.NorthwestPanning">
            <summary>
            An enum constant representing the northwest panning option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.SouthPanning">
            <summary>
            An enum constant representing the south panning option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.SoutheastPanning">
            <summary>
            An enum constant representing the southeast panning option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.SouthwestPanning">
            <summary>
            An enum constant representing the southwest panning option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.WestPanning">
            <summary>
            An enum constant representing the west panning option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Move">
            <summary>
            An enum constant representing the move option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.VerticalText">
            <summary>
            An enum constant representing the vertical text option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Cell">
            <summary>
            An enum constant representing the cell option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.ContextMenu">
            <summary>
            An enum constant representing the context menu option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Alias">
            <summary>
            An enum constant representing the alias option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Progress">
            <summary>
            An enum constant representing the progress option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.NoDrop">
            <summary>
            An enum constant representing the no drop option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Copy">
            <summary>
            An enum constant representing the copy option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.None">
            <summary>
            An enum constant representing the none option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.NotAllowed">
            <summary>
            An enum constant representing the not allowed option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.ZoomIn">
            <summary>
            An enum constant representing the zoom in option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.ZoomOut">
            <summary>
            An enum constant representing the zoom out option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Grab">
            <summary>
            An enum constant representing the grab option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Grabbing">
            <summary>
            An enum constant representing the grabbing option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.MiddlePanningVertical">
            <summary>
            An enum constant representing the MiddlePanningVertical option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.MiddlePanningHorizontal">
            <summary>
            An enum constant representing the MiddlePanningHorizontal option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.Custom">
            <summary>
            An enum constant representing the custom option.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.DndNone">
            <summary>
            DndNone
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.DndMove">
            <summary>
            DndMove
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.DndCopy">
            <summary>
            DndCopy
            </summary>
        </member>
        <member name="F:CefSharp.Enums.CursorType.DndLink">
            <summary>
            DndLink
            </summary>
        </member>
        <member name="T:CefSharp.Enums.DragOperationsMask">
            <summary>
            "Verb" of a drag-and-drop operation as negotiated between the source and destination.
            </summary>
        </member>
        <member name="F:CefSharp.Enums.DragOperationsMask.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:CefSharp.Enums.DragOperationsMask.Copy">
            <summary>
            Copy
            </summary>
        </member>
        <member name="F:CefSharp.Enums.DragOperationsMask.Link">
            <summary>
            Link
            </summary>
        </member>
        <member name="F:CefSharp.Enums.DragOperationsMask.Generic">
            <summary>
            Generic
            </summary>
        </member>
        <member name="F:CefSharp.Enums.DragOperationsMask.Private">
            <summary>
            Private
            </summary>
        </member>
        <member name="F:CefSharp.Enums.DragOperationsMask.Move">
            <summary>
            Move
            </summary>
        </member>
        <member name="F:CefSharp.Enums.DragOperationsMask.Delete">
            <summary>
            Delete
            </summary>
        </member>
        <member name="F:CefSharp.Enums.DragOperationsMask.Every">
            <summary>
            Every drag operation.
            </summary>
        </member>
        <member name="T:CefSharp.Handler.RequestContextHandler">
            <summary>
            Implement this interface to provide handler implementations. The handler
            instance will not be released until all objects related to the context have
            been destroyed. Implement this interface to cancel loading of specific plugins
            </summary>
        </member>
        <member name="M:CefSharp.Handler.RequestContextHandler.OnInitialize(System.Action{CefSharp.IRequestContext})">
            <summary>
            The <see cref="T:System.Action`1"/> is executed when the RequestContext has been initialized, after the
            preferences/proxy preferences have been set, before OnRequestContextInitialized.
            </summary>
            <param name="onContextInitialziedAction">action to perform on context initialize</param>
            <returns>A <see cref="T:CefSharp.Handler.RequestContextHandler"/> instance allowing you to chain multiple AddPreference calls together </returns>
            <remarks>Only a single action reference is maintained, multiple calls will result in the
            previous action reference being overriden.</remarks>
        </member>
        <member name="M:CefSharp.Handler.RequestContextHandler.SetPreferenceOnContextInitialized(System.String,System.Object)">
            <summary>
            Sets the preferences when the <see cref="M:CefSharp.IRequestContextHandler.OnRequestContextInitialized(CefSharp.IRequestContext)"/>
            method is called. If <paramref name="value"/> is null the  preference will be restored
            to its default value. Preferences set via the command-line usually cannot be modified.
            </summary>
            <param name="name">preference name</param>
            <param name="value">preference value</param>
            <returns>A <see cref="T:CefSharp.Handler.RequestContextHandler"/> instance allowing you to chain multiple AddPreference calls together </returns>
        </member>
        <member name="M:CefSharp.Handler.RequestContextHandler.SetProxyOnContextInitialized(System.String,System.Nullable{System.Int32})">
            <summary>
            Sets the proxy preferences when the <see cref="M:CefSharp.IRequestContextHandler.OnRequestContextInitialized(CefSharp.IRequestContext)"/>
            method is called. Proxy set via the command-line usually cannot be modified.
            </summary>
            <param name="host">proxy host</param>
            <param name="port">proxy port</param>
            <returns>A <see cref="T:CefSharp.Handler.RequestContextHandler"/> instance allowing you to chain multiple AddPreference calls together </returns>
        </member>
        <member name="M:CefSharp.Handler.RequestContextHandler.SetProxyOnContextInitialized(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets the proxy preferences when the <see cref="M:CefSharp.IRequestContextHandler.OnRequestContextInitialized(CefSharp.IRequestContext)"/>
            method is called. Proxy set via the command-line usually cannot be modified.
            </summary>
            <param name="scheme">is the protocol of the proxy server, and is one of: 'http', 'socks', 'socks4', 'socks5'. Also note that 'socks' is equivalent to 'socks5'.</param>
            <param name="host">proxy host</param>
            <param name="port">proxy port</param>
            <returns>A <see cref="T:CefSharp.Handler.RequestContextHandler"/> instance allowing you to chain multiple AddPreference calls together </returns>
        </member>
        <member name="M:CefSharp.Handler.RequestContextHandler.GetResourceRequestHandler(CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean,System.String,System.Boolean@)">
            <summary>
            Called on the CEF IO thread before a resource request is initiated.
            This method will not be called if the client associated with <paramref name="browser"/> returns a non-NULL value
            from <see cref="M:CefSharp.IRequestHandler.GetResourceRequestHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean,System.String,System.Boolean@)"/> for the same request (identified by <see cref="P:CefSharp.IRequest.Identifier"/>).
            </summary>
            <param name="browser">represent the source browser of the request, and may be null for requests originating from service workers.</param>
            <param name="frame">represent the source frame of the request, and may be null for requests originating from service workers.</param>
            <param name="request">represents the request contents and cannot be modified in this callback</param>
            <param name="isNavigation">will be true if the resource request is a navigation</param>
            <param name="isDownload">will be true if the resource request is a download</param>
            <param name="requestInitiator">is the origin (scheme + domain) of the page that initiated the request</param>
            <param name="disableDefaultHandling">Set to true to disable default handling of the request, in which case it will need to be handled via <see cref="M:CefSharp.IResourceRequestHandler.GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)"/> or it will be canceled</param>
            <returns>To allow the resource load to proceed with default handling return null. To specify a handler for the resource return a <see cref="T:CefSharp.IResourceRequestHandler"/> object.</returns>
        </member>
        <member name="M:CefSharp.Handler.RequestContextHandler.OnBeforePluginLoad(System.String,System.String,System.Boolean,System.String,CefSharp.WebPluginInfo,CefSharp.PluginPolicy@)">
            <summary>
            Called on the CEF IO thread before a plugin instance is loaded.
            The default plugin policy can be set at runtime using the `--plugin-policy=[allow|detect|block]` command-line flag.
            </summary>
            <param name="mimeType">is the mime type of the plugin that will be loaded</param>
            <param name="url">is the content URL that the plugin will load and may be empty</param>
            <param name="isMainFrame">will be true if the plugin is being loaded in the main (top-level) frame</param>
            <param name="topOriginUrl">is the URL for the top-level frame that contains the plugin</param>
            <param name="pluginInfo">includes additional information about the plugin that will be loaded</param>
            <param name="pluginPolicy">Modify and return true to change the policy.</param>
            <returns>Return false to use the recommended policy. Modify and return true to change the policy.</returns>
        </member>
        <member name="M:CefSharp.Handler.RequestContextHandler.OnRequestContextInitialized(CefSharp.IRequestContext)">
            <summary>
            Called immediately after the request context has been initialized.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread.
            </summary>
            <param name="requestContext">the request context</param>
        </member>
        <member name="T:CefSharp.Handler.RequestHandler">
            <summary>
            Default implementation of <see cref="T:CefSharp.IRequestHandler"/>. This class provides default implementations of the methods from
            <see cref="T:CefSharp.IRequestHandler"/>, therefore providing a convenience base class for any custom request handler.
            </summary>
            <seealso cref="T:CefSharp.IRequestHandler"/>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.CefSharp#IRequestHandler#OnBeforeBrowse(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.OnBeforeBrowse(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean)">
            <summary>
            Called before browser navigation. If the navigation is allowed <see cref="E:CefSharp.IWebBrowser.FrameLoadStart"/> and
            <see cref="E:CefSharp.IWebBrowser.FrameLoadEnd"/>
            will be called. If the navigation is canceled <see cref="E:CefSharp.IWebBrowser.LoadError"/> will be called with an ErrorCode value of
            <see cref="F:CefSharp.CefErrorCode.Aborted"/>.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control.</param>
            <param name="browser">the browser object.</param>
            <param name="frame">The frame the request is coming from.</param>
            <param name="request">the request object - cannot be modified in this callback.</param>
            <param name="userGesture">The value will be true if the browser navigated via explicit user gesture (e.g. clicking a link) or
            false if it navigated automatically (e.g. via the DomContentLoaded event).</param>
            <param name="isRedirect">has the request been redirected.</param>
            <returns>
            Return true to cancel the navigation or false to allow the navigation to proceed.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.CefSharp#IRequestHandler#OnOpenUrlFromTab(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.String,CefSharp.WindowOpenDisposition,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.OnOpenUrlFromTab(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.String,CefSharp.WindowOpenDisposition,System.Boolean)">
            <summary>
            Called on the UI thread before OnBeforeBrowse in certain limited cases where navigating a new or different browser might be
            desirable. This includes user-initiated navigation that might open in a special way (e.g. links clicked via middle-click or
            ctrl + left-click) and certain types of cross-origin navigation initiated from the renderer process (e.g. navigating the top-
            level frame to/from a file URL).
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control.</param>
            <param name="browser">the browser object.</param>
            <param name="frame">The frame object.</param>
            <param name="targetUrl">target url.</param>
            <param name="targetDisposition">The value indicates where the user intended to navigate the browser based on standard
            Chromium behaviors (e.g. current tab, new tab, etc).</param>
            <param name="userGesture">The value will be true if the browser navigated via explicit user gesture (e.g. clicking a link) or
            false if it navigated automatically (e.g. via the DomContentLoaded event).</param>
            <returns>
            Return true to cancel the navigation or false to allow the navigation to proceed in the source browser's top-level frame.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.CefSharp#IRequestHandler#GetResourceRequestHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean,System.String,System.Boolean@)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.GetResourceRequestHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean,System.String,System.Boolean@)">
            <summary>
            Called on the CEF IO thread before a resource request is initiated.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control.</param>
            <param name="browser">represent the source browser of the request.</param>
            <param name="frame">represent the source frame of the request.</param>
            <param name="request">represents the request contents and cannot be modified in this callback.</param>
            <param name="isNavigation">will be true if the resource request is a navigation.</param>
            <param name="isDownload">will be true if the resource request is a download.</param>
            <param name="requestInitiator">is the origin (scheme + domain) of the page that initiated the request.</param>
            <param name="disableDefaultHandling">[in,out] to true to disable default handling of the request, in which case it will need
            to be handled via <see cref="M:CefSharp.IResourceRequestHandler.GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)"/> or it will be canceled.</param>
            <returns>
            To allow the resource load to proceed with default handling return null. To specify a handler for the resource return a
            <see cref="T:CefSharp.IResourceRequestHandler"/> object. If this callback returns null the same method will be called on the associated
            <see cref="T:CefSharp.IRequestContextHandler"/>, if any.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.CefSharp#IRequestHandler#GetAuthCredentials(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Boolean,System.String,System.Int32,System.String,System.String,CefSharp.IAuthCallback)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.GetAuthCredentials(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Boolean,System.String,System.Int32,System.String,System.String,CefSharp.IAuthCallback)">
            <summary>
            Called when the browser needs credentials from the user.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object.</param>
            <param name="originUrl">is the origin making this authentication request.</param>
            <param name="isProxy">indicates whether the host is a proxy server.</param>
            <param name="host">hostname.</param>
            <param name="port">port number.</param>
            <param name="realm">realm.</param>
            <param name="scheme">scheme.</param>
            <param name="callback">Callback interface used for asynchronous continuation of authentication requests.</param>
            <returns>
            Return true to continue the request and call <see cref="M:CefSharp.IAuthCallback.Continue(System.String,System.String)"/> when the authentication
            information is available. Return false to cancel the request.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.CefSharp#IRequestHandler#OnQuotaRequest(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Int64,CefSharp.IRequestCallback)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.OnQuotaRequest(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Int64,CefSharp.IRequestCallback)">
            <summary>
            Called when JavaScript requests a specific storage quota size via the webkitStorageInfo.requestQuota function. For async
            processing return true and execute <see cref="M:CefSharp.IRequestCallback.Continue(System.Boolean)"/> at a later time to grant or deny the request or
            <see cref="M:CefSharp.IRequestCallback.Cancel"/> to cancel.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object.</param>
            <param name="originUrl">the origin of the page making the request.</param>
            <param name="newSize">is the requested quota size in bytes.</param>
            <param name="callback">Callback interface used for asynchronous continuation of url requests.</param>
            <returns>
            Return false to cancel the request immediately. Return true to continue the request and call
            <see cref="M:CefSharp.IRequestCallback.Continue(System.Boolean)"/> either in this method or at a later time to grant or deny the request.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.CefSharp#IRequestHandler#OnCertificateError(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefErrorCode,System.String,CefSharp.ISslInfo,CefSharp.IRequestCallback)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.OnCertificateError(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefErrorCode,System.String,CefSharp.ISslInfo,CefSharp.IRequestCallback)">
            <summary>
            Called to handle requests for URLs with an invalid SSL certificate. Return true and call
            <see cref="M:CefSharp.IRequestCallback.Continue(System.Boolean)"/> either in this method or at a later time to continue or cancel the request.  
            If CefSettings.IgnoreCertificateErrors is set all invalid certificates will be accepted without calling this method.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control.</param>
            <param name="browser">the browser object.</param>
            <param name="errorCode">the error code for this invalid certificate.</param>
            <param name="requestUrl">the url of the request for the invalid certificate.</param>
            <param name="sslInfo">ssl certificate information.</param>
            <param name="callback">Callback interface used for asynchronous continuation of url requests. If empty the error cannot be
            recovered from and the request will be canceled automatically.</param>
            <returns>
            Return false to cancel the request immediately. Return true and use <see cref="T:CefSharp.IRequestCallback"/> to execute in an async
            fashion.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.CefSharp#IRequestHandler#OnSelectClientCertificate(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Boolean,System.String,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,CefSharp.ISelectClientCertificateCallback)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.OnSelectClientCertificate(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Boolean,System.String,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,CefSharp.ISelectClientCertificateCallback)">
            <summary>
            Called when the browser needs user to select Client Certificate for authentication requests (eg. PKI authentication).
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object.</param>
            <param name="isProxy">indicates whether the host is a proxy server.</param>
            <param name="host">hostname.</param>
            <param name="port">port number.</param>
            <param name="certificates">List of Client certificates for selection.</param>
            <param name="callback">Callback interface used for asynchronous continuation of client certificate selection for
            authentication requests.</param>
            <returns>
            Return true to continue the request and call ISelectClientCertificateCallback.Select() with the selected certificate for
            authentication. Return false to use the default behavior where the browser selects the first certificate from the list.
            
            </returns>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.CefSharp#IRequestHandler#OnPluginCrashed(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.OnPluginCrashed(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String)">
            <summary>
            Called when a plugin has crashed.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control.</param>
            <param name="browser">the browser object.</param>
            <param name="pluginPath">path of the plugin that crashed.</param>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.CefSharp#IRequestHandler#OnRenderViewReady(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.OnRenderViewReady(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>
            Called on the CEF UI thread when the render view associated with browser is ready to receive/handle IPC messages in the
            render process.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object.</param>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.CefSharp#IRequestHandler#OnRenderProcessTerminated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefTerminationStatus)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.OnRenderProcessTerminated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefTerminationStatus)">
            <summary>
            Called when the render process terminates unexpectedly.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object.</param>
            <param name="status">indicates how the process terminated.</param>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.CefSharp#IRequestHandler#OnDocumentAvailableInMainFrame(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <inheritdoc/>
        </member>
        <member name="M:CefSharp.Handler.RequestHandler.OnDocumentAvailableInMainFrame(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>
            Called on the CEF UI thread when the window.document object of the main frame has been created.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
        </member>
        <member name="T:CefSharp.Handler.ResourceRequestHandler">
            <summary>
            Default implementation of <see cref="T:CefSharp.IResourceRequestHandler"/>. This class provides default implementations of the methods
            from <see cref="T:CefSharp.IResourceRequestHandler"/>, therefore providing a convenience base class for any custom resource request
            handler.
            </summary>
            <seealso cref="T:CefSharp.IResourceRequestHandler"/>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.CefSharp#IResourceRequestHandler#GetCookieAccessFilter(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>
            Called on the CEF IO thread before a resource request is loaded. To optionally filter cookies for the request return a
            <see cref="T:CefSharp.ICookieAccessFilter"/> object.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - can be modified in this callback.</param>
            <returns>To optionally filter cookies for the request return a ICookieAccessFilter instance otherwise return null.</returns>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.GetCookieAccessFilter(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>
            Called on the CEF IO thread before a resource request is loaded. To optionally filter cookies for the request return a
            <see cref="T:CefSharp.ICookieAccessFilter"/> object.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - can be modified in this callback.</param>
            <returns>To optionally filter cookies for the request return a ICookieAccessFilter instance otherwise return null.</returns>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.CefSharp#IResourceRequestHandler#GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>
            Called on the CEF IO thread before a resource is loaded. To specify a handler for the resource return a
            <see cref="T:CefSharp.IResourceHandler"/> object.
            </summary>
            <param name="chromiumWebBrowser">The browser UI control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - cannot be modified in this callback.</param>
            <returns>
            To allow the resource to load using the default network loader return null otherwise return an instance of
            <see cref="T:CefSharp.IResourceHandler"/> with a valid stream.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>
            Called on the CEF IO thread before a resource is loaded. To specify a handler for the resource return a
            <see cref="T:CefSharp.IResourceHandler"/> object.
            </summary>
            <param name="chromiumWebBrowser">The browser UI control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - cannot be modified in this callback.</param>
            <returns>
            To allow the resource to load using the default network loader return null otherwise return an instance of
            <see cref="T:CefSharp.IResourceHandler"/> with a valid stream.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.CefSharp#IResourceRequestHandler#GetResourceResponseFilter(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse)">
            <summary>Called on the CEF IO thread to optionally filter resource response content.</summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - cannot be modified in this callback.</param>
            <param name="response">the response object - cannot be modified in this callback.</param>
            <returns>Return an IResponseFilter to intercept this response, otherwise return null.</returns>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.GetResourceResponseFilter(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse)">
            <summary>Called on the CEF IO thread to optionally filter resource response content.</summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - cannot be modified in this callback.</param>
            <param name="response">the response object - cannot be modified in this callback.</param>
            <returns>Return an IResponseFilter to intercept this response, otherwise return null.</returns>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.CefSharp#IResourceRequestHandler#OnBeforeResourceLoad(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IRequestCallback)">
            <summary>
            Called on the CEF IO thread before a resource request is loaded. To redirect or change the resource load optionally modify
            <paramref name="request"/>. Modification of the request URL will be treated as a redirect.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - can be modified in this callback.</param>
            <param name="callback">Callback interface used for asynchronous continuation of url requests.</param>
            <returns>
            Return <see cref="F:CefSharp.CefReturnValue.Continue"/> to continue the request immediately. Return
            <see cref="F:CefSharp.CefReturnValue.ContinueAsync"/> and call <see cref="M:CefSharp.IRequestCallback.Continue(System.Boolean)"/> or
            <see cref="M:CefSharp.IRequestCallback.Cancel"/> at a later time to continue or the cancel the request asynchronously. Return
            <see cref="F:CefSharp.CefReturnValue.Cancel"/> to cancel the request immediately.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.OnBeforeResourceLoad(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IRequestCallback)">
            <summary>
            Called on the CEF IO thread before a resource request is loaded. To redirect or change the resource load optionally modify
            <paramref name="request"/>. Modification of the request URL will be treated as a redirect.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - can be modified in this callback.</param>
            <param name="callback">Callback interface used for asynchronous continuation of url requests.</param>
            <returns>
            Return <see cref="F:CefSharp.CefReturnValue.Continue"/> to continue the request immediately. Return
            <see cref="F:CefSharp.CefReturnValue.ContinueAsync"/> and call <see cref="M:CefSharp.IRequestCallback.Continue(System.Boolean)"/> or
            <see cref="M:CefSharp.IRequestCallback.Cancel"/> at a later time to continue or the cancel the request asynchronously. Return
            <see cref="F:CefSharp.CefReturnValue.Cancel"/> to cancel the request immediately.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.CefSharp#IResourceRequestHandler#OnProtocolExecution(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>
            Called on the CEF UI thread to handle requests for URLs with an unknown protocol component. SECURITY WARNING: YOU SHOULD USE
            THIS METHOD TO ENFORCE RESTRICTIONS BASED ON SCHEME, HOST OR OTHER URL ANALYSIS BEFORE ALLOWING OS EXECUTION.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - cannot be modified in this callback.</param>
            <returns>
            return to true to attempt execution via the registered OS protocol handler, if any. Otherwise return false.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.OnProtocolExecution(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>
            Called on the CEF UI thread to handle requests for URLs with an unknown protocol component. SECURITY WARNING: YOU SHOULD USE
            THIS METHOD TO ENFORCE RESTRICTIONS BASED ON SCHEME, HOST OR OTHER URL ANALYSIS BEFORE ALLOWING OS EXECUTION.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - cannot be modified in this callback.</param>
            <returns>
            return to true to attempt execution via the registered OS protocol handler, if any. Otherwise return false.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.CefSharp#IResourceRequestHandler#OnResourceLoadComplete(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,CefSharp.UrlRequestStatus,System.Int64)">
            <summary>
            Called on the CEF IO thread when a resource load has completed. This method will be called for all requests, including
            requests that are aborted due to CEF shutdown or destruction of the associated browser. In cases where the associated browser
            is destroyed this callback may arrive after the <see cref="M:CefSharp.ILifeSpanHandler.OnBeforeClose(CefSharp.IWebBrowser,CefSharp.IBrowser)"/> callback for that browser. The
            <see cref="P:CefSharp.IFrame.IsValid"/> method can be used to test for this situation, and care
            should be taken not to call <paramref name="browser"/> or <paramref name="frame"/> methods that modify state (like LoadURL,
            SendProcessMessage, etc.) if the frame is invalid.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - cannot be modified in this callback.</param>
            <param name="response">the response object - cannot be modified in this callback.</param>
            <param name="status">indicates the load completion status.</param>
            <param name="receivedContentLength">is the number of response bytes actually read.</param>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.OnResourceLoadComplete(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,CefSharp.UrlRequestStatus,System.Int64)">
            <summary>
            Called on the CEF IO thread when a resource load has completed. This method will be called for all requests, including
            requests that are aborted due to CEF shutdown or destruction of the associated browser. In cases where the associated browser
            is destroyed this callback may arrive after the <see cref="M:CefSharp.ILifeSpanHandler.OnBeforeClose(CefSharp.IWebBrowser,CefSharp.IBrowser)"/> callback for that browser. The
            <see cref="P:CefSharp.IFrame.IsValid"/> method can be used to test for this situation, and care
            should be taken not to call <paramref name="browser"/> or <paramref name="frame"/> methods that modify state (like LoadURL,
            SendProcessMessage, etc.) if the frame is invalid.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - cannot be modified in this callback.</param>
            <param name="response">the response object - cannot be modified in this callback.</param>
            <param name="status">indicates the load completion status.</param>
            <param name="receivedContentLength">is the number of response bytes actually read.</param>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.CefSharp#IResourceRequestHandler#OnResourceRedirect(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,System.String@)">
            <summary>
            Called on the CEF IO thread when a resource load is redirected. The <paramref name="request"/> parameter will contain the old
            URL and other request-related information. The <paramref name="response"/> parameter will contain the response that resulted
            in the redirect. The <paramref name="newUrl"/> parameter will contain the new URL and can be changed if desired.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - cannot be modified in this callback.</param>
            <param name="response">the response object - cannot be modified in this callback.</param>
            <param name="newUrl">[in,out] the new URL and can be changed if desired.</param>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.OnResourceRedirect(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,System.String@)">
            <summary>
            Called on the CEF IO thread when a resource load is redirected. The <paramref name="request"/> parameter will contain the old
            URL and other request-related information. The <paramref name="response"/> parameter will contain the response that resulted
            in the redirect. The <paramref name="newUrl"/> parameter will contain the new URL and can be changed if desired.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object - cannot be modified in this callback.</param>
            <param name="response">the response object - cannot be modified in this callback.</param>
            <param name="newUrl">[in,out] the new URL and can be changed if desired.</param>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.CefSharp#IResourceRequestHandler#OnResourceResponse(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse)">
            <summary>
            Called on the CEF IO thread when a resource response is received. To allow the resource load to proceed without modification
            return false. To redirect or retry the resource load optionally modify <paramref name="request"/> and return true.
            Modification of the request URL will be treated as a redirect. Requests handled using the default network loader cannot be
            redirected in this callback.
            
            WARNING: Redirecting using this method is deprecated. Use OnBeforeResourceLoad or GetResourceHandler to perform redirects.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object.</param>
            <param name="response">the response object - cannot be modified in this callback.</param>
            <returns>
            To allow the resource load to proceed without modification return false. To redirect or retry the resource load optionally
            modify <paramref name="request"/> and return true. Modification of the request URL will be treated as a redirect. Requests
            handled using the default network loader cannot be redirected in this callback.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.OnResourceResponse(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse)">
            <summary>
            Called on the CEF IO thread when a resource response is received. To allow the resource load to proceed without modification
            return false. To redirect or retry the resource load optionally modify <paramref name="request"/> and return true.
            Modification of the request URL will be treated as a redirect. Requests handled using the default network loader cannot be
            redirected in this callback.
            
            WARNING: Redirecting using this method is deprecated. Use OnBeforeResourceLoad or GetResourceHandler to perform redirects.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control.</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest.</param>
            <param name="request">the request object.</param>
            <param name="response">the response object - cannot be modified in this callback.</param>
            <returns>
            To allow the resource load to proceed without modification return false. To redirect or retry the resource load optionally
            modify <paramref name="request"/> and return true. Modification of the request URL will be treated as a redirect. Requests
            handled using the default network loader cannot be redirected in this callback.
            </returns>
        </member>
        <member name="M:CefSharp.Handler.ResourceRequestHandler.Dispose">
            <summary>
            Called when the unamanged resource is freed.
            Unmanaged resources are ref counted and freed when
            the last reference is released, this works differently
            to .Net garbage collection.
            </summary>
        </member>
        <member name="T:CefSharp.Internals.CefThread">
            <summary>
            To access the CEF threads we expose a TaskFactory, as this requires managed vc++ this
            exists in CefSharp.Core it cannot be directly accessed in CefSharp.dll. When
            Cef.Initialized is called we pass a reference to the TaskFactory here so we
            can write methods (typically extension methods) in this assembly.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.CefThread.UiThreadTaskFactory">
            <summary>
            TaskFactory will be null before Cef.Initialize is called
            and null after Cef.Shutdown is called.
            </summary>
        </member>
        <member name="E:CefSharp.Internals.CefThread.Initialized">
            <summary>
            Event fired after Cef.Initialze has been called, we can now start
            posting Tasks to the CEF UI Thread.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.CefThread.CurrentOnUiThreadDelegate">
            <summary>
            Delegate used to wrap the native call to CefCurrentlyOn(CefThreadId::TID_UI).
            </summary>
        </member>
        <member name="P:CefSharp.Internals.CefThread.CanExecuteOnUiThread">
            <summary>
            true if we have a reference to the UiThreadTaskFactory
            TaskFactory, otherwise false
            </summary>
            <remarks>
            The current implementation isn't thread safe, generally speaking this shouldn't be a problem
            </remarks>
        </member>
        <member name="P:CefSharp.Internals.CefThread.CurrentlyOnUiThread">
            <summary>
            Currently on the CEF UI Thread
            </summary>
        </member>
        <member name="P:CefSharp.Internals.CefThread.HasShutdown">
            <summary>
            returns true if Cef.Shutdown been called, otherwise false.
            </summary>
        </member>
        <member name="M:CefSharp.Internals.CefThread.ExecuteOnUiThread``1(System.Func{``0})">
            <summary>
            Execute the provided function on the CEF UI Thread
            </summary>
            <typeparam name="TResult">result</typeparam>
            <param name="function">function</param>
            <returns>Task{Result}</returns>
        </member>
        <member name="M:CefSharp.Internals.CefThread.QueueForExcutionWhenUiThreadCreated``1(System.Func{``0})">
            <summary>
            Wait for CEF to Initialize, continuation happens on
            the CEF UI Thraed.
            </summary>
            <returns>Task that can be awaited</returns>
        </member>
        <member name="M:CefSharp.Internals.CefThread.Initialize(System.Threading.Tasks.TaskFactory,System.Func{System.Boolean})">
            <summary>
            Called when the CEF UI Thread is a
            </summary>
        </member>
        <member name="M:CefSharp.Internals.CefThread.Shutdown">
            <summary>
            !!WARNING!! DO NOT CALL THIS YOURSELF, THIS WILL BE CALLED INTERNALLY.
            Called when Cef.Shutdown is called to cleanup our references
            and release any event handlers.
            </summary>
        </member>
        <member name="T:CefSharp.Internals.FreezableBase">
            <summary>
            Base classes for Feezable settings objects
            </summary>
        </member>
        <member name="T:CefSharp.Internals.MimeTypeMapping">
            <summary>
            Internal Mime Type Mappings.
            </summary>
        </member>
        <member name="F:CefSharp.Internals.MimeTypeMapping.CustomMappings">
            <summary>
            Dictionary containing our custom mimeType mapping, you can add your own file extension
            to mimeType mappings to this dictionary.
            </summary>
        </member>
        <member name="M:CefSharp.Internals.MimeTypeMapping.GetCustomMapping(System.String)">
            <summary>
            Lookup MimeType from the <see cref="F:CefSharp.Internals.MimeTypeMapping.CustomMappings"/>
            dictionary based on file extension.
            </summary>
            <param name="extension">extension</param>
            <returns>custom mimeType or application/octet-stream if no mapping found </returns>
        </member>
        <member name="T:CefSharp.Internals.Tasks.SyncContextTaskCompletionSource`1">
            <summary>
            TaskCompletionSource that executes it's continuation on the captured
            <see cref="T:System.Threading.SynchronizationContext"/>. If <see cref="P:CefSharp.Internals.Tasks.SyncContextTaskCompletionSource`1.SyncContext"/> is null.
            then the current **executing** thread will be called. e.g. The thread that
            called <see cref="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)"/>
            (or other Set/Try set methods).
            </summary>
            <typeparam name="TResult">Result Type</typeparam>
        </member>
        <member name="P:CefSharp.Internals.Tasks.SyncContextTaskCompletionSource`1.SyncContext">
            <summary>
            Captured Sync Context
            </summary>
        </member>
        <member name="T:CefSharp.Internals.Tasks.LimitedConcurrencyLevelTaskScheduler">
            <summary>
            Provides a task scheduler that ensures a maximum concurrency level while
            running on top of the ThreadPool.
            </summary>
        </member>
        <member name="F:CefSharp.Internals.Tasks.LimitedConcurrencyLevelTaskScheduler._currentThreadIsProcessingItems">
            <summary>Whether the current thread is processing work items.</summary>
        </member>
        <member name="F:CefSharp.Internals.Tasks.LimitedConcurrencyLevelTaskScheduler._tasks">
            <summary>The list of tasks to be executed.</summary>
        </member>
        <member name="F:CefSharp.Internals.Tasks.LimitedConcurrencyLevelTaskScheduler._maxDegreeOfParallelism">
            <summary>The maximum concurrency level allowed by this scheduler.</summary>
        </member>
        <member name="F:CefSharp.Internals.Tasks.LimitedConcurrencyLevelTaskScheduler._delegatesQueuedOrRunning">
            <summary>Whether the scheduler is currently processing work items.</summary>
        </member>
        <member name="M:CefSharp.Internals.Tasks.LimitedConcurrencyLevelTaskScheduler.#ctor(System.Int32)">
            <summary>
            Initializes an instance of the LimitedConcurrencyLevelTaskScheduler class with the
            specified degree of parallelism.
            </summary>
            <param name="maxDegreeOfParallelism">The maximum degree of parallelism provided by this scheduler.</param>
        </member>
        <member name="M:CefSharp.Internals.Tasks.LimitedConcurrencyLevelTaskScheduler.QueueTask(System.Threading.Tasks.Task)">
            <summary>Queues a task to the scheduler.</summary>
            <param name="task">The task to be queued.</param>
        </member>
        <member name="M:CefSharp.Internals.Tasks.LimitedConcurrencyLevelTaskScheduler.NotifyThreadPoolOfPendingWork">
            <summary>
            Informs the ThreadPool that there's work to be executed for this scheduler.
            </summary>
        </member>
        <member name="M:CefSharp.Internals.Tasks.LimitedConcurrencyLevelTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)">
            <summary>Attempts to execute the specified task on the current thread.</summary>
            <param name="task">The task to be executed.</param>
            <param name="taskWasPreviouslyQueued"></param>
            <returns>Whether the task could be executed on the current thread.</returns>
        </member>
        <member name="M:CefSharp.Internals.Tasks.LimitedConcurrencyLevelTaskScheduler.TryDequeue(System.Threading.Tasks.Task)">
            <summary>Attempts to remove a previously scheduled task from the scheduler.</summary>
            <param name="task">The task to be removed.</param>
            <returns>Whether the task could be found and removed.</returns>
        </member>
        <member name="P:CefSharp.Internals.Tasks.LimitedConcurrencyLevelTaskScheduler.MaximumConcurrencyLevel">
            <summary>Gets the maximum concurrency level supported by this scheduler.</summary>
        </member>
        <member name="M:CefSharp.Internals.Tasks.LimitedConcurrencyLevelTaskScheduler.GetScheduledTasks">
            <summary>Gets an enumerable of the tasks currently scheduled on this scheduler.</summary>
            <returns>An enumerable of the tasks currently scheduled.</returns>
        </member>
        <member name="T:CefSharp.Internals.PathCheck">
            <summary>
            Path Validation utility class
            </summary>
        </member>
        <member name="F:CefSharp.Internals.PathCheck.EnableAssert">
            <summary>
            Allow user to disable the assert.
            As a temporary measure we'll allow users to disable the assert
            as the check may not yet be 100% bulletproof.
            </summary>
        </member>
        <member name="M:CefSharp.Internals.PathCheck.IsDirectorySeparator(System.Char)">
            <summary>
            True if the given character is a directory separator.
            </summary>
        </member>
        <member name="M:CefSharp.Internals.PathCheck.AssertAbsolute(System.String,System.String)">
            <summary>
            Throw exception if the path provided is non-asbolute
            CEF now explicitly requires absolute paths
            https://bitbucket.org/chromiumembedded/cef/issues/2916/not-persisting-in-local-stoage-when-using
            Empty paths are ignored
            </summary>
            <param name="path">path</param>
            <param name="settingName">string to appear at the start of
            the exception, e.g. CefSettings.BrowserSubProcessPath</param>
        </member>
        <member name="M:CefSharp.Internals.PathCheck.IsAbsolute(System.String)">
            <summary>
            Valid path is absolute, based on Chromium implementation.
            </summary>
            <param name="path">path</param>
        </member>
        <member name="T:CefSharp.Internals.BrowserRefCounter">
            <summary>
            Tracks the number of browser instances currently open
            The cound will be incrmented and decremented each time a CefBrowser is created/closed.
            This includes CefBrowser popup instances.
            </summary>
            <remarks>
            Roughtly based on <see cref="T:System.Threading.CountdownEvent"/>, unforeunately <see cref="M:System.Threading.CountdownEvent.AddCount(System.Int32)"/>
            doesn't reset the internal <see cref="T:System.Threading.ManualResetEventSlim"/> when Count is aleady 0.
            In our case it's valid to increase the number of browsers and reset the event.
            </remarks>
        </member>
        <member name="F:CefSharp.Internals.BrowserRefCounter.Instance">
            TODO: Refactor this so it's not static.
        </member>
        <member name="M:CefSharp.Internals.BrowserRefCounter.CefSharp#Internals#IBrowserRefCounter#Increment">
            <summary>
            Increment browser count
            </summary>
        </member>
        <member name="M:CefSharp.Internals.BrowserRefCounter.CefSharp#Internals#IBrowserRefCounter#Decrement">
            <summary>
            Decrement browser count
            </summary>
        </member>
        <member name="P:CefSharp.Internals.BrowserRefCounter.CefSharp#Internals#IBrowserRefCounter#Count">
            <summary>
            Gets the number of CefBrowser instances currently open (this includes popups)
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:CefSharp.Internals.BrowserRefCounter.CefSharp#Internals#IBrowserRefCounter#WaitForBrowsersToClose(System.Int32)">
            <summary>
            Blocks until the CefBrowser count has reached 0 or the timeout has been reached
            </summary>
            <param name="timeoutInMiliseconds">(Optional) The timeout in miliseconds.</param>
        </member>
        <member name="M:CefSharp.Internals.BrowserRefCounter.CefSharp#Internals#IBrowserRefCounter#WaitForBrowsersToClose(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Blocks until the CefBrowser count has reached 0 or the timeout has been reached
            </summary>
            <param name="timeoutInMiliseconds">(Optional) The timeout in miliseconds.</param>
            <param name="cancellationToken">(Optional) The cancellation token.</param>
        </member>
        <member name="T:CefSharp.Internals.CommandLineArgDictionary">
            <summary>
            Custom Dictionary that provides an Add(string) method for appending CEF Command line
            args that don't have a switch value.
            </summary>
        </member>
        <member name="M:CefSharp.Internals.CommandLineArgDictionary.Add(System.String)">
            <summary>
            Adds the command line argument
            </summary>
            <param name="arg">command line argument</param>
        </member>
        <member name="T:CefSharp.Internals.CookieManagerDecorator">
            <summary>
            CookieManager with additional checks to ensure the store is initialized.
            Throws an exception when attempting to access the store before it's ready.
            </summary>
        </member>
        <member name="T:CefSharp.Internals.ParentProcessMonitor">
            <summary>
            Monitor the parent process and exit if the parent process closes
            before the subprocess. This class is used by the CefSharp.BrowserSubprocess to
            self terminate if the parent dies without notifying it to exit.
            See https://github.com/cefsharp/CefSharp/issues/2359 for more information.
            </summary>
        </member>
        <member name="M:CefSharp.Internals.ParentProcessMonitor.StartMonitorTask(System.Int32)">
            <summary>
            Starts a long running task (spawns new thread) used to monitor the parent process
            and calls <see cref="M:System.Diagnostics.Process.Kill"/> if the parent exits unexpectedly (usually result of a crash).
            </summary>
            <param name="parentProcessId">process Id of the parent application</param>
        </member>
        <member name="T:CefSharp.Internals.HeaderNameValueCollection">
            <summary>
            A <see cref="T:System.Collections.Specialized.NameValueCollection"/> implementation
            that can optionally be set to ReadOnly (used to represent the CefHeaderMap)
            </summary>
        </member>
        <member name="M:CefSharp.Internals.HeaderNameValueCollection.SetReadOnly">
            <summary>
            Set the NameValueCollection to Readonly after it's been updated
            </summary>
        </member>
        <member name="T:CefSharp.Internals.StringCheck">
            <summary>
            String validation
            </summary>
        </member>
        <member name="M:CefSharp.Internals.StringCheck.IsLettersAndNumbers(System.String)">
            <summary>
            Regex check to ensure string contains only letters, numbers and underscores.
            </summary>
            <param name="stringToCheck"></param>
            <returns>false if string is invalid</returns>
        </member>
        <member name="M:CefSharp.Internals.StringCheck.IsFirstCharacterLowercase(System.String)">
            <summary>
            Return true if the first chracter of the specified string is lowercase
            </summary>
            <param name="str">string</param>
            <returns>returns false if empty or null, otherwise true if first character is lowercase</returns>
        </member>
        <member name="T:CefSharp.Internals.ConcurrentMethodRunnerQueue">
            <summary>
            ConcurrentMethodRunnerQueue - Async Javascript Binding methods are run
            on the ThreadPool in parallel, when a method returns a Task
            the we use ContinueWith to be notified of completion then
            raise the MethodInvocationComplete event
            </summary>
        </member>
        <member name="T:CefSharp.Internals.DateTimeUtils">
            <summary>
            Mapping to/from CefTime
            </summary>
        </member>
        <member name="M:CefSharp.Internals.DateTimeUtils.FromCefTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts a cef
            </summary>
            <param name="year">year</param>
            <param name="month">month</param>
            <param name="day">day</param>
            <param name="hour">hour</param>
            <param name="minute">minute</param>
            <param name="second">second</param>
            <param name="millisecond">millisecond</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:CefSharp.Internals.DateTimeUtils.ToCefTime(System.DateTime)">
            <summary>
            Returns epoch (different from 01/01/1970)
            </summary>
            <param name="dateTime">datetime</param>
            <returns>epoch</returns>
        </member>
        <member name="T:CefSharp.Internals.IRenderWebBrowser">
            <summary>
            IRenderWebBrowser is an internal interface used by CefSharp for the WPF/Offscreen implementation
            The ChromiumWebBrowser instances implement this interface
            </summary>
        </member>
        <member name="P:CefSharp.Internals.IRenderWebBrowser.AccessibilityHandler">
            <summary>
            Implement <see cref="T:CefSharp.IAccessibilityHandler" /> to handle events related to accessibility.
            </summary>
            <value>The accessibility handler.</value>
        </member>
        <member name="M:CefSharp.Internals.IRenderWebBrowser.GetScreenInfo">
            <summary>
            Called to allow the client to return a ScreenInfo object with appropriate values.
            If null is returned then the rectangle from GetViewRect will be used.
            If the rectangle is still empty or invalid popups may not be drawn correctly. 
            </summary>
            <returns>Return null if no screenInfo structure is provided.</returns>	
        </member>
        <member name="M:CefSharp.Internals.IRenderWebBrowser.GetViewRect">
            <summary>
            Called to retrieve the view rectangle which is relative to screen coordinates. 
            </summary>
            <returns>Return a ViewRect strict containing the rectangle or null. If the rectangle is
            still empty or invalid popups may not be drawn correctly. </returns>
        </member>
        <member name="M:CefSharp.Internals.IRenderWebBrowser.GetScreenPoint(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Called to retrieve the translation from view coordinates to actual screen coordinates. 
            </summary>
            <param name="viewX">x</param>
            <param name="viewY">y</param>
            <param name="screenX">screen x</param>
            <param name="screenY">screen y</param>
            <returns>Return true if the screen coordinates were provided.</returns>
        </member>
        <member name="M:CefSharp.Internals.IRenderWebBrowser.OnAcceleratedPaint(CefSharp.PaintElementType,CefSharp.Structs.Rect,System.IntPtr)">
            <summary>
            Called when an element has been rendered to the shared texture handle.
            This method is only called when <see cref="P:CefSharp.IWindowInfo.SharedTextureEnabled"/> is set to true
            </summary>
            <param name="type">indicates whether the element is the view or the popup widget.</param>
            <param name="dirtyRect">contains the set of rectangles in pixel coordinates that need to be repainted</param>
            <param name="sharedHandle">is the handle for a D3D11 Texture2D that can be accessed via ID3D11Device using the OpenSharedResource method.</param>
        </member>
        <member name="M:CefSharp.Internals.IRenderWebBrowser.OnPaint(CefSharp.PaintElementType,CefSharp.Structs.Rect,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Called when an element should be painted. Pixel values passed to this method are scaled relative to view coordinates based on the
            value of <see cref="P:CefSharp.Structs.ScreenInfo.DeviceScaleFactor"/> returned from <see cref="M:CefSharp.Internals.IRenderWebBrowser.GetScreenInfo"/>.
            Called on the CEF UI Thread
            </summary>
            <param name="type">indicates whether the element is the view or the popup widget.</param>
            <param name="dirtyRect">contains the set of rectangles in pixel coordinates that need to be repainted</param>
            <param name="buffer">The bitmap will be will be  width * height *4 bytes in size and represents a BGRA image with an upper-left origin</param>
            <param name="width">width</param>
            <param name="height">height</param>
        </member>
        <member name="M:CefSharp.Internals.IRenderWebBrowser.OnCursorChange(System.IntPtr,CefSharp.Enums.CursorType,CefSharp.Structs.CursorInfo)">
            <summary>
            Called when the browser's cursor has changed. . 
            </summary>
            <param name="cursor">If type is Custom then customCursorInfo will be populated with the custom cursor information</param>
            <param name="type">cursor type</param>
            <param name="customCursorInfo">custom cursor Information</param>
        </member>
        <member name="M:CefSharp.Internals.IRenderWebBrowser.StartDragging(CefSharp.IDragData,CefSharp.Enums.DragOperationsMask,System.Int32,System.Int32)">
            <summary>
            Called when the user starts dragging content in the web view. Contextual information about the dragged content is
            supplied by dragData. (|x|, |y|) is the drag start location in screen coordinates. OS APIs that run a system message
            loop may be used within the StartDragging call. Return false to abort the drag operation. Don't call any of
            CefBrowserHost::DragSource*Ended* methods after returning false. Return true to handle the drag operation.
            Call IBrowserHost::DragSourceEndedAt and DragSourceSystemDragEnded either synchronously or asynchronously to inform
            the web view that the drag operation has ended. 
            </summary>
            <param name="dragData">drag data</param>
            <param name="mask">operation mask</param>
            <param name="x">x coordinate</param>
            <param name="y">y coordinate</param>
            <returns>Return false to abort the drag operation.</returns>
        </member>
        <member name="M:CefSharp.Internals.IRenderWebBrowser.UpdateDragCursor(CefSharp.Enums.DragOperationsMask)">
            <summary>
            Called when the web view wants to update the mouse cursor during a drag &amp; drop operation.
            </summary>
            <param name="operation">describes the allowed operation (none, move, copy, link). </param>
        </member>
        <member name="M:CefSharp.Internals.IRenderWebBrowser.OnPopupShow(System.Boolean)">
            <summary>
            Called when the browser wants to show or hide the popup widget.  
            </summary>
            <param name="show">The popup should be shown if show is true and hidden if show is false.</param>
        </member>
        <member name="M:CefSharp.Internals.IRenderWebBrowser.OnPopupSize(CefSharp.Structs.Rect)">
            <summary>
            Called when the browser wants to move or resize the popup widget. 
            </summary>
            <param name="rect">contains the new location and size in view coordinates. </param>
        </member>
        <member name="M:CefSharp.Internals.IRenderWebBrowser.OnImeCompositionRangeChanged(CefSharp.Structs.Range,CefSharp.Structs.Rect[])">
            <summary>
            Called when the IME composition range has changed.
            </summary>
            <param name="selectedRange">is the range of characters that have been selected</param>
            <param name="characterBounds">is the bounds of each character in view coordinates.</param>
        </member>
        <member name="M:CefSharp.Internals.IRenderWebBrowser.OnVirtualKeyboardRequested(CefSharp.IBrowser,CefSharp.Enums.TextInputMode)">
            <summary>
            Called when an on-screen keyboard should be shown or hidden for the specified browser. 
            </summary>
            <param name="browser">the browser</param>
            <param name="inputMode">specifies what kind of keyboard should be opened. If <see cref="F:CefSharp.Enums.TextInputMode.None"/>, any existing keyboard for this browser should be hidden.</param>
        </member>
        <member name="T:CefSharp.Internals.CommandLineArgsParser">
            <summary>
            Simple helper class used for checking/parsing command line arguments
            </summary>
        </member>
        <member name="T:CefSharp.Internals.IBrowserAdapter">
            <summary>
            Interface used to break reference cycles in CefSharp.Core C++ code.
            This will ALWAYS be a ManagedCefBrowserAdapter instance.
            </summary>
        </member>
        <member name="T:CefSharp.Internals.IJavascriptCallbackFactory">
            <summary>
            Interface to convert a JavascriptCallback dto to a callable implementation.
            </summary>
        </member>
        <member name="M:CefSharp.Internals.IntPtrExtensions.CastToInt32(System.IntPtr)">
            <summary>
            Do an unchecked conversion from IntPtr to int
            so overflow exceptions don't get thrown.
            </summary>
            <param name="intPtr">the IntPtr to cast</param>
            <returns>a 32-bit signed integer</returns>
        </member>
        <member name="T:CefSharp.Internals.PendingTaskRepository`1">
            <summary>
            Class to store TaskCompletionSources indexed by a unique id.
            </summary>
            <typeparam name="TResult">The type of the result produced by the tasks held.</typeparam>
        </member>
        <member name="M:CefSharp.Internals.PendingTaskRepository`1.CreatePendingTask(System.Nullable{System.TimeSpan})">
            <summary>
            Creates a new pending task with a timeout.
            </summary>
            <param name="timeout">The maximum running time of the task.</param>
            <returns>The unique id of the newly created pending task and the newly created <see cref="T:System.Threading.Tasks.TaskCompletionSource`1"/>.</returns>
        </member>
        <member name="M:CefSharp.Internals.PendingTaskRepository`1.RemovePendingTask(System.Int64)">
            <summary>
            Gets and removed pending task by id.
            </summary>
            <param name="id">Unique id of the pending task.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.TaskCompletionSource`1"/> associated with the given id.
            </returns>
        </member>
        <member name="T:CefSharp.Internals.TaskExtensions">
            <summary>
            TaskExtension based on the following
            https://github.com/ChadBurggraf/parallel-extensions-extras/blob/master/Extensions/TaskExtrasExtensions.cs
            https://github.com/ChadBurggraf/parallel-extensions-extras/blob/ec803e58eee28c698e44f55f49c5ad6671b1aa58/Extensions/TaskCompletionSourceExtensions.cs
            </summary>
        </member>
        <member name="M:CefSharp.Internals.TaskExtensions.WithTimeout``1(System.Threading.Tasks.Task{``0},System.TimeSpan)">
            <summary>Creates a new Task that mirrors the supplied task but that will be canceled after the specified timeout.</summary>
            <typeparam name="TResult">Specifies the type of data contained in the task.</typeparam>
            <param name="task">The task.</param>
            <param name="timeout">The timeout.</param>
            <returns>The new Task that may time out.</returns>
        </member>
        <member name="M:CefSharp.Internals.TaskExtensions.TrySetFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task)">
            <summary>Attempts to transfer the result of a Task to the TaskCompletionSource.</summary>
            <typeparam name="TResult">Specifies the type of the result.</typeparam>
            <param name="resultSetter">The TaskCompletionSource.</param>
            <param name="task">The task whose completion results should be transfered.</param>
            <returns>Whether the transfer could be completed.</returns>
        </member>
        <member name="M:CefSharp.Internals.TaskExtensions.TrySetFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task{``0})">
            <summary>Attempts to transfer the result of a Task to the TaskCompletionSource.</summary>
            <typeparam name="TResult">Specifies the type of the result.</typeparam>
            <param name="resultSetter">The TaskCompletionSource.</param>
            <param name="task">The task whose completion results should be transfered.</param>
            <returns>Whether the transfer could be completed.</returns>
        </member>
        <member name="M:CefSharp.Internals.TaskExtensions.TrySetResultAsync``1(System.Threading.Tasks.TaskCompletionSource{``0},``0)">
            <summary>
            Set the TaskCompletionSource in an async fashion. This prevents the Task Continuation being executed sync on the same thread
            This is required otherwise contintinuations will happen on CEF UI threads
            </summary>
            <typeparam name="TResult">Generic param</typeparam>
            <param name="taskCompletionSource">tcs</param>
            <param name="result">result</param>
        </member>
        <member name="P:CefSharp.Internals.JavascriptMethod.Function">
            <summary>
            Gets or sets a delegate which is used to invoke the method if the member is a method. 
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptMethod.Id">
            <summary>
            Identifies the <see cref="T:CefSharp.Internals.JavascriptMethod" /> for BrowserProcess to RenderProcess communication
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptMethod.ManagedName">
            <summary>
            Gets or sets the name of the managed property.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptMethod.JavascriptName">
            <summary>
            Gets or sets the name of the property in the JavaScript runtime.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptMethod.Parameters">
            <summary>
            Params this method expects
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptMethod.ParameterCount">
            <summary>
            Number of Params this function exepects
            </summary>
        </member>
        <member name="T:CefSharp.Internals.JavascriptObject">
            <summary>
            This maps the registered objects in the browser process
            to the reflection data necessary to update the objects,
            and mapping information to how the object/method/proprerty
            will be exposed to JavaScript.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObject.Id">
            <summary>
            Identifies the <see cref="T:CefSharp.Internals.JavascriptObject" /> for BrowserProcess to RenderProcess communication
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObject.IsAsync">
            <summary>
            Indicate if this object bound as async
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObject.Methods">
            <summary>
            Gets the methods of the <see cref="T:CefSharp.Internals.JavascriptObject" />.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObject.Properties">
            <summary>
            Gets the properties of the <see cref="T:CefSharp.Internals.JavascriptObject" />.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObject.RootObject">
            <summary>
            A javascript object is created for every object, even those that are sub objects
            it's important we only transmit the Root Objects (top level/parent)
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObject.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:CefSharp.Internals.JavascriptObjectRepository">
            <summary>
            This class manages the registration of objects in the browser
            process to be exposed to JavaScript in the renderer process.
            Registration performs method, parameter, property type analysis
            of the registered objects into meta-data tied to reflection data 
            for later use.
            
            This class also is the adaptation layer between the BrowserProcessService
            and the registered objects. This means when the renderer wants to call an 
            exposed method, get a property of an object, or
            set a property of an object in the browser process, that this
            class does deals with the previously created meta-data and invokes the correct
            behavior via reflection APIs.
            
            All of the registered objects are tracked via meta-data for the objects 
            expressed starting with the JavaScriptObject type.
            </summary>
        </member>
        <member name="F:CefSharp.Internals.JavascriptObjectRepository.objects">
            <summary>
            A hash from assigned object ids to the objects,
            this is done to speed up finding the object in O(1) time
            instead of traversing the JavaScriptRootObject tree.
            </summary>
        </member>
        <member name="F:CefSharp.Internals.JavascriptObjectRepository.nameConverter">
            <summary>
            Javascript Name converter
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObjectRepository.IsBrowserInitialized">
            <summary>
            Has the browser this repository is associated with been initilized (set in OnAfterCreated)
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObjectRepository.Settings">
            <summary>
            Configurable settings for this repository, such as the property names CefSharp injects into the window.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObjectRepository.NameConverter">
            <summary>
            Converted .Net method/property/field names to the name that
            will be used in Javasript. Used for when .Net naming conventions
            differ from Javascript naming conventions.
            </summary>
        </member>
        <member name="M:CefSharp.Internals.JavascriptObjectRepository.AnalyseObjectForBinding(CefSharp.Internals.JavascriptObject,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Analyse the object and generate metadata which will
            be used by the browser subprocess to interact with Cef.
            Method is called recursively
            </summary>
            <param name="obj">Javascript object</param>
            <param name="analyseMethods">Analyse methods for inclusion in metadata model</param>
            <param name="analyseProperties">Analyse properties for inclusion in metadata model</param>
            <param name="readPropertyValue">When analysis is done on a property, if true then get it's value for transmission over WCF</param>
            <param name="nameConverter">convert names of properties/methods</param>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.SetValue">
            <summary>
            Gets or sets a delegate which is used to set the property / field value in the managed object.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.GetValue">
            <summary>
            Gets or sets a delegate which is used to get the property / field value from the managed object.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.Id">
            <summary>
            Identifies the <see cref="T:CefSharp.Internals.JavascriptProperty" /> for BrowserProcess to RenderProcess communication
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.ManagedName">
            <summary>
            Gets or sets the name of the managed property.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.JavascriptName">
            <summary>
            Gets or sets the name of the property in the JavaScript runtime.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.IsComplexType">
            <summary>
            Gets or sets if this property represents a complex type
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.IsReadOnly">
            <summary>
            Gets or sets if this property is read-only
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.PropertyValue">
            <summary>
            Gets or sets the property value
            Only primative types can be stored in this property
            </summary>
        </member>
        <member name="T:CefSharp.Internals.IWebBrowserInternal">
            <summary>
            Interface implemented by UI control that contains
            a ManagedCefBrowserAdapter instance.
            </summary>
        </member>
        <member name="T:CefSharp.IRegistration">
            <summary>
            Generic callback interface used for managing the lifespan of a registration.
            </summary>
        </member>
        <member name="T:CefSharp.JavascriptBinding.JavascriptBindingSettings">
            <summary>
            Javascript Binding Settings
            </summary>
        </member>
        <member name="P:CefSharp.JavascriptBinding.JavascriptBindingSettings.JavascriptBindingApiGlobalObjectName">
            <summary>
            The Javascript methods that CefSharp provides in relation to JavaScript Binding are
            created using a Global (window) Object. Settings this property allows you to customise
            the name of this object. If not specified then both cefSharp and CefSharp objects will
            be created e.g. cefSharp.bindObjectAsync, CefSharp.BindObjectAsync.
            If specified then your custom name will be used, if the name starts with a lowercase letter
            then all the functions will be lowercase, e.g. myObjName.bindObjectAsync otherwise
            the functions will start with a uppercase letter e.g. MyObjName.BindObjectAsync
            </summary>
            <remarks>
            This object is also accessible through the window property. e.g. window.cefSharp.bindObjectAsync
            </remarks>
        </member>
        <member name="P:CefSharp.JavascriptBinding.JavascriptBindingSettings.LegacyBindingEnabled">
            <summary>
            Objects registered using <see cref="M:CefSharp.IJavascriptObjectRepository.Register(System.String,System.Object,System.Boolean,CefSharp.BindingOptions)"/>
            will be automatically bound when a V8Context is created. (Soon as the Javascript
            context is created for a browser). This behaviour is like that seen with Javascript
            Binding in version 57 and earlier.
            </summary>
        </member>
        <member name="M:CefSharp.JavascriptBinding.JavascriptBindingSettings.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:CefSharp.JavascriptBinding.CamelCaseJavascriptNameConverter">
            <summary>
            CamelCaseJavascriptNameConverter converts .Net property/method names
            to camcel case.
            </summary>
        </member>
        <member name="M:CefSharp.JavascriptBinding.CamelCaseJavascriptNameConverter.ConvertToJavascript(System.Reflection.MemberInfo)">
            <summary>
            Get the javascript name for the property/field/method.
            Typically this would be based on <see cref="P:System.Reflection.MemberInfo.Name"/>
            </summary>
            <param name="memberInfo">property/field/method</param>
            <returns>javascript name</returns>
        </member>
        <member name="M:CefSharp.JavascriptBinding.CamelCaseJavascriptNameConverter.ConvertReturnedObjectPropertyAndFieldToNameJavascript(System.Reflection.MemberInfo)">
            <summary>
            This method exists for backwards compatability reasons, historically
            only the bound methods/fields/properties were converted. Objects returned
            from a method call were not translated. To preserve this functionality
            for upgrading users we split this into two methods. Typically thie method
            would return the same result as <see cref="!:ConvertToJavascript(string)"/>
            Issue #2442
            </summary>
            <param name="memberInfo">property/field/method</param>
            <returns>javascript name</returns>
        </member>
        <member name="M:CefSharp.JavascriptBinding.CamelCaseJavascriptNameConverter.ConvertMemberInfoNameToCamelCase(System.Reflection.MemberInfo)">
            <summary>
            Converts the <see cref="P:System.Reflection.MemberInfo.Name"/> to CamelCase
            </summary>
            <param name="memberInfo">memberInfo</param>
            <returns>camelcased name</returns>
        </member>
        <member name="T:CefSharp.JavascriptBinding.IJavascriptNameConverter">
            <summary>
            Implement this interface to have control of how the names
            are converted when binding/executing javascript.
            </summary>
        </member>
        <member name="M:CefSharp.JavascriptBinding.IJavascriptNameConverter.ConvertToJavascript(System.Reflection.MemberInfo)">
            <summary>
            Get the javascript name for the property/field/method.
            Typically this would be based on <see cref="P:System.Reflection.MemberInfo.Name"/>
            </summary>
            <param name="memberInfo">property/field/method</param>
            <returns>javascript name</returns>
        </member>
        <member name="M:CefSharp.JavascriptBinding.IJavascriptNameConverter.ConvertReturnedObjectPropertyAndFieldToNameJavascript(System.Reflection.MemberInfo)">
            <summary>
            This method exists for backwards compatability reasons, historically
            only the bound methods/fields/properties were converted. Objects returned
            from a method call were not translated. To preserve this functionality
            for upgrading users we split this into two methods. Typically thie method
            would return the same result as <see cref="!:ConvertToJavascript(string)"/>
            Issue #2442
            </summary>
            <param name="memberInfo">property/field/method</param>
            <returns>javascript name</returns>
        </member>
        <member name="T:CefSharp.JavascriptBinding.LegacyCamelCaseJavascriptNameConverter">
            <summary>
            Legacy Naming converter.
            Used by default for backwards compatability
            Issue #2442
            </summary>
        </member>
        <member name="T:CefSharp.IUrlRequest">
            <summary>
            Class used to make a URL request. URL requests are not associated with
            a browser instance so no CefClient callbacks will be executed.
            URL requests can be created on any valid CEF thread in either the browser
            or render process. Once created the methods of the URL request object must
            be accessed on the same thread that created it. 
            </summary>
        </member>
        <member name="P:CefSharp.IUrlRequest.ResponseWasCached">
            <summary>
            True if the response was served from the cache.
            </summary>
        </member>
        <member name="P:CefSharp.IUrlRequest.Response">
            <summary>
            The response, or null if no response information is available
            </summary>
        </member>
        <member name="P:CefSharp.IUrlRequest.RequestStatus">
            <summary>
            The request status.
            </summary>
        </member>
        <member name="T:CefSharp.IUrlRequestClient">
            <summary>
            Interface that should be implemented by the CefURLRequest client.
            The methods of this class will be called on the same thread that created the request unless otherwise documented. 
            </summary>
        </member>
        <member name="M:CefSharp.IUrlRequestClient.GetAuthCredentials(System.Boolean,System.String,System.Int32,System.String,System.String,CefSharp.IAuthCallback)">
            <summary>
            Called on the CEF IO thread when the browser needs credentials from the user.
            This method will only be called for requests initiated from the browser process. 
            </summary>
            <param name="isProxy">indicates whether the host is a proxy server.</param>
            <param name="host">the hostname.</param>
            <param name="port">the port number.</param>
            <param name="realm">realm</param>
            <param name="scheme">scheme</param>
            <param name="callback">is a callback for authentication information</param>
            <returns>
            Return true to continue the request and call <see cref="M:CefSharp.IAuthCallback.Continue(System.String,System.String)"/> when the authentication information is available.
            If the request has an associated browser/frame then returning false will result in a call to <see cref="M:CefSharp.IRequestHandler.GetAuthCredentials(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Boolean,System.String,System.Int32,System.String,System.String,CefSharp.IAuthCallback)"/> 
            on the <see cref="T:CefSharp.IRequestHandler"/> associated with that browser, if any.
            Otherwise, returning false will cancel the request immediately.
            </returns>
        </member>
        <member name="M:CefSharp.IUrlRequestClient.OnDownloadData(CefSharp.IUrlRequest,System.IO.Stream)">
            <summary>
            Called when some part of the response is read. This method will not be called if the <see cref="F:CefSharp.UrlRequestFlags.NoDownloadData"/> flag is set on the request. 
            </summary>
            <param name="request">request</param>
            <param name="data">A stream containing the bytes received since the last call. Cannot be used outside the scope of this method. </param>
        </member>
        <member name="M:CefSharp.IUrlRequestClient.OnDownloadProgress(CefSharp.IUrlRequest,System.Int64,System.Int64)">
            <summary>
            Notifies the client of download progress.
            </summary>
            <param name="request">request</param>
            <param name="current">denotes the number of bytes received up to the call </param>
            <param name="total">is the expected total size of the response (or -1 if not determined).</param>
        </member>
        <member name="M:CefSharp.IUrlRequestClient.OnRequestComplete(CefSharp.IUrlRequest)">
            <summary>
            Notifies the client that the request has completed.
            Use the <see cref="P:CefSharp.IUrlRequest.RequestStatus"/> property to determine if the
            request was successful or not.
            </summary>
            <param name="request">request</param>
        </member>
        <member name="M:CefSharp.IUrlRequestClient.OnUploadProgress(CefSharp.IUrlRequest,System.Int64,System.Int64)">
            <summary>
            Notifies the client of upload progress.
            This method will only be called if the UR_FLAG_REPORT_UPLOAD_PROGRESS flag is set on the request.
            </summary>
            <param name="request">request</param>
            <param name="current">denotes the number of bytes sent so far.</param>
            <param name="total">is the total size of uploading data (or -1 if chunked upload is enabled).</param>
        </member>
        <member name="T:CefSharp.Lagacy.ResourceHandler">
            <summary>
            Legacy ResourceHandler, will be removed when CEF removes the old code path for
            it's CefResourceHandler implementation. This is the older and well tested variant.
            It doesn't however support range request headers (seek).
            </summary>
        </member>
        <member name="P:CefSharp.Lagacy.ResourceHandler.Charset">
            <summary>
            Gets or sets the Charset
            </summary>
        </member>
        <member name="P:CefSharp.Lagacy.ResourceHandler.MimeType">
            <summary>
            Gets or sets the Mime Type.
            </summary>
        </member>
        <member name="P:CefSharp.Lagacy.ResourceHandler.Stream">
            <summary>
            Gets or sets the resource stream.
            </summary>
        </member>
        <member name="P:CefSharp.Lagacy.ResourceHandler.StatusCode">
            <summary>
            Gets or sets the http status code.
            </summary>
        </member>
        <member name="P:CefSharp.Lagacy.ResourceHandler.StatusText">
            <summary>
            Gets or sets the status text.
            </summary>
        </member>
        <member name="P:CefSharp.Lagacy.ResourceHandler.ResponseLength">
            <summary>
            Gets or sets ResponseLength, when you know the size of your
            Stream (Response) set this property. This is optional.
            If you use a MemoryStream and don't provide a value
            here then it will be cast and it's size used
            </summary>
        </member>
        <member name="P:CefSharp.Lagacy.ResourceHandler.Headers">
            <summary>
            Gets or sets the headers.
            </summary>
            <value>The headers.</value>
        </member>
        <member name="P:CefSharp.Lagacy.ResourceHandler.AutoDisposeStream">
            <summary>
            When true the Stream will be Disposed when
            this instance is Disposed. The default value for
            this property is false.
            </summary>
        </member>
        <member name="P:CefSharp.Lagacy.ResourceHandler.ErrorCode">
            <summary>
            If the ErrorCode is set then the response will be ignored and
            the errorCode returned.
            </summary>
        </member>
        <member name="M:CefSharp.Lagacy.ResourceHandler.#ctor(System.String,System.IO.Stream,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.Lagacy.ResourceHandler"/> class.
            </summary>
            <param name="mimeType">Optional mimeType defaults to <see cref="F:CefSharp.ResourceHandler.DefaultMimeType"/></param>
            <param name="stream">Optional Stream - must be set at some point to provide a valid response</param>
            <param name="autoDisposeStream">When true the Stream will be disposed when this instance is Diposed, you will
            be unable to use this ResourceHandler after the Stream has been disposed</param>
            <param name="charset">response charset</param>
        </member>
        <member name="M:CefSharp.Lagacy.ResourceHandler.ProcessRequestAsync(CefSharp.IRequest,CefSharp.ICallback)">
            <summary>
            Begin processing the request. If you have the data in memory you can execute the callback
            immediately and return true. For Async processing you would typically spawn a Task to perform processing,
            then return true. When the processing is complete execute callback.Continue(); In your processing Task, simply set
            the StatusCode, StatusText, MimeType, ResponseLength and Stream
            </summary>
            <param name="request">The request object.</param>
            <param name="callback">The callback used to Continue or Cancel the request (async).</param>
            <returns>To handle the request return true and call
            <see cref="M:CefSharp.ICallback.Continue"/> once the response header information is available
            <see cref="M:CefSharp.ICallback.Continue"/> can also be called from inside this method if
            header information is available immediately).
            To cancel the request return false.</returns>
        </member>
        <member name="M:CefSharp.Lagacy.ResourceHandler.Cancel">
            <summary>
            Called if the request is cancelled
            </summary>
        </member>
        <member name="M:CefSharp.Lagacy.ResourceHandler.Dispose">
            <summary>
            Dispose of resources here
            </summary>
        </member>
        <member name="M:CefSharp.Lagacy.ResourceHandler.GetResponse(CefSharp.IResponse,System.Int64@,System.String@)">
            <summary>
            Populate the response stream, response length. When this method is called
            the response should be fully populated with data.
            It is possible to redirect to another url at this point in time.
            NOTE: It's no longer manditory to implement this method, you can simply populate the
            properties of this instance and they will be set by the default implementation. 
            </summary>
            <param name="response">The response object used to set Headers, StatusCode, etc</param>
            <param name="responseLength">length of the response</param>
            <param name="redirectUrl">If set the request will be redirect to specified Url</param>
            <returns>The response stream</returns>
        </member>
        <member name="T:CefSharp.Preferences.SetPreferenceResponse">
            <summary>
            Response when <see cref="M:CefSharp.IRequestContext.SetPreference(System.String,System.Object,System.String@)"/>
            is called in an async fashion
            </summary>
        </member>
        <member name="P:CefSharp.Preferences.SetPreferenceResponse.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="P:CefSharp.Preferences.SetPreferenceResponse.ErrorMessage">
            <summary>
            Error Message
            </summary>
        </member>
        <member name="M:CefSharp.Preferences.SetPreferenceResponse.#ctor(System.Boolean,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="success">success</param>
            <param name="errorMessage">error message</param>
        </member>
        <member name="T:CefSharp.ResourceRequestHandlerFactory">
            <summary>
            Default implementation of <see cref="T:CefSharp.IResourceRequestHandlerFactory"/> it's used
            internally for the LoadHtml implementation - basically a resource handler is
            registered for a specific Url.
            </summary>
        </member>
        <member name="P:CefSharp.ResourceRequestHandlerFactory.Handlers">
            <summary>
            Resource handler thread safe dictionary
            </summary>
        </member>
        <member name="M:CefSharp.ResourceRequestHandlerFactory.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Create a new instance of DefaultResourceHandlerFactory
            </summary>
            <param name="comparer">string equality comparer</param>
        </member>
        <member name="M:CefSharp.ResourceRequestHandlerFactory.RegisterHandler(System.String,System.Byte[],System.String,System.Boolean)">
            <summary>
            Register a handler for the specified Url
            </summary>
            <param name="url">url</param>
            <param name="data">The data in byte[] format that will be used for the response</param>
            <param name="mimeType">mime type</param>
            <param name="oneTimeUse">Whether or not the handler should be used once (true) or until manually unregistered (false)</param>
            <returns>returns true if the Url was successfully parsed into a Uri otherwise false</returns>
        </member>
        <member name="M:CefSharp.ResourceRequestHandlerFactory.UnregisterHandler(System.String)">
            <summary>
            Unregister a handler for the specified Url
            </summary>
            <param name="url">Url</param>
            <returns>returns true if successfully removed</returns>
        </member>
        <member name="P:CefSharp.ResourceRequestHandlerFactory.CefSharp#IResourceRequestHandlerFactory#HasHandlers">
            <summary>
            Are there any <see cref="T:CefSharp.ResourceHandler"/>'s registered?
            </summary>
        </member>
        <member name="M:CefSharp.ResourceRequestHandlerFactory.CefSharp#IResourceRequestHandlerFactory#GetResourceRequestHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean,System.String,System.Boolean@)">
            <inheritdoc /> 
        </member>
        <member name="M:CefSharp.ResourceRequestHandlerFactory.GetResourceRequestHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean,System.String,System.Boolean@)">
            <summary>
            Called on the CEF IO thread before a resource request is initiated.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">represent the source browser of the request</param>
            <param name="frame">represent the source frame of the request</param>
            <param name="request">represents the request contents and cannot be modified in this callback</param>
            <param name="isNavigation">will be true if the resource request is a navigation</param>
            <param name="isDownload">will be true if the resource request is a download</param>
            <param name="requestInitiator">is the origin (scheme + domain) of the page that initiated the request</param>
            <param name="disableDefaultHandling">to true to disable default handling of the request, in which case it will need to be handled via <see cref="M:CefSharp.IResourceRequestHandler.GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)"/> or it will be canceled</param>
            <returns>To allow the resource load to proceed with default handling return null. To specify a handler for the resource return a <see cref="T:CefSharp.IResourceRequestHandler"/> object. If this callback returns null the same method will be called on the associated <see cref="T:CefSharp.IRequestContextHandler"/>, if any</returns>
        </member>
        <member name="T:CefSharp.ResourceRequestHandlerFactoryItem">
            <summary>
            A resource request handler factory item.
            </summary>
        </member>
        <member name="P:CefSharp.ResourceRequestHandlerFactoryItem.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:CefSharp.ResourceRequestHandlerFactoryItem.MimeType">
            <summary>
            Mime Type
            </summary>
        </member>
        <member name="P:CefSharp.ResourceRequestHandlerFactoryItem.OneTimeUse">
            <summary>
            Whether or not the handler should be used once (true) or until manually unregistered (false)
            </summary>
        </member>
        <member name="M:CefSharp.ResourceRequestHandlerFactoryItem.#ctor(System.Byte[],System.String,System.Boolean)">
            <summary>
            DefaultResourceHandlerFactoryItem constructor
            </summary>
            <param name="data">The data in byte[] format that will be used for the response</param>
            <param name="mimeType">mime type</param>
            <param name="oneTimeUse">Whether or not the handler should be used once (true) or until manually unregistered (false)</param>
        </member>
        <member name="T:CefSharp.Event.JavascriptBindingCompleteEventArgs">
            <summary>
            Event arguments for the <see cref="E:CefSharp.IJavascriptObjectRepository.ObjectBoundInJavascript"/> event
            </summary>
        </member>
        <member name="P:CefSharp.Event.JavascriptBindingCompleteEventArgs.ObjectRepository">
            <summary>
            The javascript object repository, used to register objects
            </summary>
        </member>
        <member name="P:CefSharp.Event.JavascriptBindingCompleteEventArgs.ObjectName">
            <summary>
            Name of the object
            </summary>
        </member>
        <member name="P:CefSharp.Event.JavascriptBindingCompleteEventArgs.AlreadyBound">
            <summary>
            Was the object already bound. The default is false for the first js call to 
            CefSharp.BindObjectAsync, and subsiquently true if already bound in a given context.
            </summary>
        </member>
        <member name="P:CefSharp.Event.JavascriptBindingCompleteEventArgs.IsCached">
            <summary>
            Is the object cached
            </summary>
        </member>
        <member name="M:CefSharp.Event.JavascriptBindingCompleteEventArgs.#ctor(CefSharp.IJavascriptObjectRepository,System.String,System.Boolean,System.Boolean)">
            <summary>
            JavascriptBindingCompleteEventArgs
            </summary>
            <param name="objectRepository">javascript object repository</param>
            <param name="name">object name</param>
            <param name="alreadyBound">is the object already bound</param>
            <param name="isCached">is the object cached</param>
        </member>
        <member name="T:CefSharp.Event.JavascriptBindingEventArgs">
            <summary>
            Event arguments for the <see cref="E:CefSharp.IJavascriptObjectRepository.ResolveObject"/> event
            </summary>
        </member>
        <member name="P:CefSharp.Event.JavascriptBindingEventArgs.ObjectRepository">
            <summary>
            The javascript object repository, used to register objects
            </summary>
        </member>
        <member name="P:CefSharp.Event.JavascriptBindingEventArgs.ObjectName">
            <summary>
            Name of the object
            </summary>
        </member>
        <member name="M:CefSharp.Event.JavascriptBindingEventArgs.#ctor(CefSharp.IJavascriptObjectRepository,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="objectRepository">object repository</param>
            <param name="name">object name</param>
        </member>
        <member name="T:CefSharp.Event.JavascriptBindingMultipleCompleteEventArgs">
            <summary>
            Event arguments for the <see cref="E:CefSharp.IJavascriptObjectRepository.ObjectsBoundInJavascript"/> event
            </summary>
        </member>
        <member name="P:CefSharp.Event.JavascriptBindingMultipleCompleteEventArgs.ObjectRepository">
            <summary>
            The javascript object repository, used to register objects
            </summary>
        </member>
        <member name="P:CefSharp.Event.JavascriptBindingMultipleCompleteEventArgs.ObjectNames">
            <summary>
            Name of the objects bound
            </summary>
        </member>
        <member name="M:CefSharp.Event.JavascriptBindingMultipleCompleteEventArgs.#ctor(CefSharp.IJavascriptObjectRepository,System.Collections.Generic.IList{System.String})">
            <summary>
            JavascriptBindingMultipleCompleteEventArgs
            </summary>
            <param name="objectRepository">Javascript object repository</param>
            <param name="names">object names</param>
        </member>
        <member name="T:CefSharp.CefFileDialogFlags">
            <summary>
            FileDialog Flags
            </summary>
        </member>
        <member name="F:CefSharp.CefFileDialogFlags.OverwritePrompt">
            <summary>
            Prompt to overwrite if the user selects an existing file with the Save dialog.
            </summary>
        </member>
        <member name="F:CefSharp.CefFileDialogFlags.HideReadOnly">
            <summary>
            Do not display read-only files.
            </summary>
        </member>
        <member name="T:CefSharp.JavascriptMessageReceivedEventArgs">
            <summary>
            Calling CefSharp.PostMessage in Javascript triggers the JavascriptMessageReceived
            This event args contains the frame, browser and message corrisponding to that call
            </summary>
        </member>
        <member name="P:CefSharp.JavascriptMessageReceivedEventArgs.Frame">
            <summary>
            The frame that called CefSharp.PostMessage in Javascript
            </summary>
        </member>
        <member name="P:CefSharp.JavascriptMessageReceivedEventArgs.Browser">
            <summary>
            The browser that hosts the <see cref="T:CefSharp.IFrame"/>
            </summary>
        </member>
        <member name="P:CefSharp.JavascriptMessageReceivedEventArgs.Message">
            <summary>
            Message can be a primative type or a simple object that represents a copy
            of the data sent from the browser
            </summary>
        </member>
        <member name="M:CefSharp.JavascriptMessageReceivedEventArgs.#ctor(CefSharp.IBrowser,CefSharp.IFrame,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="browser">The browser that hosts the <see cref="T:CefSharp.IFrame"/></param>
            <param name="frame">The frame that called CefSharp.PostMessage in Javascript.</param>
            <param name="message">Message can be a primative type or a simple object that represents a copy of the data sent from the
            browser.</param>
        </member>
        <member name="M:CefSharp.JavascriptMessageReceivedEventArgs.ConvertMessageTo``1">
            <summary>
            Converts the <see cref="P:CefSharp.JavascriptMessageReceivedEventArgs.Message"/> to a specific type using the
            <see cref="T:CefSharp.ModelBinding.DefaultBinder"/> that CefSharp provides
            </summary>
            <typeparam name="T">Type</typeparam>
            <returns>Type</returns>
        </member>
        <member name="T:CefSharp.UrlRequestFlags">
            <summary>
            Flags used to customize the behavior of CefURLRequest.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestFlags.None">
            <summary>
            Default behavior.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestFlags.SkipCache">
            <summary>
            If set the cache will be skipped when handling the request. Setting this
            value is equivalent to specifying the "Cache-Control: no-cache" request
            header. Setting this value in combination with OnlyFromCache will
            cause the request to fail.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestFlags.OnlyFromCache">
            <summary>
            If set the request will fail if it cannot be served from the cache (or some
            equivalent local store). Setting this value is equivalent to specifying the
            "Cache-Control: only-if-cached" request header. Setting this value in
            combination with SkipCache or DisableCache will cause the
            request to fail.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestFlags.DisableCache">
            <summary>
            If set the cache will not be used at all. Setting this value is equivalent
            to specifying the "Cache-Control: no-store" request header. Setting this
            value in combination with OnlyFromCache will cause the request to
            fail.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestFlags.AllowStoredCredentials">
            <summary>
            If set user name, password, and cookies may be sent with the request, and
            cookies may be saved from the response.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestFlags.ReportUploadProgress">
            <summary>
             If set upload progress events will be generated when a request has a body.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestFlags.NoDownloadData">
            <summary>
            If set the CefURLRequestClient::OnDownloadData method will not be called.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestFlags.NoRetryOn5XX">
            <summary>
            If set 5XX redirect errors will be propagated to the observer instead of
            automatically re-tried. This currently only applies for requests
            originated in the browser process.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestFlags.StopOnRedirect">
            <summary>
            If set 3XX responses will cause the fetch to halt immediately rather than
            continue through the redirect.
            </summary>
        </member>
        <member name="T:CefSharp.IAccessibilityHandler">
            <summary>
            Implement this interface to receive accessibility notification when accessibility events have been registered. 
            It's important to note that the methods of this interface are called on a CEF UI thread,
            which by default is not the same as your application UI thread.
            </summary>
        </member>
        <member name="M:CefSharp.IAccessibilityHandler.OnAccessibilityLocationChange(CefSharp.IValue)">
            <summary>
            Called after renderer process sends accessibility location changes to the browser process.
            </summary>
            <param name="value">Updated location info.</param>
        </member>
        <member name="M:CefSharp.IAccessibilityHandler.OnAccessibilityTreeChange(CefSharp.IValue)">
            <summary>
            Called after renderer process sends accessibility tree changes to the browser process.
            </summary>
            <param name="value">Updated tree info.</param>
        </member>
        <member name="T:CefSharp.IExtensionHandler">
            <summary>
            Implement this interface to handle events related to browser extensions.
            The methods of this class will be called on the CEF UI thread.
            See <see cref="M:CefSharp.IRequestContext.LoadExtension(System.String,System.String,CefSharp.IExtensionHandler)"/> for information about extension loading.
            </summary>
        </member>
        <member name="M:CefSharp.IExtensionHandler.OnExtensionLoadFailed(CefSharp.CefErrorCode)">
            <summary>
            Called if the <see cref="M:CefSharp.IRequestContext.LoadExtension(System.String,System.String,CefSharp.IExtensionHandler)"/> request fails.
            </summary>
            <param name="errorCode">error code</param>
        </member>
        <member name="M:CefSharp.IExtensionHandler.OnExtensionLoaded(CefSharp.IExtension)">
            <summary>
            Called if the <see cref="M:CefSharp.IRequestContext.LoadExtension(System.String,System.String,CefSharp.IExtensionHandler)"/> request succeeds.
            </summary>
            <param name="extension">is the loaded extension.</param>
        </member>
        <member name="M:CefSharp.IExtensionHandler.OnExtensionUnloaded(CefSharp.IExtension)">
            <summary>
            Called after the IExtension.Unload request has completed.
            </summary>
            <param name="extension">is the unloaded extension</param>
        </member>
        <member name="M:CefSharp.IExtensionHandler.OnBeforeBackgroundBrowser(CefSharp.IExtension,System.String,CefSharp.IBrowserSettings)">
            <summary>
            Called when an extension needs a browser to host a background script specified via the "background" manifest key.
            The browser will have no visible window and cannot be displayed. To allow creation of the browser optionally
            modify newBrowser and settings and return false. To cancel creation of the browser
            (and consequently cancel load of the background script) return  true. Successful creation will be indicated by a call to
            ILifeSpanHandler.OnAfterCreated, and IBrowserHost.IsBackgroundHost
            will return true for the resulting browser. See https://developer.chrome.com/extensions/event_pages for more information
            about extension background script usage.
            </summary>
            <param name="extension">is the extension that is loading the background script</param>
            <param name="url">is an internally generated reference to an HTML page that will be used to
            load the background script via a script src attribute</param>
            <param name="settings">browser settings</param>
            <returns>To cancel creation of the browser (and consequently cancel load of the background script) return true, otherwise return false.</returns>
        </member>
        <member name="M:CefSharp.IExtensionHandler.OnBeforeBrowser(CefSharp.IExtension,CefSharp.IBrowser,CefSharp.IBrowser,System.Int32,System.String,System.Boolean,CefSharp.IWindowInfo,CefSharp.IBrowserSettings)">
            <summary>
            Called when an extension API (e.g. chrome.tabs.create) requests creation of a new browser.
            Successful creation will be indicated by a call to <see cref="M:CefSharp.ILifeSpanHandler.OnAfterCreated(CefSharp.IWebBrowser,CefSharp.IBrowser)"/>.
            </summary>
            <param name="extension">the source of the API call</param>
            <param name="browser">the source of the API call</param>
            <param name="activeBrowser">may optionally be specified via the windowId property or
            returned via the GetActiveBrowser() callback and provides the default for the new browser</param>
            <param name="index">is the position value optionally specified via the index property</param>
            <param name="url">is the URL that will be loaded in the browser</param>
            <param name="active">is true if the new browser should be active when opened</param>
            <param name="windowInfo">optionally modify if you are going to allow creation of the browser</param>
            <param name="settings">optionally modify browser settings</param>
            <returns>To cancel creation of the browser return true. To allow creation return false and optionally modify windowInfo and settings</returns>
        </member>
        <member name="M:CefSharp.IExtensionHandler.GetActiveBrowser(CefSharp.IExtension,CefSharp.IBrowser,System.Boolean)">
            <summary>
            Called when no tabId is specified to an extension API call that accepts a tabId parameter (e.g. chrome.tabs.*).
            </summary>
            <param name="extension">extension the call originates from</param>
            <param name="browser">browser the call originates from</param>
            <param name="includeIncognito">Incognito browsers should not be considered unless the source extension has incognito
            access enabled, inwhich case this will be true</param>
            <returns>Return the browser that will be acted on by the API call or return null to act on <paramref name="browser"/>.
            The returned browser must share the same IRequestContext as <paramref name="browser"/></returns>
        </member>
        <member name="M:CefSharp.IExtensionHandler.CanAccessBrowser(CefSharp.IExtension,CefSharp.IBrowser,System.Boolean,CefSharp.IBrowser)">
            <summary>
            Called when the tabId associated with <paramref name="targetBrowser"/> is specified to an extension API call that accepts a tabId
            parameter (e.g. chrome.tabs.*).
            </summary>
            <param name="extension">extension the call originates from</param>
            <param name="browser">browser the call originates from</param>
            <param name="includeIncognito">Access to incognito browsers should not be allowed unless the source extension has
            incognito access
            enabled, in which case this will be true.</param>
            <param name="targetBrowser"></param>
            <returns>Return true to allow access of false to deny access.</returns>
        </member>
        <member name="M:CefSharp.IExtensionHandler.GetExtensionResource(CefSharp.IExtension,CefSharp.IBrowser,System.String,CefSharp.IGetExtensionResourceCallback)">
            <summary>
            Called to retrieve an extension resource that would normally be loaded from disk
            (e.g. if a file parameter is specified to chrome.tabs.executeScript).
            Localization substitutions will not be applied to resources handled via this method.
            </summary>
            <param name="extension">extension the call originates from</param>
            <param name="browser">browser the call originates from</param>
            <param name="file">is the requested relative file path.</param>
            <param name="callback">callback used to handle custom resource requests</param>
            <returns>To handle the resource request return true and execute <paramref name="callback"/> either synchronously or asynchronously.
            For the default behavior which reads the resource from the extension directory on disk return false</returns>
        </member>
        <member name="T:CefSharp.ICookieAccessFilter">
            <summary>
            Implement this interface to filter cookies that may be sent or received from
            resource requests. The methods of this class will be called on the CEF IO thread
            unless otherwise indicated.
            </summary>
        </member>
        <member name="M:CefSharp.ICookieAccessFilter.CanSendCookie(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.Cookie)">
            <summary>
            Called on the CEF IO thread before a resource request is sent.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="request">the request object - cannot be modified in this callback</param>
            <param name="cookie">the cookie object</param>
            <returns>Return true if the specified cookie can be sent with the request or false otherwise.</returns>
        </member>
        <member name="M:CefSharp.ICookieAccessFilter.CanSaveCookie(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,CefSharp.Cookie)">
            <summary>
            Called on the CEF IO thread after a resource response is received.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="request">the request object - cannot be modified in this callback</param>
            <param name="response">the response object - cannot be modified in this callback</param>
            <param name="cookie">the cookie object</param>
            <returns>Return true if the specified cookie returned with the response can be saved or false otherwise.</returns>
        </member>
        <member name="T:CefSharp.IResourceRequestHandler">
            <summary>
            Implement this interface to handle events related to browser requests.
            The methods of this class will be called on the CEF IO thread unless otherwise indicated.
            </summary>
        </member>
        <member name="M:CefSharp.IResourceRequestHandler.GetCookieAccessFilter(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>
            Called on the CEF IO thread before a resource request is loaded.
            To optionally filter cookies for the request return a <see cref="T:CefSharp.ICookieAccessFilter"/> object.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="request">the request object - can be modified in this callback.</param>
            <returns>To optionally filter cookies for the request return a ICookieAccessFilter instance otherwise return null.</returns>
        </member>
        <member name="M:CefSharp.IResourceRequestHandler.OnBeforeResourceLoad(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IRequestCallback)">
            <summary>
            Called on the CEF IO thread before a resource request is loaded.
            To redirect or change the resource load optionally modify <paramref name="request"/>.
            Modification of the request URL will be treated as a redirect
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="request">the request object - can be modified in this callback.</param>
            <param name="callback">Callback interface used for asynchronous continuation of url requests.</param>
            <returns>
            Return <see cref="F:CefSharp.CefReturnValue.Continue"/> to continue the request immediately.
            Return <see cref="F:CefSharp.CefReturnValue.ContinueAsync"/> and call <see cref="M:CefSharp.IRequestCallback.Continue(System.Boolean)"/> or <see cref="M:CefSharp.IRequestCallback.Cancel"/> at a later time to continue or the cancel the request asynchronously.
            Return <see cref="F:CefSharp.CefReturnValue.Cancel"/> to cancel the request immediately.
            </returns>
        </member>
        <member name="M:CefSharp.IResourceRequestHandler.GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>
            Called on the CEF IO thread before a resource is loaded. To specify a handler for the resource return a <see cref="T:CefSharp.IResourceHandler"/> object
            </summary>
            <param name="chromiumWebBrowser">The browser UI control</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="request">the request object - cannot be modified in this callback</param>
            <returns>To allow the resource to load using the default network loader return null otherwise return an instance of <see cref="T:CefSharp.IResourceHandler"/> with a valid stream</returns>
        </member>
        <member name="M:CefSharp.IResourceRequestHandler.OnResourceRedirect(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,System.String@)">
            <summary>
            Called on the CEF IO thread when a resource load is redirected.
            The <paramref name="request"/> parameter will contain the old URL and other request-related information.
            The <paramref name="response"/> parameter will contain the response that resulted in the
            redirect. The <paramref name="newUrl"/> parameter will contain the new URL and can be changed if desired. 
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="request">the request object - cannot be modified in this callback</param>
            <param name="response">the response object - cannot be modified in this callback</param>
            <param name="newUrl">the new URL and can be changed if desired</param>
        </member>
        <member name="M:CefSharp.IResourceRequestHandler.OnResourceResponse(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse)">
             <summary>
             Called on the CEF IO thread when a resource response is received.
             To allow the resource load to proceed without modification return false. To redirect or
             retry the resource load optionally modify <paramref name="request"/> and return true.
             Modification of the request URL will be treated as a redirect. Requests
             handled using the default network loader cannot be redirected in this
             callback. 
            
             WARNING: Redirecting using this method is deprecated. Use
             OnBeforeResourceLoad or GetResourceHandler to perform redirects.
             </summary>
             <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
             <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest</param>
             <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest</param>
             <param name="request">the request object</param>
             <param name="response">the response object - cannot be modified in this callback</param>
             <returns>
             To allow the resource load to proceed without modification return false. To redirect or
             retry the resource load optionally modify <paramref name="request"/> and return true.
             Modification of the request URL will be treated as a redirect.
             Requests handled using the default network loader cannot be redirected in this callback. 
             </returns>
        </member>
        <member name="M:CefSharp.IResourceRequestHandler.GetResourceResponseFilter(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse)">
            <summary>
            Called on the CEF IO thread to optionally filter resource response content.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="request">the request object - cannot be modified in this callback</param>
            <param name="response">the response object - cannot be modified in this callback</param>
            <returns>Return an IResponseFilter to intercept this response, otherwise return null</returns>
        </member>
        <member name="M:CefSharp.IResourceRequestHandler.OnResourceLoadComplete(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,CefSharp.UrlRequestStatus,System.Int64)">
            <summary>
            Called on the CEF IO thread when a resource load has completed.
            This method will be called for all requests, including requests that are
            aborted due to CEF shutdown or destruction of the associated browser. In
            cases where the associated browser is destroyed this callback may arrive
            after the <see cref="M:CefSharp.ILifeSpanHandler.OnBeforeClose(CefSharp.IWebBrowser,CefSharp.IBrowser)"/> callback for that browser. The
            <see cref="P:CefSharp.IFrame.IsValid"/> method can be used to test for this situation, and care
            should be taken not to call <paramref name="browser"/> or <paramref name="frame"/> methods that modify state
            (like LoadURL, SendProcessMessage, etc.) if the frame is invalid.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="request">the request object - cannot be modified in this callback</param>
            <param name="response">the response object - cannot be modified in this callback</param>
            <param name="status">indicates the load completion status</param>
            <param name="receivedContentLength">is the number of response bytes actually read.</param>
        </member>
        <member name="M:CefSharp.IResourceRequestHandler.OnProtocolExecution(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>
            Called on the CEF UI thread to handle requests for URLs with an unknown protocol component. 
            SECURITY WARNING: YOU SHOULD USE THIS METHOD TO ENFORCE RESTRICTIONS BASED ON SCHEME, HOST OR OTHER URL ANALYSIS BEFORE ALLOWING OS EXECUTION.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="frame">the frame object - may be null if originating from ServiceWorker or CefURLRequest</param>
            <param name="request">the request object - cannot be modified in this callback</param>
            <returns>return to true to attempt execution via the registered OS protocol handler, if any. Otherwise return false.</returns>
        </member>
        <member name="T:CefSharp.IApp">
            <summary>
            Implement this interface to provide handler implementations.
            Methods will be called by the process and/or thread indicated.
            </summary>
        </member>
        <member name="P:CefSharp.IApp.BrowserProcessHandler">
            <summary>
            Return the handler for functionality specific to the browser process.
            This method is called on multiple threads.
            </summary>
        </member>
        <member name="M:CefSharp.IApp.OnRegisterCustomSchemes(CefSharp.ISchemeRegistrar)">
            <summary>
            Provides an opportunity to register custom schemes. Do not keep a reference to the <paramref name="registrar"/> object.
            This method is called on the main thread for each process and the registered schemes should be the same across all processes.
            </summary>
            <param name="registrar">scheme registra</param>
        </member>
        <member name="T:CefSharp.IAudioHandler">
            <summary>
            Implement this interface to handle audio events
            All methods will be called on the CEF UI thread
            </summary>
        </member>
        <member name="M:CefSharp.IAudioHandler.GetAudioParameters(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.Structs.AudioParameters@)">
            <summary>
            Called on the CEF UI thread to allow configuration of audio stream parameters.
            Audio stream paramaters can optionally be configured by modifying <paramref name="parameters"/>
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="parameters">audio stream parameters can optionally be configured here, they are
            pre-filled with some sensible defaults.</param>
            <returns>Return true to proceed with audio stream capture, or false to cancel it</returns>
        </member>
        <member name="M:CefSharp.IAudioHandler.OnAudioStreamStarted(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.Structs.AudioParameters,System.Int32)">
            <summary>
            Called on a browser audio capture thread when the browser starts streaming audio.
            OnAudioSteamStopped will always be called after OnAudioStreamStarted; both methods may be called multiple
            times for the same browser.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="parameters">contains the audio parameters like sample rate and channel layout.
            Changing the param values will have no effect here.</param>
            <param name="channels">is the number of channels</param>
        </member>
        <member name="M:CefSharp.IAudioHandler.OnAudioStreamPacket(CefSharp.IWebBrowser,CefSharp.IBrowser,System.IntPtr,System.Int32,System.Int64)">
            <summary>
            Called on the audio stream thread when a PCM packet is received for the stream.
            Based on and the <see cref="P:CefSharp.Structs.AudioParameters.ChannelLayout"/> value passed to <see cref="M:CefSharp.IAudioHandler.OnAudioStreamStarted(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.Structs.AudioParameters,System.Int32)"/>
            you can calculate the size of the <paramref name="data"/> array in bytes.
            </summary>
            <param name="chromiumWebBrowser"></param>
            <param name="data">is an array representing the raw PCM data as a floating point type, i.e. 4-byte value(s).</param>
            <param name="noOfFrames">is the number of frames in the PCM packet</param>
            <param name="pts">is the presentation timestamp (in milliseconds since the Unix Epoch)
            and represents the time at which the decompressed packet should be presented to the user</param>
        </member>
        <member name="M:CefSharp.IAudioHandler.OnAudioStreamStopped(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>
            Called on the CEF UI thread when the stream has stopped. OnAudioSteamStopped will always be called after <see cref="M:CefSharp.IAudioHandler.OnAudioStreamStarted(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.Structs.AudioParameters,System.Int32)"/>;
            both methods may be called multiple times for the same stream.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
        </member>
        <member name="M:CefSharp.IAudioHandler.OnAudioStreamError(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String)">
            <summary>
            Called on the CEF UI thread or audio stream thread when an error occurred. During the
            stream creation phase this callback will be called on the UI thread while
            in the capturing phase it will be called on the audio stream thread. The
            stream will be stopped immediately.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="errorMessage">error message</param>
        </member>
        <member name="T:CefSharp.IExtension">
            <summary>
            Object representing an extension. Methods may be called on any thread unless otherwise indicated.
            </summary>
        </member>
        <member name="P:CefSharp.IExtension.Identifier">
            <summary>
            Returns the unique extension identifier. This is calculated based on the
            extension public key, if available, or on the extension path. See
            https://developer.chrome.com/extensions/manifest/key for details.
            </summary>
        </member>
        <member name="P:CefSharp.IExtension.Path">
            <summary>
            Returns the absolute path to the extension directory on disk. This value
            will be prefixed with PK_DIR_RESOURCES if a relative path was passed to
            IRequestContext.LoadExtension.
            </summary>
        </member>
        <member name="P:CefSharp.IExtension.Manifest">
            <summary>
            Returns the extension manifest contents as a CefDictionaryValue object. See
            https://developer.chrome.com/extensions/manifest for details.
            </summary>
        </member>
        <member name="M:CefSharp.IExtension.IsSame(CefSharp.IExtension)">
            <summary>
            Returns true if this object is the same extension as that object.
            Extensions are considered the same if identifier, path and loader context
            match.
            </summary>
            <param name="that">extension to compare</param>
            <returns>return true if the same extension</returns>
        </member>
        <member name="P:CefSharp.IExtension.LoaderContext">
            <summary>
            Returns the request context that loaded this extension. Will return NULL
            for internal extensions or if the extension has been unloaded. See the
            CefRequestContext::LoadExtension documentation for more information about
            loader contexts. Must be called on the CEF UI thread.
            </summary>
        </member>
        <member name="P:CefSharp.IExtension.IsLoaded">
            <summary>
            Returns true if this extension is currently loaded. Must be called on the
            CEF UI thread.
            </summary>
        </member>
        <member name="M:CefSharp.IExtension.Unload">
            <summary>
            Unload this extension if it is not an internal extension and is currently
            loaded. Will result in a call to IExtensionHandler.OnExtensionUnloaded
            on success.
            </summary>
        </member>
        <member name="T:CefSharp.IResourceRequestHandlerFactory">
            <summary>
            Class that creates <see cref="T:CefSharp.IResourceHandler"/> instances for handling custom requests.
            The methods of this class will always be called on the CEF IO thread. This interface
            maps to the  CefRequestHandler::GetResourceHandler method. It was split out to allow for
            the <see cref="T:CefSharp.ResourceRequestHandlerFactory"/> implementation that provides support
            for the LoadHtml extension method.
            </summary>
        </member>
        <member name="P:CefSharp.IResourceRequestHandlerFactory.HasHandlers">
            <summary>
            Are there any <see cref="T:CefSharp.ResourceHandler"/>'s registered?
            </summary>
        </member>
        <member name="M:CefSharp.IResourceRequestHandlerFactory.GetResourceRequestHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean,System.String,System.Boolean@)">
            <summary>
            Called on the CEF IO thread before a resource request is initiated.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">represent the source browser of the request</param>
            <param name="frame">represent the source frame of the request</param>
            <param name="request">represents the request contents and cannot be modified in this callback</param>
            <param name="isNavigation">will be true if the resource request is a navigation</param>
            <param name="isDownload">will be true if the resource request is a download</param>
            <param name="requestInitiator">is the origin (scheme + domain) of the page that initiated the request</param>
            <param name="disableDefaultHandling">to true to disable default handling of the request, in which case it will need to be handled via <see cref="M:CefSharp.IResourceRequestHandler.GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)"/> or it will be canceled</param>
            <returns>To allow the resource load to proceed with default handling return null. To specify a handler for the resource return a <see cref="T:CefSharp.IResourceRequestHandler"/> object. If this callback returns null the same method will be called on the associated <see cref="T:CefSharp.IRequestContextHandler"/>, if any</returns>
        </member>
        <member name="T:CefSharp.ISchemeRegistrar">
            <summary>
            Manages custom scheme registrations.
            </summary>
        </member>
        <member name="M:CefSharp.ISchemeRegistrar.AddCustomScheme(System.String,CefSharp.Enums.SchemeOptions)">
             <summary>
             Register a custom scheme. This method should not be called for the built-in
             HTTP, HTTPS, FILE, FTP, ABOUT and DATA schemes.
            
             See <see cref="T:CefSharp.Enums.SchemeOptions"/> for possible values for <paramref name="schemeOptions"/>
            
             This function may be called on any thread. It should only be called once
             per unique <paramref name="schemeName"/> value. 
             </summary>
             <param name="schemeName">scheme name</param>
             <param name="schemeOptions">scheme options</param>
             <returns>If <paramref name="schemeName"/> is already registered or if an error occurs this method will return false.</returns>
        </member>
        <member name="T:CefSharp.IValue">
            <summary>
            Interface representing CefValue.
            </summary>
        </member>
        <member name="P:CefSharp.IValue.Type">
            <summary>
            Returns the underlying value type.
            </summary>
            <returns>
            Returns the underlying value type.
            </returns>
        </member>
        <member name="M:CefSharp.IValue.GetBool">
            <summary>
            Returns the underlying value as type bool.
            </summary>
            <returns>
            Returns the underlying value as type bool.
            </returns>
        </member>
        <member name="M:CefSharp.IValue.GetDouble">
            <summary>
            Returns the underlying value as type double.
            </summary>
            <returns>
            Returns the underlying value as type double.
            </returns>
        </member>
        <member name="M:CefSharp.IValue.GetInt">
            <summary>
            Returns the underlying value as type int.
            </summary>
            <returns>
            Returns the underlying value as type int.
            </returns>
        </member>
        <member name="M:CefSharp.IValue.GetString">
            <summary>
            Returns the underlying value as type string.
            </summary>
            <returns>
            Returns the underlying value as type string.
            </returns>
        </member>
        <member name="M:CefSharp.IValue.GetDictionary">
            <summary>
            Returns the underlying value as type dictionary.
            </summary>
            <returns>
            Returns the underlying value as type dictionary.
            </returns>
        </member>
        <member name="M:CefSharp.IValue.GetList">
            <summary>
            Returns the underlying value as type list.
            </summary>
            <returns>
            Returns the underlying value as type list.
            </returns>
        </member>
        <member name="M:CefSharp.IValue.GetObject">
            <summary>
            Returns the underlying value converted to a managed object.
            </summary>
            <returns>
            Returns the underlying value converted to a managed object.
            </returns>
        </member>
        <member name="T:CefSharp.IImage">
            <summary>
            Container for a single image represented at different scale factors.
            All image representations should be the same size in density independent pixel (DIP) units.
            For example, if the image at scale factor 1.0 is 100x100 pixels then the image at scale factor 2.0 should be 200x200 pixels -- both images will display with a DIP size of 100x100 units.
            The methods of this class must be called on the browser process UI thread. 
            </summary>
        </member>
        <member name="M:CefSharp.IImage.GetAsBitmap(System.Single,CefSharp.Enums.ColorType,CefSharp.Enums.AlphaType,System.Int32@,System.Int32@)">
            <summary>
            Returns the bitmap representation that most closely matches scaleFactor.
            </summary>
            <param name="scaleFactor">scale factor</param>
            <param name="colorType">color type</param>
            <param name="alphaType">alpha type</param>
            <param name="pixelWidth">pixel width</param>
            <param name="pixelHeight">pixel height</param>
            <returns>A stream represending the bitmap or null.</returns>
        </member>
        <member name="M:CefSharp.IImage.GetAsJPEG(System.Single,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Returns the JPEG representation that most closely matches scaleFactor.
            </summary>
            <param name="scaleFactor">scale factor</param>
            <param name="quality">image quality</param>
            <param name="pixelWidth">pixel width</param>
            <param name="pixelHeight">pixel height</param>
            <returns>A stream representing the JPEG or null.</returns>
        </member>
        <member name="M:CefSharp.IImage.GetAsPNG(System.Single,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Returns the PNG representation that most closely matches scaleFactor.
            </summary>
            <param name="scaleFactor">scale factor</param>
            <param name="withTransparency">is the PNG transparent</param>
            <param name="pixelWidth">pixel width</param>
            <param name="pixelHeight">pixel height</param>
            <returns>A stream represending the PNG or null.</returns>
        </member>
        <member name="M:CefSharp.IImage.GetRepresentationInfo(System.Single,System.Single@,System.Int32@,System.Int32@)">
            <summary>
            Returns information for the representation that most closely matches scaleFactor.
            </summary>
            <param name="scaleFactor">scale factor</param>
            <param name="actualScaleFactor">actual scale factor</param>
            <param name="pixelWidth">pixel width</param>
            <param name="pixelHeight">pixel height</param>
            <returns>return if information found for scale factor</returns>
        </member>
        <member name="P:CefSharp.IImage.Height">
            <summary>
            Returns the image height in density independent pixel(DIP) units.
            </summary>
        </member>
        <member name="M:CefSharp.IImage.HasRepresentation(System.Single)">
            <summary>
            Returns true if this image contains a representation for scaleFactor.
            </summary>
            <param name="scaleFactor"></param>
            <returns></returns>
        </member>
        <member name="P:CefSharp.IImage.IsEmpty">
            <summary>
            Returns true if this Image is empty.
            </summary>
        </member>
        <member name="M:CefSharp.IImage.IsSame(CefSharp.IImage)">
            <summary>
            Returns true if this Image and that Image share the same underlying storage.
            </summary>
            <param name="that">image to compare</param>
            <returns>returns true if share same underlying storage</returns>
        </member>
        <member name="M:CefSharp.IImage.RemoveRepresentation(System.Single)">
            <summary>
            Removes the representation for scaleFactor.
            </summary>
            <param name="scaleFactor"></param>
            <returns>true for success</returns>
        </member>
        <member name="P:CefSharp.IImage.Width">
            <summary>
            Returns the image width in density independent pixel(DIP) units.
            </summary>
        </member>
        <member name="T:CefSharp.IJavascriptObjectRepository">
            <summary>
            Javascript object repository, object are registered for binding
            One repository per ChromiumWebBrowser instance
            </summary>
        </member>
        <member name="P:CefSharp.IJavascriptObjectRepository.Settings">
            <summary>
            Javascript Binding Settings
            </summary>
        </member>
        <member name="P:CefSharp.IJavascriptObjectRepository.NameConverter">
            <summary>
            Converted .Net method/property/field names to the name that
            will be used in Javasript. Used for when .Net naming conventions
            differ from Javascript naming conventions.
            </summary>
        </member>
        <member name="M:CefSharp.IJavascriptObjectRepository.Register(System.String,System.Object,System.Boolean,CefSharp.BindingOptions)">
            <param name="options">binding options, by default method/property names are camelCased, you can control this
            and other advanced options though this class.</param>
        </member>
        <member name="M:CefSharp.IJavascriptObjectRepository.UnRegisterAll">
            <summary>
            UnRegister all the currently bound objects from the repository. If you unregister an object that is currently
            bound in JavaScript then the method/property calls will fail.
            </summary>
        </member>
        <member name="M:CefSharp.IJavascriptObjectRepository.UnRegister(System.String)">
            <summary>
            UnRegister a bound object from the repository. If you unregister an object that is currently
            bound in JavaScript then the method/property calls will fail.
            </summary>
            <param name="name">object name</param>
            <returns>returns true if the object was successfully unbound otherwise false.</returns>
        </member>
        <member name="P:CefSharp.IJavascriptObjectRepository.HasBoundObjects">
            <summary>
            Has bound objects
            </summary>
        </member>
        <member name="M:CefSharp.IJavascriptObjectRepository.IsBound(System.String)">
            <summary>
            Is object bound
            </summary>
            <param name="name">name</param>
            <returns>true if object with matching name bound</returns>
        </member>
        <member name="E:CefSharp.IJavascriptObjectRepository.ResolveObject">
            <summary>
            Event handler is called when an object with a given name is requested for binding and is not yet
            registered with the repository. Use <see cref="P:CefSharp.Event.JavascriptBindingEventArgs.ObjectRepository"/>
            to register objects (using 
            </summary>
        </member>
        <member name="E:CefSharp.IJavascriptObjectRepository.ObjectBoundInJavascript">
            <summary>
            Event handler is triggered when a object has been successfully bound in javascript
            </summary>
        </member>
        <member name="E:CefSharp.IJavascriptObjectRepository.ObjectsBoundInJavascript">
            <summary>
            Event handler is triggered when multiple objects has been successfully bound in javascript, this event only
            contains the names of objects successfully bound.
            </summary>
        </member>
        <member name="T:CefSharp.ByteArrayResourceHandler">
            <summary>
            ByteArrayResourceHandler is used as a placeholder class which uses native CEF implementations.
            CefStreamReader::CreateForData(); reads the byte array that is passed to a new instance
            of CefStreamResourceHandler 
            TODO: Move this class into Handler namespace 
            </summary>
        </member>
        <member name="P:CefSharp.ByteArrayResourceHandler.Data">
            <summary>
            Underlying byte array that represents the data
            </summary>
        </member>
        <member name="P:CefSharp.ByteArrayResourceHandler.MimeType">
            <summary>
            Gets or sets the Mime Type.
            </summary>
        </member>
        <member name="M:CefSharp.ByteArrayResourceHandler.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.ByteArrayResourceHandler"/> class.
            </summary>
            <param name="mimeType">mimeType</param>
            <param name="data">byte array</param>
        </member>
        <member name="T:CefSharp.FileResourceHandler">
            <summary>
            FileResourceHandler  is used as a placeholder class which uses native CEF implementations.
            CefStreamReader::CreateForFile is used to create a CefStreamReader instance which is passed to
            a new instance of CefStreamResourceHandler
            (Was previously ResourceHandlerType::File to differentiate, going for a more flexible approach now)
            TODO: Move this class into Handler namespace 
            </summary>
        </member>
        <member name="P:CefSharp.FileResourceHandler.FilePath">
            <summary>
            Path of the underlying file
            </summary>
        </member>
        <member name="P:CefSharp.FileResourceHandler.MimeType">
            <summary>
            Gets or sets the Mime Type.
            </summary>
        </member>
        <member name="M:CefSharp.FileResourceHandler.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.FileResourceHandler"/> class.
            </summary>
            <param name="mimeType">mimeType</param>
            <param name="filePath">filePath</param>
        </member>
        <member name="T:CefSharp.RenderProcess.IRenderProcessHandler">
            <summary>
            Class used to implement render process callbacks.
            The methods of this class will be called on the render process main thread (TID_RENDERER) unless otherwise indicated.
            </summary>
        </member>
        <member name="M:CefSharp.RenderProcess.IRenderProcessHandler.OnContextCreated(CefSharp.IBrowser,CefSharp.IFrame,CefSharp.RenderProcess.IV8Context)">
            <summary>
            Called immediately after the V8 context for a frame has been created.
            V8 handles can only be accessed from the thread on which they are created.
            </summary>
            <param name="browser">the browser</param>
            <param name="frame">the frame</param>
            <param name="context">the V8Context</param>
        </member>
        <member name="M:CefSharp.RenderProcess.IRenderProcessHandler.OnContextReleased(CefSharp.IBrowser,CefSharp.IFrame,CefSharp.RenderProcess.IV8Context)">
            <summary>
            Called immediately before the V8 context for a frame is released.
            No references to the context should be kept after this method is called.
            </summary>
            <param name="browser">the browser</param>
            <param name="frame">the frame</param>
            <param name="context">the V8Context</param>
        </member>
        <member name="M:CefSharp.RenderProcess.IRenderProcessHandler.OnWebKitInitialized">
            <summary>
            Called after WebKit has been initialized.
            </summary>
        </member>
        <member name="M:CefSharp.RenderProcess.IV8Context.Execute(System.String,System.String,System.Int32,CefSharp.RenderProcess.V8Exception@)">
            <summary>
            Execute a string of JavaScript code in this V8 context.
            </summary>
            <param name="code">JavaScript code to execute</param>
            <param name="scriptUrl">Is the URL where the script in question can be found, if any</param>
            <param name="startLine">Is the base line number to use for error reporting.</param>
            <param name="exception">Is the exception if any.</param>
            <returns>On success the function will return true. On failure <paramref name="exception"/> will be set to the exception, if any, and the function will return false.</returns>
        </member>
        <member name="T:CefSharp.RenderProcess.V8Exception">
            <summary>
            Class representing a V8 exception.
            </summary>
        </member>
        <member name="P:CefSharp.RenderProcess.V8Exception.EndColumn">
            <summary>
            Returns the index within the line of the last character where the error occurred.
            </summary>
            <returns>Returns the index within the line of the last character where the error occurred.</returns>
        </member>
        <member name="P:CefSharp.RenderProcess.V8Exception.EndPosition">
            <summary>
            Returns the index within the script of the last character where the error occurred.
            </summary>
            <returns>Returns the index within the script of the last character where the error occurred.</returns>
        </member>
        <member name="P:CefSharp.RenderProcess.V8Exception.LineNumber">
            <summary>
            Returns the 1-based number of the line where the error occurred or 0 if the line number is unknown.
            </summary>
            <returns>Returns the 1-based number of the line where the error occurred or 0 if the line number is unknown.</returns>
        </member>
        <member name="P:CefSharp.RenderProcess.V8Exception.Message">
            <summary>
            Returns the exception message.
            </summary>
            <returns>Returns the exception message.</returns>
        </member>
        <member name="P:CefSharp.RenderProcess.V8Exception.ScriptResourceName">
            <summary>
            Returns the resource name for the script from where the function causing the error originates.
            </summary>
            <returns>Returns the resource name for the script from where the function causing the error originates.</returns>
        </member>
        <member name="P:CefSharp.RenderProcess.V8Exception.SourceLine">
            <summary>
            Returns the line of source code that the exception occurred within.
            </summary>
            <returns>Returns the line of source code that the exception occurred within.</returns>
        </member>
        <member name="P:CefSharp.RenderProcess.V8Exception.StartColumn">
            <summary>
            Returns the index within the line of the first character where the error occurred.
            </summary>
            <returns>Returns the index within the line of the first character where the error occurred.</returns>
        </member>
        <member name="P:CefSharp.RenderProcess.V8Exception.StartPosition">
            <summary>
            Returns the index within the script of the first character where the error occurred.
            </summary>
            <returns>Returns the index within the script of the first character where the error occurred.</returns>
        </member>
        <member name="T:CefSharp.RequestContextExtensions">
            <summary>
            RequestContext extensions.
            </summary>
        </member>
        <member name="F:CefSharp.RequestContextExtensions.ProxySchemes">
            <summary>
            Array of valid proxy schemes
            </summary>
        </member>
        <member name="M:CefSharp.RequestContextExtensions.LoadExtensionFromDirectory(CefSharp.IRequestContext,System.String,CefSharp.IExtensionHandler)">
            <summary>
            Load an extension from the given directory. To load a crx file you must unzip it first.
            For further details see <seealso cref="M:CefSharp.IRequestContext.LoadExtension(System.String,System.String,CefSharp.IExtensionHandler)"/>
            </summary>
            <param name="requestContext">request context</param>
            <param name="rootDirectory">absolute path to the directory that contains the extension to be loaded.</param>
            <param name="handler">handle events related to browser extensions</param>
        </member>
        <member name="M:CefSharp.RequestContextExtensions.LoadExtensionsFromDirectory(CefSharp.IRequestContext,System.String,CefSharp.IExtensionHandler)">
            <summary>
            Load extension(s) from the given directory. This methods obtains all the sub directories of <paramref name="rootDirectory"/>
            and calls <see cref="M:CefSharp.IRequestContext.LoadExtension(System.String,System.String,CefSharp.IExtensionHandler)"/> if manifest.json
            is found in the sub folder. To load crx file(s) you must unzip them first.
            For further details see <seealso cref="M:CefSharp.IRequestContext.LoadExtension(System.String,System.String,CefSharp.IExtensionHandler)"/>
            </summary>
            <param name="requestContext">request context</param>
            <param name="rootDirectory">absolute path to the directory that contains the extension(s) to be loaded.</param>
            <param name="handler">handle events related to browser extensions</param>
        </member>
        <member name="M:CefSharp.RequestContextExtensions.SetPreferenceAsync(CefSharp.IRequestContext,System.String,System.Object)">
            <summary>
            Set the value associated with preference name. If value is null the
            preference will be restored to its default value. If setting the preference
            fails then error will be populated with a detailed description of the
            problem. This method must be called on the CEF UI thread.
            Preferences set via the command-line usually cannot be modified.
            </summary>
            <param name="name">preference key</param>
            <param name="value">preference value</param>
            <param name="error">out error</param>
            <returns>Returns true if the value is set successfully and false otherwise.</returns>
            <remarks>Use Cef.UIThreadTaskFactory to execute this method if required,
            <see cref="M:CefSharp.IBrowserProcessHandler.OnContextInitialized"/> and ChromiumWebBrowser.IsBrowserInitializedChanged are both
            executed on the CEF UI thread, so can be called directly.
            When CefSettings.MultiThreadedMessageLoop == false (the default is true) then the main
            application thread will be the CEF UI thread.</remarks>
        </member>
        <member name="M:CefSharp.RequestContextExtensions.SetProxy(CefSharp.IRequestContext,System.String,System.String,System.Nullable{System.Int32},System.String@)">
            <summary>
            Sets the proxy server for the specified <see cref="T:CefSharp.IRequestContext"/>
            MUST be called on the CEF UI Thread
            </summary>
            <param name="requestContext">request context</param>
            <param name="scheme">is the protocol of the proxy server, and is one of: 'http', 'socks', 'socks4', 'socks5'. Also note that 'socks' is equivalent to 'socks5'.</param>
            <param name="host">proxy host</param>
            <param name="port">proxy port</param>
            <param name="errorMessage">error message</param>
            <returns>returns true if successfull, false otherwise.</returns>
            <remarks>Internally calls <seealso cref="M:CefSharp.IRequestContext.SetPreference(System.String,System.Object,System.String@)"/> with
            preference 'proxy' and mode of 'fixed_servers'</remarks>
        </member>
        <member name="M:CefSharp.RequestContextExtensions.SetProxy(CefSharp.IRequestContext,System.String,System.Nullable{System.Int32},System.String@)">
            <summary>
            Sets the proxy server for the specified <see cref="T:CefSharp.IRequestContext"/>.
            Protocol for the proxy server is http
            MUST be called on the CEF UI Thread
            </summary>
            <param name="requestContext">request context</param>
            <param name="host">proxy host</param>
            <param name="port">proxy port</param>
            <param name="errorMessage">error message</param>
            <returns>returns true if successfull, false otherwise.</returns>
            <remarks>Internally calls <seealso cref="M:CefSharp.IRequestContext.SetPreference(System.String,System.Object,System.String@)"/> with
            preference 'proxy' and mode of 'fixed_servers'</remarks>
        </member>
        <member name="M:CefSharp.RequestContextExtensions.SetProxy(CefSharp.IRequestContext,System.String,System.String@)">
            <summary>
            Sets the proxy server for the specified <see cref="T:CefSharp.IRequestContext"/>.
            Protocol for the proxy server is http
            MUST be called on the CEF UI Thread
            </summary>
            <param name="requestContext">request context</param>
            <param name="host">proxy host</param>
            <param name="errorMessage">error message</param>
            <returns>returns true if successfull, false otherwise.</returns>
            <remarks>Internally calls <seealso cref="M:CefSharp.IRequestContext.SetPreference(System.String,System.Object,System.String@)"/> with
            preference 'proxy' and mode of 'fixed_servers'</remarks>
        </member>
        <member name="M:CefSharp.RequestContextExtensions.GetProxyDictionary(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a Dictionary that can be used with <see cref="M:CefSharp.IRequestContext.SetPreference(System.String,System.Object,System.String@)"/>
            </summary>
            <param name="scheme">is the protocol of the proxy server, and is one of: 'http', 'socks', 'socks4', 'socks5'. Also note that 'socks' is equivalent to 'socks5'.</param>
            <param name="host">proxy host</param>
            <param name="port">proxy port</param>
            <returns></returns>
        </member>
        <member name="M:CefSharp.RequestContextExtensions.ClearHttpAuthCredentialsAsync(CefSharp.IRequestContext)">
            <summary>
            Clears all HTTP authentication credentials that were added as part of handling
            <see cref="M:CefSharp.IRequestHandler.GetAuthCredentials(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Boolean,System.String,System.Int32,System.String,System.String,CefSharp.IAuthCallback)"/>.
            </summary>
            <param name="requestContext">request context</param>
            <returns>A task that represents the ClearHttpAuthCredentials operation.
            Result indicates if the credentials cleared successfully.</returns>
        </member>
        <member name="T:CefSharp.ResponseFilter.StreamResponseFilter">
            <summary>
            StreamResponseFilter - copies all data from IResponseFilter.Filter
            to the provided Stream. The <see cref="T:System.IO.Stream"/> must be writable, no data will be copied otherwise.
            The StreamResponseFilter will release it's reference (set to null) to the <see cref="T:System.IO.Stream"/> when it's Disposed.
            </summary>
        </member>
        <member name="M:CefSharp.ResponseFilter.StreamResponseFilter.#ctor(System.IO.Stream)">
            <summary>
            StreamResponseFilter constructor
            </summary>
            <param name="stream">a writable stream</param>
        </member>
        <member name="T:CefSharp.Structs.AudioParameters">
            <summary>
            Structure representing the audio parameters for setting up the audio handler.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.AudioParameters.ChannelLayout">
            <summary>
            Layout of the audio channels
            </summary>
        </member>
        <member name="P:CefSharp.Structs.AudioParameters.SampleRate">
            <summary>
            Sample rate
            </summary>
        </member>
        <member name="P:CefSharp.Structs.AudioParameters.FramesPerBuffer">
            <summary>
            Number of frames per buffer
            </summary>
        </member>
        <member name="M:CefSharp.Structs.AudioParameters.#ctor(CefSharp.Enums.ChannelLayout,System.Int32,System.Int32)">
            <summary>
            Init with default values
            </summary>
            <param name="channelLayout">channel layout</param>
            <param name="sampleRate">sample rate</param>
            <param name="framesPerBuffer">frames per buffer</param>
        </member>
        <member name="T:CefSharp.Structs.TouchEvent">
            <summary>
            Touch Event
            </summary>
        </member>
        <member name="P:CefSharp.Structs.TouchEvent.Id">
            <summary>
            Id of a touch point. Must be unique per touch, can be any number except -1.
            Note that a maximum of 16 concurrent touches will be tracked; touches
            beyond that will be ignored.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.TouchEvent.X">
            <summary>
            X coordinate relative to the left side of the view.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.TouchEvent.Y">
            <summary>
            Y coordinate relative to the top side of the view.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.TouchEvent.RadiusX">
            <summary>
            X radius in pixels. Set to 0 if not applicable.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.TouchEvent.RadiusY">
            <summary>
            Y radius in pixels. Set to 0 if not applicable.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.TouchEvent.RotationAngle">
            <summary>
            Rotation angle in radians. Set to 0 if not applicable.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.TouchEvent.PointerType">
            <summary>
            The device type that caused the event.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.TouchEvent.Pressure">
            <summary>
            The normalized pressure of the pointer input in the range of [0,1].
            Set to 0 if not applicable.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.TouchEvent.Type">
            <summary>
            The state of the touch point. Touches begin with one <see cref="F:CefSharp.Enums.TouchEventType.Pressed"/> event
            followed by zero or more <see cref="F:CefSharp.Enums.TouchEventType.Moved"/> events and finally one
            <see cref="F:CefSharp.Enums.TouchEventType.Released"/> or <see cref="F:CefSharp.Enums.TouchEventType.Cancelled"/> event.
            Events not respecting this order will be ignored.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.TouchEvent.Modifiers">
            <summary>
             Bit flags describing any pressed modifier keys.
            </summary>
        </member>
        <member name="T:CefSharp.Structs.CompositionUnderline">
            <summary>
            Represents an IME composition underline.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.CompositionUnderline.Range">
            <summary>
            Underline character range.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.CompositionUnderline.Color">
            <summary>
            Text color. 32-bit ARGB color value, not premultiplied. The color components are always
            in a known order. Equivalent to the SkColor type.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.CompositionUnderline.BackgroundColor">
            <summary>
            Background color. 32-bit ARGB color value, not premultiplied. The color components are always
            in a known order. Equivalent to the SkColor type.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.CompositionUnderline.Thick">
            <summary>
            true for thickunderline
            </summary>
        </member>
        <member name="P:CefSharp.Structs.CompositionUnderline.Style">
            <summary>
            Style
            </summary>
        </member>
        <member name="M:CefSharp.Structs.CompositionUnderline.#ctor(CefSharp.Structs.Range,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="range">Underline character range.</param>
            <param name="color">Text color. 32-bit ARGB color value, not premultiplied. The color components are always in a known order.
            Equivalent to the SkColor type.</param>
            <param name="backGroundColor">Background color. 32-bit ARGB color value, not premultiplied. The color components are always in
            a known order. Equivalent to the SkColor type.</param>
            <param name="thick">True for thickunderline.</param>
        </member>
        <member name="M:CefSharp.Structs.CompositionUnderline.#ctor(CefSharp.Structs.Range,System.UInt32,System.UInt32,System.Boolean,CefSharp.Enums.CompositionUnderlineStyle)">
            <summary>
            Constructor.
            </summary>
            <param name="range">Underline character range.</param>
            <param name="color">Text color. 32-bit ARGB color value, not premultiplied. The color components are always in a known order.
            Equivalent to the SkColor type.</param>
            <param name="backGroundColor">Background color. 32-bit ARGB color value, not premultiplied. The color components are always in
            a known order. Equivalent to the SkColor type.</param>
            <param name="thick">True for thickunderline.</param>
            <param name="style">Style</param>
        </member>
        <member name="T:CefSharp.Structs.CursorInfo">
            <summary>
            Struct representing cursor information.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.CursorInfo.Buffer">
            <summary>
            Cursor buffer
            </summary>
        </member>
        <member name="P:CefSharp.Structs.CursorInfo.Hotspot">
            <summary>
            Hotspot
            </summary>
        </member>
        <member name="P:CefSharp.Structs.CursorInfo.ImageScaleFactor">
            <summary>
            Image scale factor
            </summary>
        </member>
        <member name="P:CefSharp.Structs.CursorInfo.Size">
            <summary>
            Size
            </summary>
        </member>
        <member name="M:CefSharp.Structs.CursorInfo.#ctor(System.IntPtr,CefSharp.Structs.Point,System.Single,CefSharp.Structs.Size)">
            <summary>
            CursorInfo
            </summary>
            <param name="buffer">buffer</param>
            <param name="hotspot">hotspot</param>
            <param name="imageScaleFactor">image scale factor</param>
            <param name="size">size</param>
        </member>
        <member name="T:CefSharp.Structs.Point">
            <summary>
            Class representing a point.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.Point.X">
            <summary>
            X coordinate
            </summary>
        </member>
        <member name="P:CefSharp.Structs.Point.Y">
            <summary>
            Y coordinate
            </summary>
        </member>
        <member name="M:CefSharp.Structs.Point.#ctor(System.Int32,System.Int32)">
            <summary>
            Point
            </summary>
            <param name="x">x coordinate</param>
            <param name="y">y coordinate</param>
        </member>
        <member name="T:CefSharp.Structs.Size">
            <summary>
            Structure representing a size. 
            </summary>
        </member>
        <member name="P:CefSharp.Structs.Size.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:CefSharp.Structs.Size.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="M:CefSharp.Structs.Size.#ctor(System.Int32,System.Int32)">
            <summary>
            Size
            </summary>
            <param name="width">width</param>
            <param name="height">height</param>
        </member>
        <member name="T:CefSharp.Structs.Range">
            <summary>
            Represents a range
            </summary>
        </member>
        <member name="P:CefSharp.Structs.Range.From">
            <summary>
            From
            </summary>
        </member>
        <member name="P:CefSharp.Structs.Range.To">
            <summary>
            To
            </summary>
        </member>
        <member name="M:CefSharp.Structs.Range.#ctor(System.Int32,System.Int32)">
            <summary>
            Range
            </summary>
            <param name="from">from</param>
            <param name="to">to</param>
        </member>
        <member name="T:CefSharp.Structs.Rect">
            <summary>
            Represents a rectangle
            </summary>
        </member>
        <member name="P:CefSharp.Structs.Rect.X">
            <summary>
            X coordinate
            </summary>
        </member>
        <member name="P:CefSharp.Structs.Rect.Y">
            <summary>
            Y coordinate
            </summary>
        </member>
        <member name="P:CefSharp.Structs.Rect.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:CefSharp.Structs.Rect.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="M:CefSharp.Structs.Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Rect
            </summary>
            <param name="x">x coordinate</param>
            <param name="y">y coordinate</param>
            <param name="width">width</param>
            <param name="height">height</param>
        </member>
        <member name="M:CefSharp.Structs.Rect.ScaleByDpi(System.Single)">
            <summary>
            Returns a new Rect with Scaled values
            </summary>
            <param name="dpi">Dpi to scale by</param>
            <returns>New rect with scaled values</returns>
        </member>
        <member name="T:CefSharp.Structs.ScreenInfo">
            <summary>
            Class representing the virtual screen information for use when window
            rendering is disabled.
            </summary>
            <remarks>
            See also <a href="https://cs.chromium.org/chromium/src/content/public/common/screen_info.h?q=content::ScreenInfo&amp;sq=package:chromium&amp;g=0&amp;l=19">Chrome Source</a>
            </remarks>
        </member>
        <member name="P:CefSharp.Structs.ScreenInfo.DeviceScaleFactor">
            <summary>
            Device scale factor. Specifies the ratio between physical and logical pixels.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.ScreenInfo.Depth">
            <summary>
            The screen depth in bits per pixel.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.ScreenInfo.DepthPerComponent">
            <summary>
            The bits per color component. This assumes that the colors are balanced equally.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.ScreenInfo.IsMonochrome">
            <summary>
            This can be true for black and white printers.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.ScreenInfo.Rect">
            <summary>
            This is set from the rcMonitor member of MONITORINFOEX, to whit:
            "A RECT structure that specifies the display monitor rectangle,
            expressed in virtual-screen coordinates. Note that if the monitor
            is not the primary display monitor, some of the rectangle's
            coordinates may be negative values."
            The Rect and AvailableRect properties are used to determine the
            available surface for rendering popup views.
            </summary>
        </member>
        <member name="P:CefSharp.Structs.ScreenInfo.AvailableRect">
             <summary>
             This is set from the rcWork member of MONITORINFOEX, to whit:
             "A RECT structure that specifies the work area rectangle of the
             display monitor that can be used by applications, expressed in
             virtual-screen coordinates. Windows uses this rectangle to
             maximize an application on the monitor. The rest of the area in
             rcMonitor contains system windows such as the task bar and side
             bars. Note that if the monitor is not the primary display monitor,
             some of the rectangle's coordinates may be negative values".
            
             The Rect and AvailableRect properties are used to determine the
             available surface for rendering popup views.
             </summary>
        </member>
        <member name="T:CefSharp.CefLibraryHandle">
            <summary>
            CefLibraryHandle is a SafeHandle that Loads libcef.dll and relesases it when disposed/finalized
            Calls LoadLibraryEx with LoadLibraryFlags.LOAD_WITH_ALTERED_SEARCH_PATH
            Make sure to set settings.BrowserSubprocessPath and settings.LocalesDirPath
            </summary>
            <remarks>Adapted from http://www.pinvoke.net/default.aspx/kernel32.loadlibraryex</remarks>
        </member>
        <member name="T:CefSharp.CefLibraryHandle.LoadLibraryFlags">
            <summary>
            In general not a fan of having inline classes/enums
            In this case it's not something that I'd like to see exposed
            as it's just a helper and outside the scope of the project
            </summary>
        </member>
        <member name="M:CefSharp.CefLibraryHandle.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="path">libcef.dll full path.</param>
        </member>
        <member name="P:CefSharp.CefLibraryHandle.IsInvalid">
            <summary>
            When overridden in a derived class, gets a value indicating whether the handle value is invalid.
            </summary>
            <value>
            true if the handle value is invalid; otherwise, false.
            </value>
        </member>
        <member name="M:CefSharp.CefLibraryHandle.ReleaseHandle">
            <summary>
            When overridden in a derived class, executes the code required to free the handle.
            </summary>
            <returns>
            true if the handle is released successfully; otherwise, in the event of a catastrophic failure, false. In this case, it
            generates a releaseHandleFailed MDA Managed Debugging Assistant.
            </returns>
        </member>
        <member name="T:CefSharp.JavascriptException">
            <summary>
            Javascript exception
            </summary>
        </member>
        <member name="P:CefSharp.JavascriptException.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:CefSharp.JavascriptException.StackTrace">
            <summary>
            Stack trace in javascript frames
            </summary>
        </member>
        <member name="T:CefSharp.JavascriptBindingExtensions">
            <summary>
            Javascript binding extension methods
            </summary>
        </member>
        <member name="M:CefSharp.JavascriptBindingExtensions.EnsureObjectBoundAsync(CefSharp.IWebBrowser,System.String[])">
            <summary>
            Make sure an object is bound in javascript. Executes against the main frame
            </summary>
            <param name="browser">browser</param>
            <param name="names">object names</param>
            <returns>List of objects that were bound</returns>
        </member>
        <member name="T:CefSharp.JavascriptStackFrame">
            <summary>
            A Javascript(V8) stack frame
            </summary>
            TODO: Refactor to pass params in throw constructor and make properties readonly
        </member>
        <member name="P:CefSharp.JavascriptStackFrame.FunctionName">
            <summary>
            Gets or sets the name of the function.
            </summary>
            <value>
            The name of the function.
            </value>
        </member>
        <member name="P:CefSharp.JavascriptStackFrame.LineNumber">
            <summary>
            Gets or sets the line number.
            </summary>
            <value>
            The line number.
            </value>
        </member>
        <member name="P:CefSharp.JavascriptStackFrame.ColumnNumber">
            <summary>
            Gets or sets the column number.
            </summary>
            <value>
            The column number.
            </value>
        </member>
        <member name="P:CefSharp.JavascriptStackFrame.SourceName">
            <summary>
            Gets or sets the name of the source.
            </summary>
            <value>
            The name of the source.
            </value>
        </member>
        <member name="T:CefSharp.DomNode">
            <summary>
            Represents a node in the browser's DOM.
            </summary>
        </member>
        <member name="M:CefSharp.DomNode.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="tagName">Name of the tag.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:CefSharp.DomNode.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="P:CefSharp.DomNode.Item(System.String)">
            <summary>
            Get the value of an attribute.
            </summary>
            <param name="name">The name of the attribute value to get.</param>
            <returns>
            The attribute value if the name exists in the DomNode's attributes. Null if the name does not exist.
            </returns>
        </member>
        <member name="P:CefSharp.DomNode.TagName">
            <summary>
            The name of the HTML element.
            </summary>
            <value>
            The name of the tag.
            </value>
        </member>
        <member name="P:CefSharp.DomNode.AttributeNames">
            <summary>
            Get a read only list of the attribute names.
            </summary>
            <value>
            A list of names of the attributes.
            </value>
        </member>
        <member name="M:CefSharp.DomNode.HasAttribute(System.String)">
            <summary>
            Determine if the DomNode has the requested attribute.
            </summary>
            <param name="attributeName">The name of the attribute value.</param>
            <returns>
            True if the attribute exists in the DomNode, false if it does not.
            </returns>
        </member>
        <member name="M:CefSharp.DomNode.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>
            The enumerator.
            </returns>
        </member>
        <member name="T:CefSharp.DraggableRegion">
            <summary>
            Representing a draggable region.
            </summary>
        </member>
        <member name="P:CefSharp.DraggableRegion.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:CefSharp.DraggableRegion.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:CefSharp.DraggableRegion.X">
            <summary>
            X coordinate
            </summary>
        </member>
        <member name="P:CefSharp.DraggableRegion.Y">
            <summary>
            Y coordinate
            </summary>
        </member>
        <member name="P:CefSharp.DraggableRegion.Draggable">
            <summary>
            Is this region draggable
            </summary>
        </member>
        <member name="M:CefSharp.DraggableRegion.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a new DraggableRegion
            </summary>
            <param name="width">width</param>
            <param name="height">height</param>
            <param name="x">x coordinate</param>
            <param name="y">y coordinate</param>
            <param name="draggable">is draggable?</param>
        </member>
        <member name="T:CefSharp.CdmRegistrationErrorCode">
            <summary>
            Lists the errors that can be reported during Widevine Content Decryption Module (CDM) registration.
            </summary>
        </member>
        <member name="F:CefSharp.CdmRegistrationErrorCode.None">
            <summary>
            No error. Registration completed successfully.
            </summary>
        </member>
        <member name="F:CefSharp.CdmRegistrationErrorCode.IncorrectContents">
            <summary>
            Required files or manifest contents are missing.
            </summary>
        </member>
        <member name="F:CefSharp.CdmRegistrationErrorCode.Incompatible">
            <summary>
            The CDM is incompatible with the current Chromium version.
            </summary>
        </member>
        <member name="F:CefSharp.CdmRegistrationErrorCode.NotSupported">
            <summary>
            CDM registration is not supported at this time.
            </summary>
        </member>
        <member name="T:CefSharp.CefErrorCode">
            <summary>
            This file contains the list of network errors.
            
            For a complete up-to-date list, see the CEF source code
            (cef_errorcode_t in include/internal/cef_types.h)
            and the Chromium source code (net/base/net_error_list.h).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.None">
            <summary>
            No error occurred.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.IoPending">
            <summary>
            An asynchronous IO operation is not yet complete.  This usually does not
            indicate a fatal error.  Typically this error will be generated as a
            notification to wait for some external notification that the IO operation
            finally completed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Failed">
            <summary>
            A generic failure occurred.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Aborted">
            <summary>
            A request was aborted, possibly by the user.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidArgument">
            <summary>
            An argument to the function is incorrect.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidHandle">
            <summary>
            The handle or file descriptor is invalid.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FileNotFound">
            <summary>
            The file or directory cannot be found.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.TimedOut">
            <summary>
            An operation timed out.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FileTooBig">
            <summary>
            The file is too large.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Unexpected">
            <summary>
            An unexpected error. This may be caused by a programming mistake or an invalid assumption
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.AccessDenied">
            <summary>
            Permission to access a resource, other than the network, was denied.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NotImplemented">
            <summary>
            The operation failed because of unimplemented functionality.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InsufficientResources">
            <summary>
            There were not enough resources to complete the operation.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.OutOfMemory">
            <summary>
            Memory allocation failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UploadFileChanged">
            <summary>
            The file upload failed because the file's modification time was different
            from the expectation.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocketNotConnected">
            <summary>
            The socket is not connected.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FileExists">
            <summary>
            The file already exists.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FilePathTooLong">
            <summary>
            The path or file name is too long.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FileNoSpace">
            <summary>
            Not enough room left on the disk.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FileVirusInfected">
            <summary>
            The file has a virus.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.BlockedByClient">
            <summary>
            The client chose to block the request.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NetworkChanged">
            <summary>
            The network changed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.BlockedByAdministrator">
            <summary>
            The request was blocked by the URL block list configured by the domain
            administrator.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocketIsConnected">
            <summary>
            The socket is already connected.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.BlockedEnrollmentCheckPending">
            <summary>
            The request was blocked because the forced reenrollment check is still
            pending. This error can only occur on ChromeOS.
            The error can be emitted by code in chrome/browser/policy/policy_helpers.cc.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ConnectionClosed">
            <summary>
            A connection was closed (corresponding to a TCP FIN).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ConnectionReset">
            <summary>
            A connection was reset (corresponding to a TCP RST).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ConnectionRefused">
            <summary>
            A connection attempt was refused.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ConnectionAborted">
            <summary>
            A connection timed out as a result of not receiving an ACK for data sent.
            This can include a FIN packet that did not get ACK'd.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ConnectionFailed">
            <summary>
            A connection attempt failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NameNotResolved">
            <summary>
            The host name could not be resolved.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InternetDisconnected">
            <summary>
            The Internet connection has been lost.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslProtocolError">
            <summary>
            An SSL protocol error occurred.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.AddressInvalid">
            <summary>
            The IP address or port number is invalid (e.g., cannot connect to the IP address 0 or the port 0).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.AddressUnreachable">
            <summary>
            The IP address is unreachable.  This usually means that there is no route to the specified host or network.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslClientAuthCertNeeded">
            <summary>
            The server requested a client certificate for SSL client authentication.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.TunnelConnectionFailed">
            <summary>
            A tunnel connection through the proxy could not be established.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NoSslVersionsEnabled">
            <summary>
            No SSL protocol versions are enabled.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslVersionOrCipherMismatch">
            <summary>
            The client and server don't support a common SSL protocol version or cipher suite.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslRenegotiationRequested">
            <summary>
            The server requested a renegotiation (rehandshake).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ProxyAuthUnsupported">
            <summary>
            The proxy requested authentication (for tunnel establishment) with an
            unsupported method.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertErrorInSslRenegotiation">
             <summary>
             During SSL renegotiation (rehandshake), the server sent a certificate with
             an error.
            
             Note: this error is not in the -2xx range so that it won't be handled as a
             certificate error.
             </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.BadSslClientAuthCert">
            <summary>
            The SSL handshake failed because of a bad or missing client certificate.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ConnectionTimedOut">
            <summary>
            A connection attempt timed out.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.HostResolverQueueTooLarge">
            <summary>
            There are too many pending DNS resolves, so a request in the queue was
            aborted.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocksConnectionFailed">
            <summary>
            Failed establishing a connection to the SOCKS proxy server for a target host.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocksConnectionHostUnreachable">
            <summary>
            The SOCKS proxy server failed establishing connection to the target host
            because that host is unreachable.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NpnNegotiationFailed">
            <summary>
            The request to negotiate an alternate protocol failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslNoRenegotiation">
            <summary>
            The peer sent an SSL no_renegotiation alert message.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.WinsockUnexpectedWrittenBytes">
            <summary>
            Winsock sometimes reports more data written than passed.  This is probably
            due to a broken LSP.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslDecompressionFailureAlert">
            <summary>
            An SSL peer sent us a fatal decompression_failure alert. This typically
            occurs when a peer selects DEFLATE compression in the mistaken belief that
            it supports it.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslBadRecordMacAlert">
            <summary>
            An SSL peer sent us a fatal bad_record_mac alert. This has been observed
            from servers with buggy DEFLATE support.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ProxyAuthRequested">
            <summary>
            The proxy requested authentication (for tunnel establishment).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ProxyConnectionFailed">
            <summary>
            Could not create a connection to the proxy server. An error occurred
            either in resolving its name, or in connecting a socket to it.
            Note that this does NOT include failures during the actual "CONNECT" method
            of an HTTP proxy.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.MandatoryProxyConfigurationFailed">
            <summary>
            A mandatory proxy configuration could not be used. Currently this means
            that a mandatory PAC script could not be fetched, parsed or executed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.PreconnectMaxSocketLimit">
            <summary>
            We've hit the max socket limit for the socket pool while preconnecting.  We
            don't bother trying to preconnect more sockets.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslClientAuthPrivateKeyAccessDenied">
            <summary>
            The permission to use the SSL client certificate's private key was denied.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslClientAuthCertNoPrivateKey">
            <summary>
            The SSL client certificate has no private key.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ProxyCertificateInvalid">
            <summary>
            The certificate presented by the HTTPS Proxy was invalid.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NameResolutionFailed">
            <summary>
            An error occurred when trying to do a name resolution (DNS).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NetworkAccessDenied">
            <summary>
            Permission to access the network was denied. This is used to distinguish
            errors that were most likely caused by a firewall from other access denied
            errors. See also ERR_ACCESS_DENIED.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.TemporarilyThrottled">
            <summary>
            The request throttler module cancelled this request to avoid DDOS.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.HttpsProxyTunnelResponse">
            <summary>
            A request to create an SSL tunnel connection through the HTTPS proxy
            received a non-200 (OK) and non-407 (Proxy Auth) response.  The response
            body might include a description of why the request failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslClientAuthSignatureFailed">
             <summary>
             We were unable to sign the CertificateVerify data of an SSL client auth
             handshake with the client certificate's private key.
            
             Possible causes for this include the user implicitly or explicitly
             denying access to the private key, the private key may not be valid for
             signing, the key may be relying on a cached handle which is no longer
             valid, or the CSP won't allow arbitrary data to be signed.
             </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.MsgTooBig">
            <summary>
            The message was too large for the transport.  (for example a UDP message
            which exceeds size threshold).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.WsProtocolError">
            <summary>
            Websocket protocol error. Indicates that we are terminating the connection
            due to a malformed frame or other protocol violation.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.AddressInUse">
            <summary>
            Returned when attempting to bind an address that is already in use.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslHandshakeNotCompleted">
            <summary>
            An operation failed because the SSL handshake has not completed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslBadPeerPublicKey">
            <summary>
            SSL peer's public key is invalid.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslPinnedKeyNotInCertChain">
            <summary>
            The certificate didn't match the built-in public key pins for the host name.
            The pins are set in net/http/transport_security_state.cc and require that
            one of a set of public keys exist on the path from the leaf to the root.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ClientAuthCertTypeUnsupported">
            <summary>
            Server request for client certificate did not contain any types we support.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslDecryptErrorAlert">
            <summary>
            An SSL peer sent us a fatal decrypt_error alert. This typically occurs when
            a peer could not correctly verify a signature (in CertificateVerify or
            ServerKeyExchange) or validate a Finished message.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.WsThrottleQueueTooLarge">
            <summary>
            There are too many pending WebSocketJob instances, so the new job was not
            pushed to the queue.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.TooManySocketStreams">
            <summary>
            There are too many active SocketStream instances, so the new connect request
            was rejected.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslServerCertChanged">
            <summary>
            The SSL server certificate changed in a renegotiation.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslUnrecognizedNameAlert">
            <summary>
            The SSL server sent us a fatal unrecognized_name alert.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocketSetReceiveBufferSizeError">
            <summary>
            Failed to set the socket's receive buffer size as requested.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocketSetSendBufferSizeError">
            <summary>
            Failed to set the socket's send buffer size as requested.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocketReceiveBufferSizeUnchangeable">
            <summary>
            Failed to set the socket's receive buffer size as requested, despite success
            return code from setsockopt.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocketSendBufferSizeUnchangeable">
            <summary>
            Failed to set the socket's send buffer size as requested, despite success
            return code from setsockopt.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslClientAuthCertBadFormat">
            <summary>
            Failed to import a client certificate from the platform store into the SSL
            library.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ICANNNameCollision">
            <summary>
            Resolving a hostname to an IP address list included the IPv4 address
            "127.0.53.53". This is a special IP address which ICANN has recommended to
            indicate there was a name collision, and alert admins to a potential
            problem.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslServerCertBadFormat">
            <summary>
            The SSL server presented a certificate which could not be decoded. This is
            not a certificate error code as no X509Certificate object is available. This
            error is fatal.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CtSthParsingFailed">
            <summary>
            Certificate Transparency: Received a signed tree head that failed to parse.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CtSthIncomplete">
            <summary>
            Certificate Transparency: Received a signed tree head whose JSON parsing was
            OK but was missing some of the fields.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnableToReuseConnectionForProxyAuth">
            <summary>
            The attempt to reuse a connection to send proxy auth credentials failed
            before the AuthController was used to generate credentials. The caller should
            reuse the controller with a new connection. This error is only used
            internally by the network stack.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CtConsistencyProofParsingFailed">
            <summary>
            Certificate Transparency: Failed to parse the received consistency proof.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslObsoleteCipher">
            <summary>
            The SSL server required an unsupported cipher suite that has since been
            removed. This error will temporarily be signaled on a fallback for one or two
            releases immediately following a cipher suite's removal, after which the
            fallback will be removed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.WsUpgrade">
            <summary>
            When a WebSocket handshake is done successfully and the connection has been
            upgraded, the URLRequest is cancelled with this error code.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ReadIfReadyNotImplemented">
            <summary>
            Socket ReadIfReady support is not implemented. This error should not be user
            visible, because the normal Read() method is used as a fallback.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NoBufferSpace">
            <summary>
            No socket buffer space is available.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:CefSharp.CefErrorCode.SslClientAuthNoCommonAlgorithms" -->
        <member name="F:CefSharp.CefErrorCode.EarlyDataRejected">
            <summary>
            TLS 1.3 early data was rejected by the server. This will be received before
            any data is returned from the socket. The request should be retried with
            early data disabled.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.WrongVersionOnEarlyData">
             <summary>
             TLS 1.3 early data was offered, but the server responded with TLS 1.2 or
             earlier. This is an internal error code to account for a
             backwards-compatibility issue with early data and TLS 1.2. It will be
             received before any data is returned from the socket. The request should be
             retried with early data disabled.
            
             See https://tools.ietf.org/html/rfc8446#appendix-D.3 for details.
             </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Tls13DownGradeDetected">
            <summary>
            TLS 1.3 was enabled, but a lower version was negotiated and the server
            returned a value indicating it supported TLS 1.3. This is part of a security
            check in TLS 1.3, but it may also indicate the user is behind a buggy
            TLS-terminating proxy which implemented TLS 1.2 incorrectly. (See
            https://crbug.com/boringssl/226.)
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslKeyUsageIncompatible">
            <summary>
            The server's certificate has a keyUsage extension incompatible with the
            negotiated TLS key exchange method.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertCommonNameInvalid">
            <summary>
            The server responded with a certificate whose common name did not match the host name.
            This could mean:
            1. An attacker has redirected our traffic to his server and is presenting a certificate
            for which he knows the private key.
            2. The server is misconfigured and responding with the wrong cert.
            3. The user is on a wireless network and is being redirected to the network's login page.
            4. The OS has used a DNS search suffix and the server doesn't have a certificate for the
            abbreviated name in the address bar.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertDateInvalid">
            <summary>
            The server responded with a certificate that, by our clock, appears to either not yet be valid or to have expired.
            This could mean:
            1. An attacker is presenting an old certificate for which he has managed to obtain the private key
            2. The server is misconfigured and is not presenting a valid cert.
            3. Our clock is wrong.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertAuthorityInvalid">
            <summary>
            The server responded with a certificate that is signed by an authority we don't trust.
            The could mean:
            1. An attacker has substituted the real certificate for a cert that
            contains his public key and is signed by his cousin.
            2. The server operator has a legitimate certificate from a CA we don't know about, but should trust.
            3. The server is presenting a self-signed certificate, providing no defense against active attackers (but foiling passive attackers).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertContainsErrors">
            <summary>
            The server responded with a certificate that contains errors. This error is not recoverable.
            MSDN describes this error as follows:
            "The SSL certificate contains errors."
            NOTE: It's unclear how this differs from ERR_CERT_INVALID. For consistency,
            use that code instead of this one from now on.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertNoRevocationMechanism">
            <summary>
            The certificate has no mechanism for determining if it is revoked.  In effect, this certificate cannot be revoked.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertUnableToCheckRevocation">
            <summary>
            Revocation information for the security certificate for this site is not available.
            This could mean:
            1. An attacker has compromised the private key in the certificate and is blocking our attempt to
            find out that the cert was revoked.
            2. The certificate is unrevoked, but the revocation server is busy or unavailable.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertRevoked">
            <summary>
            The server responded with a certificate has been revoked.
            We have the capability to ignore this error, but it is probably not the thing to do.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertInvalid">
            <summary>
            The server responded with a certificate that is invalid. This error is not recoverable.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertWeakSignatureAlgorithm">
            <summary>
            The server responded with a certificate that is signed using a weak
            signature algorithm.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertNonUniqueName">
            <summary>
            The host name specified in the certificate is not unique.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertWeakKey">
            <summary>
            The server responded with a certificate that contains a weak key (e.g.
            a too-small RSA key).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertNameConstraintViolation">
            <summary>
            The certificate claimed DNS names that are in violation of name constraints.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertValidityTooLong">
            <summary>
            The certificate's validity period is too long.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:CefSharp.CefErrorCode.CertificateTransparencyRequired" -->
        <member name="F:CefSharp.CefErrorCode.CertSymantecLegacy">
            <summary>
            The certificate chained to a legacy Symantec root that is no longer trusted.
            https://g.co/chrome/symantecpkicerts
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertKnownInterceptionBlocked">
            <summary>
            The certificate is known to be used for interception by an entity other
            the device owner.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslObsoleteVersion">
            <summary>
            The connection uses an obsolete version of SSL/TLS.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertEnd">
             <summary>
             Add new certificate error codes here.
            
             Update the value of CERT_END whenever you add a new certificate error
             code.
            
             The value immediately past the last certificate error code.
             </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidUrl">
            <summary>
            The URL is invalid.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DisallowedUrlScheme">
            <summary>
            The scheme of the URL is disallowed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnknownUrlScheme">
            <summary>
            The scheme of the URL is unknown.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.TooManyRedirects">
            <summary>
            Attempting to load an URL resulted in too many redirects.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnsafeRedirect">
            <summary>
            Attempting to load an URL resulted in an unsafe redirect (e.g., a redirect to file:// is considered unsafe).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnsafePort">
            <summary>
            Attempting to load an URL with an unsafe port number.  These are port
            numbers that correspond to services, which are not robust to spurious input
            that may be constructed as a result of an allowed web construct (e.g., HTTP
            looks a lot like SMTP, so form submission to port 25 is denied).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidResponse">
            <summary>
            The server's response was invalid.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidChunkedEncoding">
            <summary>
            Error in chunked transfer encoding.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.MethodNotSupported">
            <summary>
            The server did not support the request method.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnexpectedProxyAuth">
            <summary>
            The response was 407 (Proxy Authentication Required), yet we did not send the request to a proxy.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.EmptyResponse">
            <summary>
            The server closed the connection without sending any data.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ResponseHeadersTooBig">
            <summary>
            The headers section of the response is too large.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.PacScriptFailed">
            <summary>
            The evaluation of the PAC script failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.RequestRangeNotSatisfiable">
            <summary>
            The response was 416 (Requested range not satisfiable) and the server cannot
            satisfy the range requested.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.MalformedIdentity">
            <summary>
            The identity used for authentication is invalid.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ContentDecodingFailed">
            <summary>
            Content decoding of the response body failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NetworkIoSuspended">
            <summary>
            An operation could not be completed because all network IO
            is suspended.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SynReplyNotReceived">
            <summary>
            FLIP data received without receiving a SYN_REPLY on the stream.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.EncodingConversionFailed">
            <summary>
            Converting the response to target encoding failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnrecognizedFtpDirectoryListingFormat">
            <summary>
            The server sent an FTP directory listing in a format we do not understand.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NoSupportedProxies">
            <summary>
            There are no supported proxies in the provided list.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyProtocolError">
            <summary>
            There is a SPDY protocol error.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidAuthCredentials">
            <summary>
            Credentials could not be established during HTTP Authentication.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnsupportedAuthScheme">
            <summary>
            An HTTP Authentication scheme was tried which is not supported on this
            machine.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.EncodingDetectionFailed">
            <summary>
            Detecting the encoding of the response failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.MissingAuthCredentials">
            <summary>
            (GSSAPI) No Kerberos credentials were available during HTTP Authentication.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnexpectedSecurityLibraryStatus">
            <summary>
            An unexpected, but documented, SSPI or GSSAPI status code was returned.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.MisconfiguredAuthEnvironment">
            <summary>
            The environment was not set up correctly for authentication (for
            example, no KDC could be found or the principal is unknown.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UndocumentedSecurityLibraryStatus">
            <summary>
            An undocumented SSPI or GSSAPI status code was returned.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ResponseBodyTooBigToDrain">
            <summary>
            The HTTP response was too big to drain.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ResponseHeadersMultipleContentLength">
            <summary>
            The HTTP response contained multiple distinct Content-Length headers.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.IncompleteSpdyHeaders">
            <summary>
            SPDY Headers have been received, but not all of them - status or version
            headers are missing, so we're expecting additional frames to complete them.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.PacNotInDhcp">
            <summary>
            No PAC URL configuration could be retrieved from DHCP. This can indicate
            either a failure to retrieve the DHCP configuration, or that there was no
            PAC URL configured in DHCP.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ResponseHeadersMultipleContentDisposition">
            <summary>
            The HTTP response contained multiple Content-Disposition headers.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ResponseHeadersMultipleLocation">
            <summary>
            The HTTP response contained multiple Location headers.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyServerRefusedStream">
            <summary>
            SPDY server refused the stream. Client should retry. This should never be a
            user-visible error.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyPingFailed">
            <summary>
            SPDY server didn't respond to the PING message.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ContentLengthMismatch">
            <summary>
            The HTTP response body transferred fewer bytes than were advertised by the
            Content-Length header when the connection is closed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.IncompleteChunkedEncoding">
            <summary>
            The HTTP response body is transferred with Chunked-Encoding, but the
            terminating zero-length chunk was never sent when the connection is closed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.QuicProtocolError">
            <summary>
            There is a QUIC protocol error.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ResponseHeadersTruncated">
            <summary>
            The HTTP headers were truncated by an EOF.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.QuicHandshakeFailed">
            <summary>
            The QUIC crytpo handshake failed.  This means that the server was unable
            to read any requests sent, so they may be resent.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyInadequateTransportSecurity">
            <summary>
            Transport security is inadequate for the SPDY version.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyFlowControlError">
            <summary>
            The peer violated SPDY flow control.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyFrameSizeError">
            <summary>
            The peer sent an improperly sized SPDY frame.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyCompressionError">
            <summary>
            Decoding or encoding of compressed SPDY headers failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ProxyAuthRequestedWithNoConnection">
            <summary>
            Proxy Auth Requested without a valid Client Socket Handle.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Http11Required">
            <summary>
            HTTP_1_1_REQUIRED error code received on HTTP/2 session.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ProxyHttp11Required">
            <summary>
            HTTP_1_1_REQUIRED error code received on HTTP/2 session to proxy.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.PacScriptTerminated">
            <summary>
            The PAC script terminated fatally and must be reloaded.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidHttpResponse">
            <summary>
            The server was expected to return an HTTP/1.x response, but did not. Rather
            than treat it as HTTP/0.9, this error is returned.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ContentDecodingInitFailed">
            <summary>
            Initializing content decoding failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Http2RstStreamNoErrorReceived">
            <summary>
            Received HTTP/2 RST_STREAM frame with NO_ERROR error code.  This error should
            be handled internally by HTTP/2 code, and should not make it above the
            SpdyStream layer.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Http2PushedStreamNoAvailable">
            <summary>
            The pushed stream claimed by the request is no longer available.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Http2ClaimedPushStreamResetByServer">
            <summary>
            A pushed stream was claimed and later reset by the server. When this happens,
            the request should be retried.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.TooManyRetries">
            <summary>
            An HTTP transaction was retried too many times due for authentication or
            invalid certificates. This may be due to a bug in the net stack that would
            otherwise infinite loop, or if the server or proxy continually requests fresh
            credentials or presents a fresh invalid certificate.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Http2StreamClosed">
            <summary>
            Received an HTTP/2 frame on a closed stream.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Http2ClientRefusedStream">
            <summary>
            Client is refusing an HTTP/2 stream.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Http2PushedResponseDoesNotMatch">
            <summary>
            A pushed HTTP/2 stream was claimed by a request based on matching URL and
            request headers, but the pushed response headers do not match the request.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.HttpResponseCodeFailure">
             <summary>
             The server returned a non-2xx HTTP response code.
            
             Not that this error is only used by certain APIs that interpret the HTTP
             response itself. URLRequest for instance just passes most non-2xx
             response back as success.
             </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.QuicCertRootNotKnown">
            <summary>
            The certificate presented on a QUIC connection does not chain to a known root
            and the origin connected to is not on a list of domains where unknown roots
            are allowed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheMiss">
            <summary>
            The cache does not have the requested entry.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheReadFailure">
            <summary>
            Unable to read from the disk cache.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheWriteFailure">
            <summary>
            Unable to write to the disk cache.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheOperationNotSupported">
            <summary>
            The operation is not supported for this entry.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheOpenFailure">
            <summary>
            The disk cache is unable to open this entry.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheCreateFailure">
            <summary>
            The disk cache is unable to create this entry.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheRace">
            <summary>
            Multiple transactions are racing to create disk cache entries. This is an
            internal error returned from the HttpCache to the HttpCacheTransaction that
            tells the transaction to restart the entry-creation logic because the state
            of the cache has changed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheChecksumReadFailure">
            <summary>
            The cache was unable to read a checksum record on an entry. This can be
            returned from attempts to read from the cache. It is an internal error,
            returned by the SimpleCache backend, but not by any URLRequest methods
            or members.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheChecksumMismatch">
            <summary>
            The cache found an entry with an invalid checksum. This can be returned from
            attempts to read from the cache. It is an internal error, returned by the
            SimpleCache backend, but not by any URLRequest methods or members.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheLockTimeout">
            <summary>
            Internal error code for the HTTP cache. The cache lock timeout has fired.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheAuthFailureAfterRead">
            <summary>
            Received a challenge after the transaction has read some data, and the
            credentials aren't available.  There isn't a way to get them at that point.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheEntryNotSuitable">
            <summary>
            Internal not-quite error code for the HTTP cache. In-memory hints suggest
            that the cache entry would not have been useable with the transaction's
            current configuration (e.g. load flags, mode, etc.)
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheDoomFailure">
            <summary>
            The disk cache is unable to doom this entry.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheOpenOrCreateFilure">
            <summary>
            The disk cache is unable to open or create this entry.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InsecureResponse">
            <summary>
            The server's response was insecure (e.g. there was a cert error).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NoPrivateKeyForCert">
            <summary>
            The server responded to a &lt;keygen&gt; with a generated client cert that we
            don't have the matching private key for.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.AddUserCertFailed">
            <summary>
            An error adding to the OS certificate database (e.g. OS X Keychain).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidSignedExchange">
            <summary>
            An error occurred while handling a signed exchange.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidWebBundle">
            <summary>
            An error occurred while handling a Web Bundle source.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpFailed">
            <summary>
            A generic error for failed FTP control connection command.
            If possible, please use or add a more specific error code.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpServiceUnavailable">
            <summary>
            The server cannot fulfill the request at this point. This is a temporary
            error.
            FTP response code 421.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpTransferAborted">
            <summary>
            The server has aborted the transfer.
            FTP response code 426.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpFileBusy">
            <summary>
            The file is busy, or some other temporary error condition on opening
            the file.
            FTP response code 450.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpSyntaxError">
            <summary>
            Server rejected our command because of syntax errors.
            FTP response codes 500, 501.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpCommandNotSupported">
            <summary>
            Server does not support the command we issued.
            FTP response codes 502, 504.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpBadCommandSequence">
            <summary>
            Server rejected our command because we didn't issue the commands in right
            order.
            FTP response code 503.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Pkcs12ImportBadPassword">
            <summary>
            PKCS #12 import failed due to incorrect password.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Pkcs12ImportFailed">
            <summary>
            PKCS #12 import failed due to other error.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ImportCaCertNotCa">
            <summary>
            CA import failed - not a CA cert.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ImportCertAlreadyExists">
            <summary>
            Import failed - certificate already exists in database.
            Note it's a little weird this is an error but reimporting a PKCS12 is ok
            (no-op).  That's how Mozilla does it, though.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ImportCaCertFailed">
            <summary>
            CA import failed due to some other error.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ImportServerCertFailed">
            <summary>
            Server certificate import failed due to some internal error.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Pkcs12ImportInvalidMac">
            <summary>
            PKCS #12 import failed due to invalid MAC.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Pkcs12ImportInvalidFile">
            <summary>
            PKCS #12 import failed due to invalid/corrupt file.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Pkcs12ImportUnsupported">
            <summary>
            PKCS #12 import failed due to unsupported features.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.KeyGenerationFailed">
            <summary>
            Key generation failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.PrivateKeyExportFailed">
            <summary>
            Failure to export private key.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SelfSignedCertGenerationFailed">
            <summary>
            Self-signed certificate generation failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertDatabaseChanged">
            <summary>
            The certificate database changed in some way.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsMalformedResponse">
            <summary>
            DNS resolver received a malformed response.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsServerRequiresTcp">
            <summary>
            DNS server requires TCP
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsServerFailed">
            <summary>
            DNS server failed.  This error is returned for all of the following
            error conditions:
            1 - Format error - The name server was unable to interpret the query.
            2 - Server failure - The name server was unable to process this query
                due to a problem with the name server.
            4 - Not Implemented - The name server does not support the requested
                kind of query.
            5 - Refused - The name server refuses to perform the specified
                operation for policy reasons.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsTimedOut">
            <summary>
            DNS transaction timed out.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsCacheMiss">
            <summary>
            The entry was not found in cache, for cache-only lookups.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsSearchEmpty">
            <summary>
            Suffix search list rules prevent resolution of the given host name.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsSortError">
            <summary>
            Failed to sort addresses according to RFC3484.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsSecureResolverHostnameResolutionFailed">
            <summary>
            Failed to resolve the hostname of a DNS-over-HTTPS server.
            </summary>
        </member>
        <member name="T:CefSharp.CefEventFlags">
            <summary>
            Supported event bit flags.
            </summary>
        </member>
        <member name="F:CefSharp.CefEventFlags.CommandDown">
            <summary>
            Mac OS-X command key.
            </summary>
        </member>
        <member name="T:CefSharp.CefFileDialogMode">
            <summary>
            CefFileDialogMode (Based on cef_file_dialog_mode_t)
            </summary>
        </member>
        <member name="F:CefSharp.CefFileDialogMode.Open">
            <summary>
            Requires that the file exists before allowing the user to pick it.
            </summary>
        </member>
        <member name="F:CefSharp.CefFileDialogMode.OpenMultiple">
            <summary>
            Like Open, but allows picking multiple files to open.
            </summary>
        </member>
        <member name="F:CefSharp.CefFileDialogMode.OpenFolder">
            <summary>
            Like Open, but selects a folder to open.
            </summary>
        </member>
        <member name="F:CefSharp.CefFileDialogMode.Save">
            <summary>
            Allows picking a nonexistent file, and prompts to overwrite if the file already exists.
            </summary>
        </member>
        <member name="T:CefSharp.CefFocusSource">
            <summary>
            Focus Source
            </summary>
        </member>
        <member name="F:CefSharp.CefFocusSource.FocusSourceNavigation">
            <summary>
            The source is explicit navigation via the API (LoadURL(), etc).
            </summary>
        </member>
        <member name="F:CefSharp.CefFocusSource.FocusSourceSystem">
            <summary>
            The source is a system-generated focus event.
            </summary>
        </member>
        <member name="T:CefSharp.CefJsDialogType">
            <summary>
            Supported JavaScript dialog types.
            </summary>
        </member>
        <member name="F:CefSharp.CefJsDialogType.Alert">
            <summary>
            Alert Dialog
            </summary>
        </member>
        <member name="F:CefSharp.CefJsDialogType.Confirm">
            <summary>
            Confirm Dialog
            </summary>
        </member>
        <member name="F:CefSharp.CefJsDialogType.Prompt">
            <summary>
            Prompt Dialog
            </summary>
        </member>
        <member name="F:CefSharp.CefMenuCommand.CustomFirst">
            <summary>
            Custom menu items originating from the renderer process. For example, plugin placeholder menu items or Flash menu items.
            This is the first entry
            </summary>
        </member>
        <member name="F:CefSharp.CefMenuCommand.CustomLast">
            <summary>
            Custom menu items originating from the renderer process. For example, plugin placeholder menu items or Flash menu items.
            This is the last entry
            </summary>
        </member>
        <member name="T:CefSharp.CefPdfPrintMarginType">
            <summary>
            Margin type for PDF printing.
            </summary>
        </member>
        <member name="F:CefSharp.CefPdfPrintMarginType.Default">
            <summary>
            Default margins.
            </summary>
        </member>
        <member name="F:CefSharp.CefPdfPrintMarginType.None">
            <summary>
            No margins.
            </summary>
        </member>
        <member name="F:CefSharp.CefPdfPrintMarginType.Minimum">
            <summary>
            Minimum margins
            </summary>
        </member>
        <member name="F:CefSharp.CefPdfPrintMarginType.Custom">
            <summary>
            Custom margins.
            </summary>
        </member>
        <member name="T:CefSharp.CefReturnValue">
            <summary>
            Return value types.
            </summary>
        </member>
        <member name="F:CefSharp.CefReturnValue.Cancel">
            <summary>
            Cancel immediately.
            </summary>
        </member>
        <member name="F:CefSharp.CefReturnValue.Continue">
            <summary>
            Continue immediately.
            </summary>
        </member>
        <member name="F:CefSharp.CefReturnValue.ContinueAsync">
            <summary>
            Continue asynchronously (usually via a callback).
            </summary>
        </member>
        <member name="T:CefSharp.CefState">
            <summary>
            Represents the state of a setting.
            </summary>
        </member>
        <member name="F:CefSharp.CefState.Default">
            <summary>
            Use the default state for the setting.
            </summary>
        </member>
        <member name="F:CefSharp.CefState.Enabled">
            <summary>
            Enable or allow the setting.
            </summary>
        </member>
        <member name="F:CefSharp.CefState.Disabled">
            <summary>
            Disable or disallow the setting.
            </summary>
        </member>
        <member name="T:CefSharp.CefTerminationStatus">
            <summary>
            Process termination status values. 
            </summary>
        </member>
        <member name="F:CefSharp.CefTerminationStatus.AbnormalTermination">
            <summary>
            Non-zero exit status.
            </summary>
        </member>
        <member name="F:CefSharp.CefTerminationStatus.ProcessWasKilled">
            <summary>
            SIGKILL or task manager kill.
            </summary>
        </member>
        <member name="F:CefSharp.CefTerminationStatus.ProcessCrashed">
            <summary>
            Segmentation fault.
            </summary>
        </member>
        <member name="F:CefSharp.CefTerminationStatus.OutOfMemory">
            <summary>
            Out of memory. Some platforms may use ProcessCrashed instead.
            </summary>
        </member>
        <member name="T:CefSharp.CefThreadIds">
            <summary>
            Managed enum for cef_thread_id_t/CefThreadId
            </summary>
        </member>
        <member name="F:CefSharp.CefThreadIds.TID_UI">
            <summary>
            The CEF UI thread in the browser. In CefSharp this is ALWAYS
            separate from the application's main thread (and thus the main 
            WinForm UI thread).
            </summary>
        </member>
        <member name="F:CefSharp.CefThreadIds.TID_DB">
            <summary>
            Used to interact with the database.
            </summary>
        </member>
        <member name="F:CefSharp.CefThreadIds.TID_FILE">
            <summary>
            Used to interact with the file system.
            </summary>
        </member>
        <member name="F:CefSharp.CefThreadIds.TID_FILE_USER_BLOCKING">
            <summary>
            Used for file system operations that block user interactions.
            Responsiveness of this thread affects users.
            </summary>
        </member>
        <member name="F:CefSharp.CefThreadIds.TID_PROCESS_LAUNCHER">
            <summary>
            Used to launch and terminate browser processes.
            </summary>
        </member>
        <member name="F:CefSharp.CefThreadIds.TID_CACHE">
            <summary>
            Used to handle slow HTTP cache operations.
            </summary>
        </member>
        <member name="F:CefSharp.CefThreadIds.TID_IO">
            <summary>
            Used to process IPC and network messages.
            </summary>
        </member>
        <member name="F:CefSharp.CefThreadIds.TID_RENDERER">
            <summary>
            The main thread in the renderer. Used for all WebKit and V8 interaction.
            </summary>
        </member>
        <member name="T:CefSharp.CertStatus">
             <summary>
            
             Supported certificate status code values. See net\cert\cert_status_flags.h
             for more information. CERT_STATUS_NONE is new in CEF because we use an
             enum while cert_status_flags.h uses a typedef and static const variables.
             </summary>
        </member>
        <member name="F:CefSharp.CertStatus.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.CommonNameInvalid">
            <summary>
            CommonNameInvalid
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.DateInvalid">
            <summary>
            DateInvalid
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.AuthorityInvalid">
            <summary>
            AuthorityInvalid
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.NoRevocation_Mechanism">
            <summary>
            NoRevocation_Mechanism
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.UnableToCheckRevocation">
            <summary>
            UnableToCheckRevocation
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.Revoked">
            <summary>
            Revoked
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.WeakSignatureAlgorithm">
            <summary>
            WeakSignatureAlgorithm
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.NonUniqueName">
            <summary>
            NonUniqueName
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.WeakKey">
            <summary>
            WeakKey
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.PinnedKeyMissing">
            <summary>
            PinnedKeyMissing
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.NameConstraintViolation">
            <summary>
            NameConstraintViolation
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.ValidityTooLong">
            <summary>
            ValidityTooLong
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.IsEv">
            <summary>
            IsEv
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.RevCheckingEnabled">
            <summary>
            RevCheckingEnabled
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.Sha1SignaturePresent">
            <summary>
            Sha1SignaturePresent
            </summary>
        </member>
        <member name="F:CefSharp.CertStatus.CtComplianceFailed">
            <summary>
            CtComplianceFailed
            </summary>
        </member>
        <member name="T:CefSharp.ContextMenuEditState">
            <summary>
            Supported context menu edit state bit flags.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuEditState.None">
            <summary>
            A binary constant representing the none flag.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuEditState.CanUndo">
            <summary>
            A binary constant representing the can undo flag.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuEditState.CanRedo">
            <summary>
            A binary constant representing the can redo flag.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuEditState.CanCut">
            <summary>
            A binary constant representing the can cut flag.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuEditState.CanCopy">
            <summary>
            A binary constant representing the can copy flag.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuEditState.CanPaste">
            <summary>
            A binary constant representing the can paste flag.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuEditState.CanDelete">
            <summary>
            A binary constant representing the can delete flag.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuEditState.CanSelectAll">
            <summary>
            A binary constant representing the can select all flag.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuEditState.CanTranslate">
            <summary>
            A binary constant representing the can translate flag.
            </summary>
        </member>
        <member name="T:CefSharp.ContextMenuMediaState">
            <summary>
            Supported context menu media state bit flags.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaState.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaState.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaState.Paused">
            <summary>
            Paused
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaState.Muted">
            <summary>
            Muted
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaState.Loop">
            <summary>
            Loop
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaState.CanSave">
            <summary>
            CanSave
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaState.HasAudio">
            <summary>
            HasAudio
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaState.HasVideo">
            <summary>
            HasVideo
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaState.ControlRootElement">
            <summary>
            ControlRootElement
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaState.CanPrint">
            <summary>
            CanPrint
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaState.CanRotate">
            <summary>
            CanRotate
            </summary>
        </member>
        <member name="T:CefSharp.ContextMenuMediaType">
            <summary>
            Supported context menu media types.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaType.None">
            <summary>
            No special node is in context.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaType.Image">
            <summary>
            An image node is selected.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaType.Video">
            <summary>
            A video node is selected.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaType.Audio">
            <summary>
            An audio node is selected.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaType.File">
            <summary>
            A file node is selected.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuMediaType.Plugin">
            <summary>
            A plugin node is selected.
            </summary>
        </member>
        <member name="T:CefSharp.ContextMenuType">
            <summary>
            ContextMenuType
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuType.None">
            <summary>
            No node is selected.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuType.Page">
            <summary>
            The top page is selected.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuType.Frame">
            <summary>
            A subframe page is selected.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuType.Link">
            <summary>
            A link is selected.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuType.Media">
            <summary>
            A media node is selected.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuType.Selection">
            <summary>
            There is a textual or mixed selection that is selected.
            </summary>
        </member>
        <member name="F:CefSharp.ContextMenuType.Editable">
            <summary>
            An editable element is selected.
            </summary>
        </member>
        <member name="T:CefSharp.FilterStatus">
            <summary>
            Return values for IResponseFilter
            </summary>
        </member>
        <member name="F:CefSharp.FilterStatus.NeedMoreData">
            <summary>
            Some or all of the pre-filter data was read successfully but more data is
            needed in order to continue filtering (filtered output is pending).
            </summary>
        </member>
        <member name="F:CefSharp.FilterStatus.Done">
            <summary>
            Some or all of the pre-filter data was read successfully and all available filtered output has been written.
            </summary>
        </member>
        <member name="F:CefSharp.FilterStatus.Error">
            <summary>
            An error occurred during filtering.
            </summary>
        </member>
        <member name="T:CefSharp.KeyEventType">
            <summary>
            Values that represent key event types.
            </summary>
        </member>
        <member name="F:CefSharp.KeyEventType.RawKeyDown">
            <summary>
            Notification that a key transitioned from "up" to "down".
            </summary>
        </member>
        <member name="F:CefSharp.KeyEventType.KeyDown">
            <summary>
            Notification that a key was pressed. This does not necessarily correspond
            to a character depending on the key and language. Use KEYEVENT_CHAR for
            character input.
            </summary>
        </member>
        <member name="F:CefSharp.KeyEventType.KeyUp">
            <summary>
            Notification that a key was released.
            </summary>
        </member>
        <member name="F:CefSharp.KeyEventType.Char">
            <summary>
            Notification that a character was typed. Use this for text input. Key
            down events may generate 0, 1, or more than one character event depending
            on the key, locale, and operating system.
            </summary>
        </member>
        <member name="T:CefSharp.KeyType">
            <summary>
            KeyType Enum.
            Maps to https://magpcss.org/ceforum/apidocs3/projects/(default)/cef_key_event_type_t.html
            </summary>
        </member>
        <member name="F:CefSharp.KeyType.RawKeyDown">
            <summary>
            Notification that a key transitioned from"up" to"down".
            </summary>
        </member>
        <member name="F:CefSharp.KeyType.KeyDown">
            <summary>
            Notification that a key was pressed. This does not necessarily correspond to a character depending on the key and language.
            Use <seealso cref="F:CefSharp.KeyType.Char"/> for character input.
            </summary>
        </member>
        <member name="F:CefSharp.KeyType.KeyUp">
            <summary>
            Notification that a key was released.
            </summary>
        </member>
        <member name="F:CefSharp.KeyType.Char">
            <summary>
            Notification that a character was typed. Use this for text input. Key
            down events may generate 0, 1, or more than one character event depending
            on the key, locale, and operating system.
            </summary>
        </member>
        <member name="T:CefSharp.LogSeverity">
            <summary>
            LogSeverity
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Default">
            <summary>
            Default logging (currently Info logging)
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Verbose">
            <summary>
            Verbose logging.
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Info">
            <summary>
            Info logging
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Warning">
            <summary>
            Warning logging
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Error">
            <summary>
            Error logging
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Fatal">
            <summary>
            Fatal logging.
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Disable">
            <summary>
            Disable logging to file for all messages, and to stderr for messages with severity less than FATAL.
            </summary>
        </member>
        <member name="T:CefSharp.MenuItemType">
            <summary>
            Supported menu item types.
            </summary>
        </member>
        <member name="F:CefSharp.MenuItemType.None">
            <summary>
            An enum constant representing the none option.
            </summary>
        </member>
        <member name="F:CefSharp.MenuItemType.Command">
            <summary>
            An enum constant representing the command option.
            </summary>
        </member>
        <member name="F:CefSharp.MenuItemType.Check">
            <summary>
            An enum constant representing the check option.
            </summary>
        </member>
        <member name="F:CefSharp.MenuItemType.Radio">
            <summary>
            An enum constant representing the radio option.
            </summary>
        </member>
        <member name="F:CefSharp.MenuItemType.Separator">
            <summary>
            An enum constant representing the separator option.
            </summary>
        </member>
        <member name="F:CefSharp.MenuItemType.SubMenu">
            <summary>
            An enum constant representing the sub menu option.
            </summary>
        </member>
        <member name="T:CefSharp.MouseButtonType">
            <summary>
            Values that represent mouse button types.
            </summary>
        </member>
        <member name="F:CefSharp.MouseButtonType.Left">
            <summary>
            Left Mouse Button
            </summary>
        </member>
        <member name="F:CefSharp.MouseButtonType.Middle">
            <summary>
            Middle Mouse Button
            </summary>
        </member>
        <member name="F:CefSharp.MouseButtonType.Right">
            <summary>
            Right Mouse Button
            </summary>
        </member>
        <member name="T:CefSharp.PaintElementType">
            <summary>
            Paint element types.
            </summary>
        </member>
        <member name="F:CefSharp.PaintElementType.View">
            <summary>
            An enum constant representing the view option.
            </summary>
        </member>
        <member name="F:CefSharp.PaintElementType.Popup">
            <summary>
            An enum constant representing the popup option.
            </summary>
        </member>
        <member name="T:CefSharp.PluginPolicy">
            <summary>
            Plugin policies supported by IPluginHandler.OnBeforePluginLoad.
            </summary>
        </member>
        <member name="F:CefSharp.PluginPolicy.Allow">
            <summary>
            Allow the content
            </summary>
        </member>
        <member name="F:CefSharp.PluginPolicy.DetectImportant">
            <summary>
            Allow important content and block unimportant content based on heuristics. The user can manually load blocked content.
            </summary>
        </member>
        <member name="F:CefSharp.PluginPolicy.Block">
            <summary>
            Block the content. The user can manually load blocked content.
            </summary>
        </member>
        <member name="F:CefSharp.PluginPolicy.Disable">
            <summary>
            Disable the content. The user cannot load disabled content.
            </summary>
        </member>
        <member name="T:CefSharp.PostDataElementType">
            <summary>
            Post data elements may represent either bytes or files.
            </summary>
        </member>
        <member name="F:CefSharp.PostDataElementType.Empty">
            <summary>
            An enum constant representing the empty option.
            </summary>
        </member>
        <member name="F:CefSharp.PostDataElementType.Bytes">
            <summary>
            An enum constant representing the bytes option.
            </summary>
        </member>
        <member name="F:CefSharp.PostDataElementType.File">
            <summary>
            An enum constant representing the file option.
            </summary>
        </member>
        <member name="T:CefSharp.ReferrerPolicy">
            <summary>
            Policy for how the Referrer HTTP header value will be sent during navigation.
            If the `--no-referrers` command-line flag is specified then the policy value
            will be ignored and the Referrer value will never be sent.
            Must be kept synchronized with net::URLRequest::ReferrerPolicy from Chromium.
            </summary>
        </member>
        <member name="F:CefSharp.ReferrerPolicy.ClearReferrerOnTransitionFromSecureToInsecure">
            <summary>
            Clear the referrer header if the header value is HTTPS but the request
            destination is HTTP. This is the default behavior.
            </summary>
        </member>
        <member name="F:CefSharp.ReferrerPolicy.Default">
            <summary>
            Default which is equivilent to <see cref="F:CefSharp.ReferrerPolicy.ClearReferrerOnTransitionFromSecureToInsecure"/>
            </summary>
        </member>
        <member name="F:CefSharp.ReferrerPolicy.ReduceReferrerGranularityOnTransitionCrossOrigin">
            <summary>
            A slight variant on <see cref="F:CefSharp.ReferrerPolicy.ClearReferrerOnTransitionFromSecureToInsecure"/>:
            If the request destination is HTTP, an HTTPS referrer will be cleared. If
            the request's destination is cross-origin with the referrer (but does not
            downgrade), the referrer's granularity will be stripped down to an origin
            rather than a full URL. Same-origin requests will send the full referrer.
            </summary>
        </member>
        <member name="F:CefSharp.ReferrerPolicy.OriginOnlyOnTransitionCrossOrigin">
            <summary>
            Strip the referrer down to an origin when the origin of the referrer is
            different from the destination's origin.
            </summary>
        </member>
        <member name="F:CefSharp.ReferrerPolicy.NeverClearReferrer">
            <summary>
            Never change the referrer.
            </summary>
        </member>
        <member name="F:CefSharp.ReferrerPolicy.Origin">
            <summary>
            Strip the referrer down to the origin regardless of the redirect location.
            </summary>
        </member>
        <member name="F:CefSharp.ReferrerPolicy.ClearReferrerOnTransitionCrossOrigin">
            <summary>
            Clear the referrer when the request's referrer is cross-origin with the
            request's destination.
            </summary>
        </member>
        <member name="F:CefSharp.ReferrerPolicy.OriginClearOnTransitionFromSecureToInsecure">
            <summary>
            Strip the referrer down to the origin, but clear it entirely if the
            referrer value is HTTPS and the destination is HTTP.
            </summary>
        </member>
        <member name="F:CefSharp.ReferrerPolicy.NoReferrer">
            <summary>
            Always clear the referrer regardless of the request destination.
            </summary>
        </member>
        <member name="F:CefSharp.ReferrerPolicy.LastValue">
            <summary>
            Always the last value in this enumeration.
            </summary>
        </member>
        <member name="T:CefSharp.ResourceType">
            <summary>
            Resource type for a request.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.MainFrame">
            <summary>
            Top level page.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.SubFrame">
            <summary>
            Frame or iframe.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.Stylesheet">
            <summary>
            CSS stylesheet.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.Script">
            <summary>
            External script.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.Image">
            <summary>
            Image (jpg/gif/png/etc).
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.FontResource">
            <summary>
            Font.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.SubResource">
            <summary>
            Some other subresource. This is the default type if the actual type is unknown.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.Object">
            <summary>
            Object (or embed) tag for a plugin, or a resource that a plugin requested.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.Media">
            <summary>
            Media resource.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.Worker">
            <summary>
            Main resource of a dedicated worker.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.SharedWorker">
            <summary>
            Main resource of a shared worker.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.Prefetch">
            <summary>
            Explicitly requested prefetch.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.Favicon">
            <summary>
            Favicon.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.Xhr">
            <summary>
            XMLHttpRequest.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.Ping">
            <summary>
            A request for a ping
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.ServiceWorker">
            <summary>
            Main resource of a service worker.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.CspReport">
            <summary>
            A report of Content Security Policy violations.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceType.PluginResource">
            <summary>
            A resource that a plugin requested.
            </summary>
        </member>
        <member name="T:CefSharp.SslContentStatus">
            <summary>
            Supported SSL content status flags. See content/public/common/ssl_status.h
            for more information.
            </summary>
        </member>
        <member name="F:CefSharp.SslContentStatus.NormalContent">
            <summary>
            HTTP page, or HTTPS page with no insecure content..
            </summary>
        </member>
        <member name="F:CefSharp.SslContentStatus.DisplayedInsecureContent">
            <summary>
            HTTPS page containing "displayed" HTTP resources (e.g. images, CSS).
            </summary>
        </member>
        <member name="F:CefSharp.SslContentStatus.RanInsecureContent">
            <summary>
            HTTPS page containing "executed" HTTP resources (i.e. script)
            </summary>
        </member>
        <member name="T:CefSharp.SslVersion">
            <summary>
            Supported SSL version values. See net/ssl/ssl_connection_status_flags.h
            for more information.
            </summary>
        </member>
        <member name="F:CefSharp.SslVersion.Unknown">
            <summary>
            Unknown SSL version.
            </summary>
        </member>
        <member name="F:CefSharp.SslVersion.Ssl2">
            <summary>
            An enum constant representing the ssl 2 option.
            </summary>
        </member>
        <member name="F:CefSharp.SslVersion.Ssl3">
            <summary>
            An enum constant representing the ssl 3 option.
            </summary>
        </member>
        <member name="F:CefSharp.SslVersion.Tls1">
            <summary>
            An enum constant representing the TLS 1.0 option.
            </summary>
        </member>
        <member name="F:CefSharp.SslVersion.Tls1_1">
            <summary>
            An enum constant representing the TLS 1.1 option.
            </summary>
        </member>
        <member name="F:CefSharp.SslVersion.Tls1_2">
            <summary>
            An enum constant representing the TLS 1.2 option.
            </summary>
        </member>
        <member name="F:CefSharp.SslVersion.Tls1_3">
            <summary>
            An enum constant representing the TLS 1.3 option.
            </summary>
        </member>
        <member name="F:CefSharp.SslVersion.Quic">
            <summary>
            An enum constant representing the QUIC option.
            </summary>
        </member>
        <member name="T:CefSharp.TransitionType">
            <summary>
            Transition type for a request. Made up of one source value and 0 or more qualifiers.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.LinkClicked">
            <summary>
            Source is a link click or the JavaScript window.open function. This is
            also the default value for requests like sub-resource loads that are not navigations.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.Explicit">
            <summary>
            Source is some other "explicit" navigation action such as creating a new 
            browser or using the LoadURL function. This is also the default value
            for navigations where the actual type is unknown.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.AutoSubFrame">
            <summary>
            Source is a subframe navigation. This is any content that is automatically
            loaded in a non-toplevel frame. For example, if a page consists of several
            frames containing ads, those ad URLs will have this transition type.
            The user may not even realize the content in these pages is a separate
            frame, so may not care about the URL.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.ManualSubFrame">
            <summary>
            Source is a subframe navigation explicitly requested by the user that will
            generate new navigation entries in the back/forward list. These are
            probably more important than frames that were automatically loaded in
            the background because the user probably cares about the fact that this
            link was loaded.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.FormSubmit">
            <summary>
            Source is a form submission by the user. NOTE: In some situations
            submitting a form does not result in this transition type. This can happen
            if the form uses a script to submit the contents.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.Reload">
            <summary>
            Source is a "reload" of the page via the Reload function or by re-visiting
            the same URL. NOTE: This is distinct from the concept of whether a
            particular load uses "reload semantics" (i.e. bypasses cached data).
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.SourceMask">
            <summary>
            General mask defining the bits used for the source values.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.Blocked">
            <summary>
            Attempted to visit a URL but was blocked.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.ForwardBack">
            <summary>
            Used the Forward or Back function to navigate among browsing history.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.ChainStart">
            <summary>
            The beginning of a navigation chain.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.ChainEnd">
            <summary>
            The last transition in a redirect chain.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.ClientRedirect">
            <summary>
            Redirects caused by JavaScript or a meta refresh tag on the page.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.ServerRedirect">
            <summary>
            Redirects sent from the server by HTTP headers.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.IsRedirect">
            <summary>
            Used to test whether a transition involves a redirect.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.QualifierMask">
            <summary>
            General mask defining the bits used for the qualifiers.
            </summary>
        </member>
        <member name="T:CefSharp.UrlRequestStatus">
            <summary>
            Flags that represent CefURLRequest status.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestStatus.Unknown">
            <summary>
            Unknown status.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestStatus.Success">
            <summary>
            Request succeeded.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestStatus.IoPending">
            <summary>
            An IO request is pending, and the caller will be informed when it is completed.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestStatus.Canceled">
            <summary>
            Request was canceled programatically.
            </summary>
        </member>
        <member name="F:CefSharp.UrlRequestStatus.Failed">
            <summary>
            Request failed for some reason.
            </summary>
        </member>
        <member name="T:CefSharp.WindowOpenDisposition">
            <summary>
            The manner in which a link click should be opened.
            </summary>
        </member>
        <member name="F:CefSharp.WindowOpenDisposition.Unknown">
            <summary>
            An enum constant representing the unknown option.
            </summary>
        </member>
        <member name="F:CefSharp.WindowOpenDisposition.CurrentTab">
            <summary>
            An enum constant representing the current tab option.
            </summary>
        </member>
        <member name="F:CefSharp.WindowOpenDisposition.SingletonTab">
            <summary>
            Indicates that only one tab with the url should exist in the same window
            </summary>
        </member>
        <member name="F:CefSharp.WindowOpenDisposition.NewForegroundTab">
            <summary>
            An enum constant representing the new foreground tab option.
            </summary>
        </member>
        <member name="F:CefSharp.WindowOpenDisposition.NewBackgroundTab">
            <summary>
            An enum constant representing the new background tab option.
            </summary>
        </member>
        <member name="F:CefSharp.WindowOpenDisposition.NewPopup">
            <summary>
            An enum constant representing the new popup option.
            </summary>
        </member>
        <member name="F:CefSharp.WindowOpenDisposition.NewWindow">
            <summary>
            An enum constant representing the new window option.
            </summary>
        </member>
        <member name="F:CefSharp.WindowOpenDisposition.SaveToDisk">
            <summary>
            An enum constant representing the save to disk option.
            </summary>
        </member>
        <member name="F:CefSharp.WindowOpenDisposition.OffTheRecord">
            <summary>
            An enum constant representing the off the record option.
            </summary>
        </member>
        <member name="F:CefSharp.WindowOpenDisposition.IgnoreAction">
            <summary>
            An enum constant representing the ignore action option.
            </summary>
        </member>
        <member name="T:CefSharp.AddressChangedEventArgs">
            <summary>
            Event arguments for the AddressChanged event handler.
            </summary>
        </member>
        <member name="P:CefSharp.AddressChangedEventArgs.Browser">
            <summary>
            Access to the underlying <see cref="T:CefSharp.IBrowser"/> object
            </summary>
        </member>
        <member name="P:CefSharp.AddressChangedEventArgs.Address">
            <summary>
            The new address
            </summary>
        </member>
        <member name="M:CefSharp.AddressChangedEventArgs.#ctor(CefSharp.IBrowser,System.String)">
            <summary>
            Creates a new AddressChangedEventArgs event argument.
            </summary>
            <param name="browser">the browser object</param>
            <param name="address">the address</param>
        </member>
        <member name="T:CefSharp.ConsoleMessageEventArgs">
            <summary>
            Event arguments for the ConsoleMessage event handler set up in IWebBrowser.
            </summary>
        </member>
        <member name="M:CefSharp.ConsoleMessageEventArgs.#ctor(CefSharp.IBrowser,CefSharp.LogSeverity,System.String,System.String,System.Int32)">
            <summary>
            Creates a new ConsoleMessageEventArgs event argument.
            </summary>
            <param name="browser">browser</param>
            <param name="level">level</param>
            <param name="message">message</param>
            <param name="source">source</param>
            <param name="line">line number</param>
        </member>
        <member name="P:CefSharp.ConsoleMessageEventArgs.Browser">
            <summary>
            Access to the underlying <see cref="T:CefSharp.IBrowser"/> object
            </summary>
        </member>
        <member name="P:CefSharp.ConsoleMessageEventArgs.Level">
            <summary>
            Log level
            </summary>
        </member>
        <member name="P:CefSharp.ConsoleMessageEventArgs.Message">
            <summary>
            The message text of the console message.
            </summary>
        </member>
        <member name="P:CefSharp.ConsoleMessageEventArgs.Source">
            <summary>
            The source of the console message.
            </summary>
        </member>
        <member name="P:CefSharp.ConsoleMessageEventArgs.Line">
            <summary>
            The line number that generated the console message.
            </summary>
        </member>
        <member name="T:CefSharp.FrameLoadEndEventArgs">
            <summary>
            Event arguments to the FrameLoadEnd event handler set up in IWebBrowser.
            </summary>
        </member>
        <member name="M:CefSharp.FrameLoadEndEventArgs.#ctor(CefSharp.IBrowser,CefSharp.IFrame,System.Int32)">
            <summary>
            Creates a new FrameLoadEnd event args
            </summary>
            <param name="browser">browser</param>
            <param name="frame">frame</param>
            <param name="httpStatusCode">http statusCode</param>
        </member>
        <member name="P:CefSharp.FrameLoadEndEventArgs.Browser">
            <summary>
            The browser that contains the frame that finished loading.
            </summary>
        </member>
        <member name="P:CefSharp.FrameLoadEndEventArgs.Frame">
            <summary>
            The frame that finished loading.
            </summary>
        </member>
        <member name="P:CefSharp.FrameLoadEndEventArgs.Url">
            <summary>
            The URL that was loaded.
            </summary>
        </member>
        <member name="P:CefSharp.FrameLoadEndEventArgs.HttpStatusCode">
            <summary>
            Http Status Code
            </summary>
        </member>
        <member name="T:CefSharp.FrameLoadStartEventArgs">
            <summary>
            Event arguments to the FrameLoadStart event handler set up in IWebBrowser.
            </summary>
        </member>
        <member name="M:CefSharp.FrameLoadStartEventArgs.#ctor(CefSharp.IBrowser,CefSharp.IFrame,CefSharp.TransitionType)">
            <summary>
            Creates a new FrameLoadStart event args
            </summary>
            <param name="browser">browser</param>
            <param name="frame">frame</param>
            <param name="transitionType"> provides information about the source of the navigation and an accurate value is only
            available in the browser process</param>
        </member>
        <member name="P:CefSharp.FrameLoadStartEventArgs.Browser">
            <summary>
            The browser object
            </summary>
        </member>
        <member name="P:CefSharp.FrameLoadStartEventArgs.Frame">
            <summary>
            The frame that just started loading.
            </summary>
        </member>
        <member name="P:CefSharp.FrameLoadStartEventArgs.Url">
            <summary>
            The URL that was loaded.
            </summary>
        </member>
        <member name="P:CefSharp.FrameLoadStartEventArgs.TransitionType">
            <summary>
            TransitionType provides information about the source of the navigation.
            </summary>
        </member>
        <member name="T:CefSharp.LoadErrorEventArgs">
            <summary>
            Event arguments to the LoadError event handler set up in IWebBrowser.
            </summary>
        </member>
        <member name="M:CefSharp.LoadErrorEventArgs.#ctor(CefSharp.IBrowser,CefSharp.IFrame,CefSharp.CefErrorCode,System.String,System.String)">
            <summary>
            LoadErrorEventArgs
            </summary>
            <param name="browser">browser</param>
            <param name="frame">frame</param>
            <param name="errorCode">error code</param>
            <param name="errorText">error text</param>
            <param name="failedUrl">failed url</param>
        </member>
        <member name="P:CefSharp.LoadErrorEventArgs.Browser">
            <summary>
            The browser object
            </summary>
        </member>
        <member name="P:CefSharp.LoadErrorEventArgs.Frame">
            <summary>
            The frame that failed to load.
            </summary>
        </member>
        <member name="P:CefSharp.LoadErrorEventArgs.FailedUrl">
            <summary>
            The URL that failed to load.
            </summary>
        </member>
        <member name="P:CefSharp.LoadErrorEventArgs.ErrorCode">
            <summary>
            The error code.
            </summary>
        </member>
        <member name="P:CefSharp.LoadErrorEventArgs.ErrorText">
            <summary>
            The error text.
            </summary>
        </member>
        <member name="T:CefSharp.LoadingStateChangedEventArgs">
            <summary>
            Event arguments to the LoadingStateChanged event handler set up in IWebBrowser.
            </summary>
        </member>
        <member name="P:CefSharp.LoadingStateChangedEventArgs.CanGoForward">
            <summary>
            Returns true if the browser can navigate forwards. 
            </summary>
        </member>
        <member name="P:CefSharp.LoadingStateChangedEventArgs.CanGoBack">
            <summary>
            Returns true if the browser can navigate backwards. 
            </summary>
        </member>
        <member name="P:CefSharp.LoadingStateChangedEventArgs.CanReload">
            <summary>
            Returns true if the browser can reload. 
            </summary>
        </member>
        <member name="P:CefSharp.LoadingStateChangedEventArgs.IsLoading">
            <summary>
            Returns true if the browser is loading. 
            </summary>
        </member>
        <member name="P:CefSharp.LoadingStateChangedEventArgs.Browser">
            <summary>
            Access to the underlying <see cref="T:CefSharp.IBrowser"/> object
            </summary>
        </member>
        <member name="M:CefSharp.LoadingStateChangedEventArgs.#ctor(CefSharp.IBrowser,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            LoadingStateChangedEventArgs
            </summary>
            <param name="browser">browser</param>
            <param name="canGoBack">can go back</param>
            <param name="canGoForward">can go forward</param>
            <param name="isLoading">is loading</param>
        </member>
        <member name="T:CefSharp.StatusMessageEventArgs">
            <summary>
            Event arguments to the StatusMessage event handler set up in IWebBrowser.
            </summary>
        </member>
        <member name="M:CefSharp.StatusMessageEventArgs.#ctor(CefSharp.IBrowser,System.String)">
            <summary>
            StatusMessageEventArgs
            </summary>
            <param name="browser">browser</param>
            <param name="value">status message value</param>
        </member>
        <member name="P:CefSharp.StatusMessageEventArgs.Browser">
            <summary>
            The browser object
            </summary>
        </member>
        <member name="P:CefSharp.StatusMessageEventArgs.Value">
            <summary>
            The value of the status message.
            </summary>
        </member>
        <member name="T:CefSharp.TitleChangedEventArgs">
            <summary>
            Event arguments to the TitleChanged event handler.
            </summary>
        </member>
        <member name="P:CefSharp.TitleChangedEventArgs.Browser">
            <summary>
            Access to the underlying <see cref="T:CefSharp.IBrowser"/> object
            </summary>
        </member>
        <member name="P:CefSharp.TitleChangedEventArgs.Title">
            <summary>
            The new title
            </summary>
        </member>
        <member name="M:CefSharp.TitleChangedEventArgs.#ctor(CefSharp.IBrowser,System.String)">
            <summary>
            Creates a new TitleChanged event arg
            </summary>
            <param name="browser">browser</param>
            <param name="title">the new title</param>
        </member>
        <member name="T:CefSharp.IBrowserProcessHandler">
            <summary>
            Implement this interface to handle events related to browser process callbacks.
            The methods of this class will be called on the CEF UI thread unless otherwise indicated. . 
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserProcessHandler.OnContextInitialized">
            <summary>
            Called on the CEF UI thread immediately after the CEF context has been initialized.
            You can now access the Global RequestContext through Cef.GetGlobalRequestContext() - this is the
            first place you can set Preferences (e.g. proxy settings, spell check dictionaries).
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserProcessHandler.OnScheduleMessagePumpWork(System.Int64)">
            <summary>
            Called from any thread when work has been scheduled for the browser process
            main (UI) thread. This callback is used in combination with CefSettings.
            ExternalMessagePump and Cef.DoMessageLoopWork() in cases where the CEF
            message loop must be integrated into an existing application message loop
            (see additional comments and warnings on Cef.DoMessageLoopWork). This
            callback should schedule a Cef.DoMessageLoopWork() call to happen on the
            main (UI) thread. 
            </summary>
            <param name="delay">is the requested delay in milliseconds. If
            delay is less than or equal to 0 then the call should happen reasonably soon. If
            delay is greater than 0 then the call should be scheduled to happen after the
            specified delay and any currently pending scheduled call should be
            cancelled.</param>
        </member>
        <member name="T:CefSharp.IContextMenuHandler">
            <summary>
            Implement this interface to handle context menu events. 
            </summary>
        </member>
        <member name="M:CefSharp.IContextMenuHandler.OnBeforeContextMenu(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IContextMenuParams,CefSharp.IMenuModel)">
            <summary>
            Called before a context menu is displayed. The model can be cleared to show no context menu or
            modified to show a custom menu.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="frame">The frame the request is coming from</param>
            <param name="parameters">provides information about the context menu state</param>
            <param name="model">initially contains the default context menu</param>
        </member>
        <member name="M:CefSharp.IContextMenuHandler.OnContextMenuCommand(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IContextMenuParams,CefSharp.CefMenuCommand,CefSharp.CefEventFlags)">
            <summary>
            Called to execute a command selected from the context menu. See
            cef_menu_id_t for the command ids that have default implementations. All
            user-defined command ids should be between MENU_ID_USER_FIRST and
            MENU_ID_USER_LAST.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="frame">The frame the request is coming from</param>
            <param name="parameters">will have the same values as what was passed to</param>
            <param name="commandId">menu command id</param>
            <param name="eventFlags">event flags</param>
            <returns>Return true if the command was handled or false for the default implementation.</returns>
        </member>
        <member name="M:CefSharp.IContextMenuHandler.OnContextMenuDismissed(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame)">
            <summary>
            Called when the context menu is dismissed irregardless of whether the menu
            was empty or a command was selected.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="frame">The frame the request is coming from</param>
        </member>
        <member name="M:CefSharp.IContextMenuHandler.RunContextMenu(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IContextMenuParams,CefSharp.IMenuModel,CefSharp.IRunContextMenuCallback)">
            <summary>
            Called to allow custom display of the context menu.
            For custom display return true and execute callback either synchronously or asynchronously with the selected command Id.
            For default display return false. Do not keep references to parameters or model outside of this callback. 
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="frame">The frame the request is coming from</param>
            <param name="parameters">provides information about the context menu state</param>
            <param name="model">contains the context menu model resulting from OnBeforeContextMenu</param>
            <param name="callback">the callback to execute for custom display</param>
            <returns>For custom display return true and execute callback either synchronously or asynchronously with the selected command ID.</returns>
        </member>
        <member name="T:CefSharp.IDialogHandler">
            <summary>
            Implement this interface to handle dialog events. The methods of this class will be called on the CEF UI thread.
            </summary>
        </member>
        <member name="M:CefSharp.IDialogHandler.OnFileDialog(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefFileDialogMode,CefSharp.CefFileDialogFlags,System.String,System.String,System.Collections.Generic.List{System.String},System.Int32,CefSharp.IFileDialogCallback)">
            <summary>
            Runs a file chooser dialog. 
            </summary>
            <example>
            To test assign something like TempFileDialogHandler (from CefSharp.Example) to DialogHandler e.g.
            <code>
            browser.DialogHandler = new TempFileDialogHandler();
            </code>
            Example URL to use for file browsing http://www.cs.tut.fi/~jkorpela/forms/file.html#example
            Simply click browse, the space next to the browse button should be populated with a randomly generated filename.
            </example>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="mode">represents the type of dialog to display</param>
            <param name="flags">further specifies behavior dialog should exhibit</param>
            <param name="title">the title to be used for the dialog. It may be empty to show the default title ("Open" or "Save" 
            depending on the mode).</param>
            <param name="defaultFilePath">is the path with optional directory and/or file name component that
            should be initially selected in the dialog.</param>
            <param name="acceptFilters">are used to restrict the selectable file types and may any combination of
            (a) valid lower-cased MIME types (e.g. "text/*" or "image/*"),
            (b) individual file extensions (e.g. ".txt" or ".png"),
            (c) combined description and file extension delimited using "|" and ";" (e.g. "Image Types|.png;.gif;.jpg").</param>
            <param name="selectedAcceptFilter">is the 0-based index of the filter that should be selected by default.</param>
            <param name="callback">Callback interface for asynchronous continuation of file dialog requests.</param>
            <returns>To display a custom dialog return true. To display the default dialog return false.</returns>
        </member>
        <member name="T:CefSharp.IDisplayHandler">
            <summary>
            Handle events related to browser display state.
            </summary>
        </member>
        <member name="M:CefSharp.IDisplayHandler.OnAddressChanged(CefSharp.IWebBrowser,CefSharp.AddressChangedEventArgs)">
            <summary>
            Called when a frame's address has changed. 
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="addressChangedArgs">args</param>
        </member>
        <member name="M:CefSharp.IDisplayHandler.OnAutoResize(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.Structs.Size)">
            <summary>
            Called when auto-resize is enabled via IBrowserHost.SetAutoResizeEnabled and the contents have auto-resized.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="newSize">will be the desired size in view coordinates</param>
            <returns>Return true if the resize was handled or false for default handling. </returns>
        </member>
        <member name="M:CefSharp.IDisplayHandler.OnTitleChanged(CefSharp.IWebBrowser,CefSharp.TitleChangedEventArgs)">
            <summary>
            Called when the page title changes.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="titleChangedArgs">args</param>
        </member>
        <member name="M:CefSharp.IDisplayHandler.OnFaviconUrlChange(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Collections.Generic.IList{System.String})">
            <summary>
            Called when the page icon changes.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="urls">list of urls where the favicons can be downloaded</param>
        </member>
        <member name="M:CefSharp.IDisplayHandler.OnFullscreenModeChange(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Boolean)">
            <summary>
            Called when web content in the page has toggled fullscreen mode. The client is
            responsible for resizing the browser if desired.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="fullscreen">If true the content will automatically be sized to fill the browser content area.
            If false the content will automatically return to its original size and position.</param>
        </member>
        <member name="M:CefSharp.IDisplayHandler.OnLoadingProgressChange(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Double)">
            <summary>
            Called when the overall page loading progress has changed
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="progress">ranges from 0.0 to 1.0.</param>
        </member>
        <member name="M:CefSharp.IDisplayHandler.OnTooltipChanged(CefSharp.IWebBrowser,System.String@)">
            <summary>
            Called when the browser is about to display a tooltip. text contains the
            text that will be displayed in the tooltip. You can optionally modify text
            and then return false to allow the browser to display the tooltip.
            When window rendering is disabled the application is responsible for
            drawing tooltips and the return value is ignored.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="text">the text that will be displayed in the tooltip</param>
            <returns>To handle the display of the tooltip yourself return true otherwise return false
            to allow the browser to display the tooltip.</returns>
            <remarks>Only called when using Off-screen rendering (WPF and OffScreen)</remarks>
        </member>
        <member name="M:CefSharp.IDisplayHandler.OnStatusMessage(CefSharp.IWebBrowser,CefSharp.StatusMessageEventArgs)">
            <summary>
            Called when the browser receives a status message.
            </summary>
            <param name="chromiumWebBrowser">The <see cref="T:CefSharp.IWebBrowser"/> control this popup is related to.</param>
            <param name="statusMessageArgs">args</param>
        </member>
        <member name="M:CefSharp.IDisplayHandler.OnConsoleMessage(CefSharp.IWebBrowser,CefSharp.ConsoleMessageEventArgs)">
            <summary>
            Called to display a console message. 
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="consoleMessageArgs">args</param>
            <returns>Return true to stop the message from being output to the console.</returns>
        </member>
        <member name="T:CefSharp.IDownloadHandler">
            <summary>
            Class used to handle file downloads.
            The methods of this class will called on the CEF UI thread. 
            </summary>
        </member>
        <member name="M:CefSharp.IDownloadHandler.OnBeforeDownload(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.DownloadItem,CefSharp.IBeforeDownloadCallback)">
            <summary>
            Called before a download begins.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">The browser instance</param>
            <param name="downloadItem">Represents the file being downloaded.</param>
            <param name="callback">Callback interface used to asynchronously continue a download.</param>
        </member>
        <member name="M:CefSharp.IDownloadHandler.OnDownloadUpdated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.DownloadItem,CefSharp.IDownloadItemCallback)">
            <summary>
            Called when a download's status or progress information has been updated. This may be called multiple times before and after <see cref="M:CefSharp.IDownloadHandler.OnBeforeDownload(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.DownloadItem,CefSharp.IBeforeDownloadCallback)"/>.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">The browser instance</param>
            <param name="downloadItem">Represents the file being downloaded.</param>
            <param name="callback">The callback used to Cancel/Pause/Resume the process</param>
        </member>
        <member name="T:CefSharp.IDragHandler">
            <summary>
            Implement this interface to handle events related to dragging.
            The methods of this class will be called on the UI thread. 
            </summary>
        </member>
        <member name="M:CefSharp.IDragHandler.OnDragEnter(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IDragData,CefSharp.Enums.DragOperationsMask)">
            <summary>
            Called when an external drag event enters the browser window.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="dragData">contains the drag event data</param>
            <param name="mask">represents the type of drag operation</param>
            <returns>Return false for default drag handling behavior or true to cancel the drag event. </returns>
        </member>
        <member name="M:CefSharp.IDragHandler.OnDraggableRegionsChanged(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.Collections.Generic.IList{CefSharp.DraggableRegion})">
            <summary>
            Called whenever draggable regions for the browser window change.
            These can be specified using the '-webkit-app-region: drag/no-drag' CSS-property.
            If draggable regions are never defined in a document this method will also never be called.
            If the last draggable region is removed from a document this method will be called with an empty IList. 
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="frame">The frame</param>
            <param name="regions">List of <see cref="T:CefSharp.DraggableRegion"/> objects or null if last region was removed.</param>
        </member>
        <member name="T:CefSharp.IFindHandler">
            <summary>
            Implement this interface to handle events related to find results.
            The methods of this class will be called on the CEF UI thread.
            </summary>
        </member>
        <member name="M:CefSharp.IFindHandler.OnFindResult(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Int32,System.Int32,CefSharp.Structs.Rect,System.Int32,System.Boolean)">
            <summary>
            Called to report find results returned by <see cref="M:CefSharp.IBrowserHost.Find(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)"/>
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="identifier">is the identifier passed to Find()</param>
            <param name="count">is the number of matches currently identified</param>
            <param name="selectionRect">is the location of where the match was found (in window coordinates)</param>
            <param name="activeMatchOrdinal">is the current position in the search results</param>
            <param name="finalUpdate">is true if this is the last find notification.</param>
        </member>
        <member name="T:CefSharp.IFocusHandler">
            <summary>
            Implement this interface to handle events related to focus.
            The methods of this class will be called on the CEF UI thread. 
            </summary>
        </member>
        <member name="M:CefSharp.IFocusHandler.OnGotFocus(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>
            Called when the browser component has received focus.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
        </member>
        <member name="M:CefSharp.IFocusHandler.OnSetFocus(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefFocusSource)">
            <summary>
            Called when the browser component is requesting focus.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object, do not keep a reference to this object outside of this method</param>
            <param name="source">Indicates where the focus request is originating from.</param>
            <returns>Return false to allow the focus to be set or true to cancel setting the focus.</returns>
        </member>
        <member name="M:CefSharp.IFocusHandler.OnTakeFocus(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Boolean)">
            <summary>
            Called when the browser component is about to lose focus.
            For instance, if focus was on the last HTML element and the user pressed the TAB key.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="next">Will be true if the browser is giving focus to the next component
            and false if the browser is giving focus to the previous component.</param>
        </member>
        <member name="T:CefSharp.IJsDialogHandler">
            <summary>
            Implement this interface to handle events related to JavaScript dialogs.
            The methods of this class will be called on the CEF UI thread. 
            </summary>
        </member>
        <member name="M:CefSharp.IJsDialogHandler.OnJSDialog(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,CefSharp.CefJsDialogType,System.String,System.String,CefSharp.IJsDialogCallback,System.Boolean@)">
            <summary>
            Called to run a JavaScript dialog.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="originUrl">originating url</param>
            <param name="dialogType">Dialog Type</param>
            <param name="messageText">Message Text</param>
            <param name="defaultPromptText">value will be specified for prompt dialogs only</param>
            <param name="callback">Callback can be executed inline or in an async fashion</param>
            <param name="suppressMessage">Set suppressMessage to true and return false to suppress the message (suppressing messages is preferable to immediately executing the callback as this is used to detect presumably malicious behavior like spamming alert messages in onbeforeunload). Set suppressMessage to false and return false to use the default implementation (the default implementation will show one modal dialog at a time and suppress any additional dialog requests until the displayed dialog is dismissed).</param>
            <returns>Return true if the application will use a custom dialog or if the callback has been executed immediately. Custom dialogs may be either modal or modeless. If a custom dialog is used the application must execute |callback| once the custom dialog is dismissed.</returns>
        </member>
        <member name="M:CefSharp.IJsDialogHandler.OnBeforeUnloadDialog(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Boolean,CefSharp.IJsDialogCallback)">
            <summary>
            Called to run a dialog asking the user if they want to leave a page. Return false to use the default dialog implementation.
            Return true if the application will use a custom dialog or if the callback has been executed immediately.
            Custom dialogs may be either modal or modeless. If a custom dialog is used the application must execute <paramref name="callback"/>
            once the custom dialog is dismissed.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="messageText">message text (optional)</param>
            <param name="isReload">indicates a page reload</param>
            <param name="callback">Callback can be executed inline or in an async fashion</param>
            <returns>Return false to use the default dialog implementation otherwise return true to handle with your own custom implementation.</returns>
        </member>
        <member name="M:CefSharp.IJsDialogHandler.OnResetDialogState(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>
            Called to cancel any pending dialogs and reset any saved dialog state. Will
            be called due to events like page navigation irregardless of whether any
            dialogs are currently pending.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
        </member>
        <member name="M:CefSharp.IJsDialogHandler.OnDialogClosed(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>
            Called when the default implementation dialog is closed.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
        </member>
        <member name="T:CefSharp.IKeyboardHandler">
            <summary>
            Implement this interface to handle events related to keyboard input.
            </summary>
        </member>
        <member name="M:CefSharp.IKeyboardHandler.OnPreKeyEvent(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.KeyType,System.Int32,System.Int32,CefSharp.CefEventFlags,System.Boolean,System.Boolean@)">
            <summary>
            Called before a keyboard event is sent to the renderer.
            Return true if the event was handled or false
            otherwise. If the event will be handled in <see cref="M:CefSharp.IKeyboardHandler.OnKeyEvent(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.KeyType,System.Int32,System.Int32,CefSharp.CefEventFlags,System.Boolean)"/> as a keyboard
            shortcut set isKeyboardShortcut to true and return false.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">The browser instance.</param>
            <param name="type">Whether this was a key up/down/raw/etc...</param>
            <param name="windowsKeyCode">
            The Windows key code for the key event. This value is used by the DOM
            specification. Sometimes it comes directly from the event (i.e. on
            Windows) and sometimes it's determined using a mapping function. See
            WebCore/platform/chromium/KeyboardCodes.h for the list of values.
            </param>
            <param name="nativeKeyCode">The native key code. On Windows this appears to be in the format of WM_KEYDOWN/WM_KEYUP/etc... lParam data.</param>
            <param name="modifiers">What other modifier keys are currently down: Shift/Control/Alt/OS X Command/etc...</param>
            <param name="isSystemKey">
            Indicates whether the event is considered a "system key" event (see
            http://msdn.microsoft.com/en-us/library/ms646286(VS.85).aspx for details).
            </param>
            <param name="isKeyboardShortcut">See the summary for an explanation of when to set this to true.</param>
            <returns>Returns true if the event was handled or false otherwise.</returns>
        </member>
        <member name="M:CefSharp.IKeyboardHandler.OnKeyEvent(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.KeyType,System.Int32,System.Int32,CefSharp.CefEventFlags,System.Boolean)">
            <summary>
            Called after the renderer and JavaScript in the page has had a chance to
            handle the event. Return true if the keyboard event was handled or false otherwise.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">The browser instance.</param>
            <param name="type">Whether this was a key up/down/raw/etc...</param>
            <param name="windowsKeyCode">
            The Windows key code for the key event. This value is used by the DOM
            specification. Sometimes it comes directly from the event (i.e. on
            Windows) and sometimes it's determined using a mapping function. See
            WebCore/platform/chromium/KeyboardCodes.h for the list of values.
            </param>
            <param name="nativeKeyCode">The native key code. On Windows this appears to be in the format of WM_KEYDOWN/WM_KEYUP/etc... lParam data.</param>
            <param name="modifiers">What other modifier keys are currently down: Shift/Control/Alt/OS X Command/etc...</param>
            <param name="isSystemKey">
            Indicates whether the event is considered a "system key" event (see
            http://msdn.microsoft.com/en-us/library/ms646286(VS.85).aspx for details).
            </param>
            <returns>Return true if the keyboard event was handled or false otherwise.</returns>
        </member>
        <member name="T:CefSharp.ILifeSpanHandler">
            <summary>
            Implement this interface to handle events related to browser life span.
            The methods of this class will be called on the CEF UI thread unless otherwise indicated. 
            </summary>
        </member>
        <member name="M:CefSharp.ILifeSpanHandler.OnBeforePopup(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.String,System.String,CefSharp.WindowOpenDisposition,System.Boolean,CefSharp.IPopupFeatures,CefSharp.IWindowInfo,CefSharp.IBrowserSettings,System.Boolean@,CefSharp.IWebBrowser@)">
            <summary>
            Called before a popup window is created.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">The browser instance that launched this popup.</param>
            <param name="frame">The HTML frame that launched this popup.</param>
            <param name="targetUrl">The URL of the popup content. (This may be empty/null)</param>
            <param name="targetFrameName">The name of the popup. (This may be empty/null)</param>
            <param name="targetDisposition">The value indicates where the user intended to
            open the popup (e.g. current tab, new tab, etc)</param>
            <param name="userGesture">The value will be true if the popup was opened via explicit user gesture
            (e.g. clicking a link) or false if the popup opened automatically (e.g. via the DomContentLoaded event).</param>
            <param name="popupFeatures"> structure contains additional information about the requested popup window</param>
            <param name="windowInfo">window information</param>
            <param name="browserSettings">browser settings, defaults to source browsers</param>
            <param name="noJavascriptAccess">value indicates whether the new browser window should be scriptable
            and in the same process as the source browser.</param>
            <param name="newBrowser">EXPERIMENTAL - A newly created browser that will host the popup. Set to null
            for default behaviour.</param>
            <returns>To cancel creation of the popup window return true otherwise return false.</returns>
            <remarks>
            CEF documentation:
            
            Called on the IO thread before a new popup window is created. The |browser|
            and |frame| parameters represent the source of the popup request. The
            |target_url| and |target_frame_name| values may be empty if none were
            specified with the request. The |popupFeatures| structure contains
            information about the requested popup window. To allow creation of the
            popup window optionally modify |windowInfo|, |client|, |settings| and
            |no_javascript_access| and return false. To cancel creation of the popup
            window return true. The |client| and |settings| values will default to the
            source browser's values. The |no_javascript_access| value indicates whether
            the new browser window should be scriptable and in the same process as the
            source browser.
            </remarks>
        </member>
        <member name="M:CefSharp.ILifeSpanHandler.OnAfterCreated(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>
            Called after a new browser is created.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">The browser instance</param>
        </member>
        <member name="M:CefSharp.ILifeSpanHandler.DoClose(CefSharp.IWebBrowser,CefSharp.IBrowser)">
             <summary>
             Called when a browser has recieved a request to close. This may result
             directly from a call to CefBrowserHost::CloseBrowser() or indirectly if the
             browser is a top-level OS window created by CEF and the user attempts to
             close the window. This method will be called after the JavaScript
             'onunload' event has been fired. It will not be called for browsers after
             the associated OS window has been destroyed (for those browsers it is no
             longer possible to cancel the close).
            
             If CEF created an OS window for the browser returning false will send an OS
             close notification to the browser window's top-level owner (e.g. WM_CLOSE
             on Windows, performClose: on OS-X and "delete_event" on Linux). If no OS
             window exists (window rendering disabled) returning false will cause the
             browser object to be destroyed immediately. Return true if the browser is
             parented to another window and that other window needs to receive close
             notification via some non-standard technique.
            
             If an application provides its own top-level window it should handle OS
             close notifications by calling CefBrowserHost::CloseBrowser(false) instead
             of immediately closing (see the example below). This gives CEF an
             opportunity to process the 'onbeforeunload' event and optionally cancel the
             close before DoClose() is called.
            
             The CefLifeSpanHandler::OnBeforeClose() method will be called immediately
             before the browser object is destroyed. The application should only exit
             after OnBeforeClose() has been called for all existing browsers.
            
             If the browser represents a modal window and a custom modal loop
             implementation was provided in CefLifeSpanHandler::RunModal() this callback
             should be used to restore the opener window to a usable state.
            
             By way of example consider what should happen during window close when the
             browser is parented to an application-provided top-level OS window.
             1.  User clicks the window close button which sends an OS close
                 notification (e.g. WM_CLOSE on Windows, performClose: on OS-X and
                 "delete_event" on Linux).
             2.  Application's top-level window receives the close notification and:
                 A. Calls CefBrowserHost::CloseBrowser(false).
                 B. Cancels the window close.
             3.  JavaScript 'onbeforeunload' handler executes and shows the close
                 confirmation dialog (which can be overridden via
                 CefJSDialogHandler::OnBeforeUnloadDialog()).
             4.  User approves the close.
             5.  JavaScript 'onunload' handler executes.
             6.  Application's DoClose() handler is called. Application will:
                 A. Set a flag to indicate that the next close attempt will be allowed.
                 B. Return false.
             7.  CEF sends an OS close notification.
             8.  Application's top-level window receives the OS close notification and
                 allows the window to close based on the flag from #6B.
             9.  Browser OS window is destroyed.
             10. Application's CefLifeSpanHandler::OnBeforeClose() handler is called and
                 the browser object is destroyed.
             11. Application exits by calling CefQuitMessageLoop() if no other browsers
                 exist.
             </summary>
             <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
             <param name="browser">The browser instance - check if IsDisposed as it's possible when the browser is disposing</param>
             <returns>For default behaviour return false</returns>
        </member>
        <member name="M:CefSharp.ILifeSpanHandler.OnBeforeClose(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>
            Called before a CefBrowser window (either the main browser for <see cref="T:CefSharp.IWebBrowser"/>, 
            or one of its children)
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">The browser instance</param>
        </member>
        <member name="T:CefSharp.ILoadHandler">
            <summary>
            Implement this interface to handle events related to browser load status.
            The methods of this interface will be called on the CEF UI thread. Blocking in these methods
            will likely cause your UI to become unresponsive and/or hang.
            </summary>
        </member>
        <member name="M:CefSharp.ILoadHandler.OnLoadingStateChange(CefSharp.IWebBrowser,CefSharp.LoadingStateChangedEventArgs)">
            <summary>
            Called when the loading state has changed. This callback will be executed twice
            once when loading is initiated either programmatically or by user action,
            and once when loading is terminated due to completion, cancellation of failure.
            This method will be called on the CEF UI thread.
            Blocking this thread will likely cause your UI to become unresponsive and/or hang.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="loadingStateChangedArgs">args</param>
        </member>
        <member name="M:CefSharp.ILoadHandler.OnFrameLoadStart(CefSharp.IWebBrowser,CefSharp.FrameLoadStartEventArgs)">
            <summary>
            Called when the browser begins loading a frame.
            The <see cref="P:CefSharp.FrameLoadEndEventArgs.Frame"/> value will never be empty
            Check the <see cref="P:CefSharp.IFrame.IsMain"/> method to see if this frame is the main frame.
            Multiple frames may be loading at the same time. Sub-frames may start or continue loading after the main frame load has ended.
            This method may not be called for a particular frame if the load request for that frame fails.
            For notification of overall browser load status use <see cref="M:CefSharp.ILoadHandler.OnLoadingStateChange(CefSharp.IWebBrowser,CefSharp.LoadingStateChangedEventArgs)"/> instead. 
            This method will be called on the CEF UI thread.
            Blocking this thread will likely cause your UI to become unresponsive and/or hang.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="frameLoadStartArgs">args</param>
            <remarks>Whilst thist may seem like a logical place to execute js, it's called before the DOM has been loaded, implement
            <see cref="M:CefSharp.IRenderProcessMessageHandler.OnContextCreated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame)"/> as it's called when the underlying V8Context is created
            (Only called for the main frame at this stage)</remarks>
        </member>
        <member name="M:CefSharp.ILoadHandler.OnFrameLoadEnd(CefSharp.IWebBrowser,CefSharp.FrameLoadEndEventArgs)">
            <summary>
            Called when the browser is done loading a frame.
            The <see cref="P:CefSharp.FrameLoadEndEventArgs.Frame"/> value will never be empty
            Check the <see cref="P:CefSharp.IFrame.IsMain"/> method to see if this frame is the main frame.
            Multiple frames may be loading at the same time. Sub-frames may start or continue loading after the main frame load has ended.
            This method will always be called for all frames irrespective of whether the request completes successfully. 
            This method will be called on the CEF UI thread.
            Blocking this thread will likely cause your UI to become unresponsive and/or hang.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="frameLoadEndArgs">args</param>
        </member>
        <member name="M:CefSharp.ILoadHandler.OnLoadError(CefSharp.IWebBrowser,CefSharp.LoadErrorEventArgs)">
            <summary>
            Called when the resource load for a navigation fails or is canceled.
            <see cref="P:CefSharp.LoadErrorEventArgs.ErrorCode"/> is the error code number, <see cref="P:CefSharp.LoadErrorEventArgs.ErrorText"/> is the error text and
            <see cref="P:CefSharp.LoadErrorEventArgs.FailedUrl"/> is the URL that failed to load. See net\base\net_error_list.h
            for complete descriptions of the error codes.
            This method will be called on the CEF UI thread.
            Blocking this thread will likely cause your UI to become unresponsive and/or hang.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="loadErrorArgs">args</param>
        </member>
        <member name="T:CefSharp.IRenderProcessMessageHandler">
            <summary>
            Messages sent by the render process can be handled by implementing this
            interface.
            </summary>
        </member>
        <member name="M:CefSharp.IRenderProcessMessageHandler.OnContextCreated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame)">
            <summary>
            OnContextCreated is called in the Render process immediately after a CefV8Context is created.
            An IPC message is immediately sent to notify the context has been created (should be safe to execute javascript). 
            If the page has no javascript then no V8Context will be created and as a result this method will not be called.
            Called for every V8Context. To determine if V8Context is from Main frame check <see cref="P:CefSharp.IFrame.IsMain"/>
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">The browser object</param>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:CefSharp.IRenderProcessMessageHandler.OnContextReleased(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame)">
            <summary>
            OnContextReleased is called in the Render process immediately before the CefV8Context is released.
            An IPC message is immediately sent to notify the context has been released (cannot execute javascript this point).
            If the page had no javascript then the context would not have been created and as a result this method will not be called.
            Called for every V8Context. To determine if V8Context is from Main frame check <see cref="P:CefSharp.IFrame.IsMain"/>
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">The browser object</param>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:CefSharp.IRenderProcessMessageHandler.OnFocusedNodeChanged(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IDomNode)">
            <summary>
            Invoked when an element in the UI gains focus (or possibly no
            element gains focus; i.e. an element lost focus).
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">The browser object</param>
            <param name="frame">The frame object</param>
            <param name="node">An object with information about the node (if any) that has focus.</param>
        </member>
        <member name="M:CefSharp.IRenderProcessMessageHandler.OnUncaughtException(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.JavascriptException)">
            <summary>
            OnUncaughtException is called for global uncaught exceptions in a frame. Execution of this callback is disabled by default. 
            To enable set CefSettings.UncaughtExceptionStackSize > 0.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">The browser object</param>
            <param name="frame">The frame</param>
            <param name="exception">The exception object with the message and stacktrace.</param>
        </member>
        <member name="T:CefSharp.IRequestContextHandler">
            <summary>
            Implement this interface to provide handler implementations. The handler
            instance will not be released until all objects related to the context have
            been destroyed. Implement this interface to cancel loading of specific plugins
            </summary>
        </member>
        <member name="M:CefSharp.IRequestContextHandler.OnRequestContextInitialized(CefSharp.IRequestContext)">
            <summary>
            Called immediately after the request context has been initialized.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread.
            </summary>
            <param name="requestContext">the request context</param>
        </member>
        <member name="M:CefSharp.IRequestContextHandler.OnBeforePluginLoad(System.String,System.String,System.Boolean,System.String,CefSharp.WebPluginInfo,CefSharp.PluginPolicy@)">
            <summary>
            Called on the CEF IO thread before a plugin instance is loaded.
            The default plugin policy can be set at runtime using the `--plugin-policy=[allow|detect|block]` command-line flag.
            </summary>
            <param name="mimeType">is the mime type of the plugin that will be loaded</param>
            <param name="url">is the content URL that the plugin will load and may be empty</param>
            <param name="isMainFrame">will be true if the plugin is being loaded in the main (top-level) frame</param>
            <param name="topOriginUrl">is the URL for the top-level frame that contains the plugin</param>
            <param name="pluginInfo">includes additional information about the plugin that will be loaded</param>
            <param name="pluginPolicy">Modify and return true to change the policy.</param>
            <returns>Return false to use the recommended policy. Modify and return true to change the policy.</returns>
        </member>
        <member name="M:CefSharp.IRequestContextHandler.GetResourceRequestHandler(CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean,System.String,System.Boolean@)">
            <summary>
            Called on the CEF IO thread before a resource request is initiated.
            This method will not be called if the client associated with <paramref name="browser"/> returns a non-NULL value
            from <see cref="M:CefSharp.IRequestHandler.GetResourceRequestHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean,System.String,System.Boolean@)"/> for the same request (identified by <see cref="P:CefSharp.IRequest.Identifier"/>).
            </summary>
            <param name="browser">represent the source browser of the request, and may be null for requests originating from service workers.</param>
            <param name="frame">represent the source frame of the request, and may be null for requests originating from service workers.</param>
            <param name="request">represents the request contents and cannot be modified in this callback</param>
            <param name="isNavigation">will be true if the resource request is a navigation</param>
            <param name="isDownload">will be true if the resource request is a download</param>
            <param name="requestInitiator">is the origin (scheme + domain) of the page that initiated the request</param>
            <param name="disableDefaultHandling">Set to true to disable default handling of the request, in which case it will need to be handled via <see cref="M:CefSharp.IResourceRequestHandler.GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)"/> or it will be canceled</param>
            <returns>To allow the resource load to proceed with default handling return null. To specify a handler for the resource return a <see cref="T:CefSharp.IResourceRequestHandler"/> object.</returns>
        </member>
        <member name="T:CefSharp.IRequestHandler">
            <summary>
            Implement this interface to handle events related to browser requests.
            The methods of this class will be called on the thread indicated. 
            </summary>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnBeforeBrowse(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean)">
            <summary>
            Called before browser navigation.
            If the navigation is allowed <see cref="E:CefSharp.IWebBrowser.FrameLoadStart"/> and <see cref="E:CefSharp.IWebBrowser.FrameLoadEnd"/>
            will be called. If the navigation is canceled <see cref="E:CefSharp.IWebBrowser.LoadError"/> will be called with an ErrorCode
            value of <see cref="F:CefSharp.CefErrorCode.Aborted"/>. 
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="frame">The frame the request is coming from</param>
            <param name="request">the request object - cannot be modified in this callback</param>
            <param name="userGesture">The value will be true if the browser navigated via explicit user gesture
            (e.g. clicking a link) or false if it navigated automatically (e.g. via the DomContentLoaded event).</param>
            <param name="isRedirect">has the request been redirected</param>
            <returns>Return true to cancel the navigation or false to allow the navigation to proceed.</returns>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnDocumentAvailableInMainFrame(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>
            Called on the CEF UI thread when the window.document object of the main frame has been created.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnOpenUrlFromTab(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.String,CefSharp.WindowOpenDisposition,System.Boolean)">
            <summary>
            Called on the UI thread before OnBeforeBrowse in certain limited cases
            where navigating a new or different browser might be desirable. This
            includes user-initiated navigation that might open in a special way (e.g.
            links clicked via middle-click or ctrl + left-click) and certain types of
            cross-origin navigation initiated from the renderer process (e.g.
            navigating the top-level frame to/from a file URL).
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="frame">The frame object</param>
            <param name="targetUrl">target url</param>
            <param name="targetDisposition">The value indicates where the user intended to navigate the browser based
            on standard Chromium behaviors (e.g. current tab, new tab, etc). </param>
            <param name="userGesture">The value will be true if the browser navigated via explicit user gesture
            (e.g. clicking a link) or false if it navigated automatically (e.g. via the DomContentLoaded event).</param>
            <returns>Return true to cancel the navigation or false to allow the navigation
            to proceed in the source browser's top-level frame.</returns>
        </member>
        <member name="M:CefSharp.IRequestHandler.GetResourceRequestHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean,System.String,System.Boolean@)">
            <summary>
            Called on the CEF IO thread before a resource request is initiated.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">represent the source browser of the request</param>
            <param name="frame">represent the source frame of the request</param>
            <param name="request">represents the request contents and cannot be modified in this callback</param>
            <param name="isNavigation">will be true if the resource request is a navigation</param>
            <param name="isDownload">will be true if the resource request is a download</param>
            <param name="requestInitiator">is the origin (scheme + domain) of the page that initiated the request</param>
            <param name="disableDefaultHandling">to true to disable default handling of the request, in which case it will need to be handled via <see cref="M:CefSharp.IResourceRequestHandler.GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)"/> or it will be canceled</param>
            <returns>To allow the resource load to proceed with default handling return null. To specify a handler for the resource return a <see cref="T:CefSharp.IResourceRequestHandler"/> object. If this callback returns null the same method will be called on the associated <see cref="T:CefSharp.IRequestContextHandler"/>, if any</returns>
        </member>
        <member name="M:CefSharp.IRequestHandler.GetAuthCredentials(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Boolean,System.String,System.Int32,System.String,System.String,CefSharp.IAuthCallback)">
            <summary>
            Called when the browser needs credentials from the user.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="originUrl">is the origin making this authentication request</param>
            <param name="isProxy">indicates whether the host is a proxy server</param>
            <param name="host">hostname</param>
            <param name="port">port number</param>
            <param name="realm">realm</param>
            <param name="scheme">scheme</param>
            <param name="callback">Callback interface used for asynchronous continuation of authentication requests.</param>
            <returns>Return true to continue the request and call <see cref="M:CefSharp.IAuthCallback.Continue(System.String,System.String)"/> when the authentication information is available. Return false to cancel the request. </returns>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnQuotaRequest(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Int64,CefSharp.IRequestCallback)">
            <summary>
            Called when JavaScript requests a specific storage quota size via the webkitStorageInfo.requestQuota function.
            For async processing return true and execute <see cref="M:CefSharp.IRequestCallback.Continue(System.Boolean)"/> at a later time to 
            grant or deny the request or <see cref="M:CefSharp.IRequestCallback.Cancel"/> to cancel.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="originUrl">the origin of the page making the request</param>
            <param name="newSize">is the requested quota size in bytes</param>
            <param name="callback">Callback interface used for asynchronous continuation of url requests.</param>
            <returns>Return false to cancel the request immediately. Return true to continue the request
            and call <see cref="M:CefSharp.IRequestCallback.Continue(System.Boolean)"/> either in this method or at a later time to
            grant or deny the request.</returns>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnCertificateError(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefErrorCode,System.String,CefSharp.ISslInfo,CefSharp.IRequestCallback)">
            <summary>
            Called to handle requests for URLs with an invalid SSL certificate.
            Return true and call <see cref="M:CefSharp.IRequestCallback.Continue(System.Boolean)"/> either
            in this method or at a later time to continue or cancel the request.  
            If CefSettings.IgnoreCertificateErrors is set all invalid certificates
            will be accepted without calling this method.
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="errorCode">the error code for this invalid certificate</param>
            <param name="requestUrl">the url of the request for the invalid certificate</param>
            <param name="sslInfo">ssl certificate information</param>
            <param name="callback">Callback interface used for asynchronous continuation of url requests.
            If empty the error cannot be recovered from and the request will be canceled automatically.</param>
            <returns>Return false to cancel the request immediately. Return true and use <see cref="T:CefSharp.IRequestCallback"/> to
            execute in an async fashion.</returns>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnSelectClientCertificate(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Boolean,System.String,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,CefSharp.ISelectClientCertificateCallback)">
            <summary>
            Called when the browser needs user to select Client Certificate for authentication requests (eg. PKI authentication).
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="isProxy">indicates whether the host is a proxy server</param>
            <param name="host">hostname</param>
            <param name="port">port number</param>
            <param name="certificates">List of Client certificates for selection</param>
            <param name="callback">Callback interface used for asynchronous continuation of client certificate selection for authentication requests.</param>
            <returns>Return true to continue the request and call ISelectClientCertificateCallback.Select() with the selected certificate for authentication. 
            Return false to use the default behavior where the browser selects the first certificate from the list. </returns>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnPluginCrashed(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String)">
            <summary>
            Called when a plugin has crashed
            </summary>
            <param name="chromiumWebBrowser">the ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="pluginPath">path of the plugin that crashed</param>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnRenderViewReady(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>
            Called on the CEF UI thread when the render view associated
            with browser is ready to receive/handle IPC messages in the render
            process.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnRenderProcessTerminated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefTerminationStatus)">
            <summary>
            Called when the render process terminates unexpectedly.
            </summary>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser control</param>
            <param name="browser">the browser object</param>
            <param name="status">indicates how the process terminated.</param>
        </member>
        <member name="T:CefSharp.IResourceHandler">
            <summary>
            Class used to implement a custom resource handler. The methods of this class will always be called on the CEF IO thread.
            Blocking the CEF IO thread will adversely affect browser performance. We suggest you execute your code in a Task (or similar).
            To implement async handling, spawn a new Task (or similar), keep a reference to the callback. When you have a 
            fully populated stream, execute the callback. Once the callback Executes, GetResponseHeaders will be called where you
            can modify the response including headers, or even redirect to a new Url. Set your responseLength and headers
            Populate the dataOut stream in ReadResponse. For those looking for a sample implementation or upgrading from 
            a previous version <see cref="T:CefSharp.ResourceHandler"/>. For those upgrading, inherit from ResourceHandler instead of IResourceHandler
            add the override keywoard to existing methods e.g. ProcessRequestAsync.
            </summary>
        </member>
        <member name="M:CefSharp.IResourceHandler.Open(CefSharp.IRequest,System.Boolean@,CefSharp.ICallback)">
            <summary>
            Open the response stream.
            - To handle the request immediately set <paramref name="handleRequest"/> to true and return true.
            - To decide at a later time set <paramref name="handleRequest"/> to false, return true, and execute <paramref name="callback"/>
            to continue or cancel the request.
            - To cancel the request immediately set <paramref name="handleRequest"/> to true and return false.
            This method will be called in sequence but not from a dedicated thread.
            For backwards compatibility set <paramref name="handleRequest"/> to false and return false and the <see cref="M:CefSharp.IResourceHandler.ProcessRequest(CefSharp.IRequest,CefSharp.ICallback)"/> method
            will be called.
            </summary>
            <param name="request">request </param>
            <param name="handleRequest">see main summary</param>
            <param name="callback">callback </param>
            <returns>see main summary</returns>
        </member>
        <member name="M:CefSharp.IResourceHandler.ProcessRequest(CefSharp.IRequest,CefSharp.ICallback)">
            <summary>
            Begin processing the request.  
            </summary>
            <param name="request">The request object.</param>
            <param name="callback">The callback used to Continue or Cancel the request (async).</param>
            <returns>To handle the request return true and call
            <see cref="M:CefSharp.ICallback.Continue"/> once the response header information is available
            <see cref="M:CefSharp.ICallback.Continue"/> can also be called from inside this method if
            header information is available immediately).
            To cancel the request return false.</returns>
        </member>
        <member name="M:CefSharp.IResourceHandler.GetResponseHeaders(CefSharp.IResponse,System.Int64@,System.String@)">
            <summary>
            Retrieve response header information. If the response length is not known
            set <paramref name="responseLength"/> to -1 and ReadResponse() will be called until it
            returns false. If the response length is known set <paramref name="responseLength"/>
            to a positive value and ReadResponse() will be called until it returns
            false or the specified number of bytes have been read.
            
            It is also possible to set <paramref name="response"/> to a redirect http status code
            and pass the new URL via a Location header. Likewise with <paramref name="redirectUrl"/> it
            is valid to set a relative or fully qualified URL as the Location header
            value. If an error occured while setting up the request you can call
            <see cref="P:CefSharp.IResponse.ErrorCode"/> on <paramref name="response"/> to indicate the error condition.
            </summary>
            <param name="response">Use the response object to set the mime type, http status code and other optional header values.</param>
            <param name="responseLength">If the response length is not known set responseLength to -1</param>
            <param name="redirectUrl">To redirect the request to a new URL set this to the new URL. Can be either a relative or fully qualified URL.</param>
        </member>
        <member name="M:CefSharp.IResourceHandler.Skip(System.Int64,System.Int64@,CefSharp.Callback.IResourceSkipCallback)">
            <summary>
            Skip response data when requested by a Range header.
            Skip over and discard bytesToSkip bytes of response data.
            - If data is available immediately set bytesSkipped to the number of of bytes skipped and return true.
            - To read the data at a later time set bytesSkipped to 0, return true and execute callback when the data is available.
            - To indicate failure set bytesSkipped to &lt; 0 (e.g. -2 for ERR_FAILED) and return false.
            This method will be called in sequence but not from a dedicated thread.
            </summary>
            <param name="bytesToSkip">number of bytes to be skipped</param>
            <param name="bytesSkipped">
            If data is available immediately set bytesSkipped to the number of of bytes skipped and return true.
            To read the data at a later time set bytesSkipped to 0, return true and execute callback when the data is available.
            </param>
            <param name="callback">To read the data at a later time set bytesSkipped to 0,
            return true and execute callback when the data is available.</param>
            <returns>See summary</returns>
        </member>
        <member name="M:CefSharp.IResourceHandler.Read(System.IO.Stream,System.Int32@,CefSharp.Callback.IResourceReadCallback)">
            <summary>
            Read response data. If data is available immediately copy up to
            dataOut.Length bytes into dataOut, set bytesRead to the number of
            bytes copied, and return true. To read the data at a later time keep a
            pointer to dataOut, set bytesRead to 0, return true and execute
            callback when the data is available (dataOut will remain valid until
            the callback is executed). To indicate response completion set bytesRead
            to 0 and return false. To indicate failure set bytesRead to &lt; 0 (e.g. -2
            for ERR_FAILED) and return false. This method will be called in sequence
            but not from a dedicated thread.
            
            For backwards compatibility set bytesRead to -1 and return false and the ReadResponse method will be called.
            </summary>
            <param name="dataOut">If data is available immediately copy up to <see cref="P:System.IO.Stream.Length"/> bytes into dataOut.</param>
            <param name="bytesRead">To indicate response completion set bytesRead to 0 and return false.</param>
            <param name="callback">set <paramref name="bytesRead"/> to 0, return true and execute callback when the data is available
            (dataOut will remain valid until the callback is executed). If you have no need
            of the callback then Dispose of it immeduately.</param>
            <returns>return true or false depending on the criteria, see summary.</returns>
        </member>
        <member name="M:CefSharp.IResourceHandler.ReadResponse(System.IO.Stream,System.Int32@,CefSharp.ICallback)">
            <summary>
            Read response data. If data is available immediately copy to
            dataOut, set bytesRead to the number of bytes copied, and return true.
            To read the data at a later time set bytesRead to 0, return true and call ICallback.Continue() when the
            data is available. To indicate response completion return false.
            </summary>
            <param name="dataOut">Stream to write to</param>
            <param name="bytesRead">Number of bytes copied to the stream</param>
            <param name="callback">The callback used to Continue or Cancel the request (async).</param>
            <returns>If data is available immediately copy to dataOut, set bytesRead to the number of bytes copied,
            and return true.To indicate response completion return false.</returns>
            <remarks>Depending on this size of your response this method may be called multiple times</remarks>
        </member>
        <member name="M:CefSharp.IResourceHandler.Cancel">
            <summary>
            Request processing has been canceled.
            </summary>
        </member>
        <member name="T:CefSharp.IBrowserSettings">
            <summary>
            Interface representing browser initialization settings. 
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.StandardFontFamily">
            <summary>
            StandardFontFamily
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.FixedFontFamily">
            <summary>
            FixedFontFamily
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.SerifFontFamily">
            <summary>
            SerifFontFamily
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.SansSerifFontFamily">
            <summary>
            SansSerifFontFamily
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.CursiveFontFamily">
            <summary>
            CursiveFontFamily
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.FantasyFontFamily">
            <summary>
            FantasyFontFamily
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.DefaultFontSize">
            <summary>
            DefaultFontSize
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.DefaultFixedFontSize">
            <summary>
            DefaultFixedFontSize
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.MinimumFontSize">
            <summary>
            MinimumFontSize
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.MinimumLogicalFontSize">
            <summary>
            MinimumLogicalFontSize
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.DefaultEncoding">
            <summary>
            Default encoding for Web content. If empty "ISO-8859-1" will be used. Also
            configurable using the "default-encoding" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.RemoteFonts">
            <summary>
            Controls the loading of fonts from remote sources. Also configurable using
            the "disable-remote-fonts" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.Javascript">
            <summary>
            Controls whether JavaScript can be executed. (Used to Enable/Disable javascript)
            Also configurable using the "disable-javascript" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.JavascriptCloseWindows">
            <summary>
            Controls whether JavaScript can be used to close windows that were not
            opened via JavaScript. JavaScript can still be used to close windows that
            were opened via JavaScript. Also configurable using the
            "disable-javascript-close-windows" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.JavascriptAccessClipboard">
            <summary>
            Controls whether JavaScript can access the clipboard. Also configurable
            using the "disable-javascript-access-clipboard" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.JavascriptDomPaste">
            <summary>
            Controls whether DOM pasting is supported in the editor via
            execCommand("paste"). The |javascript_access_clipboard| setting must also
            be enabled. Also configurable using the "disable-javascript-dom-paste"
            command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.Plugins">
            <summary>
            Controls whether any plugins will be loaded. Also configurable using the
            "disable-plugins" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.UniversalAccessFromFileUrls">
            <summary>
            Controls whether file URLs will have access to all URLs. Also configurable
            using the "allow-universal-access-from-files" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.FileAccessFromFileUrls">
            <summary>
            Controls whether file URLs will have access to other file URLs. Also
            configurable using the "allow-access-from-files" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.WebSecurity">
            <summary>
            Controls whether web security restrictions (same-origin policy) will be
            enforced. Disabling this setting is not recommend as it will allow risky
            security behavior such as cross-site scripting (XSS). Also configurable
            using the "disable-web-security" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.ImageLoading">
            <summary>
            Controls whether image URLs will be loaded from the network. A cached image
            will still be rendered if requested. Also configurable using the
            "disable-image-loading" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.ImageShrinkStandaloneToFit">
            <summary>
            Controls whether standalone images will be shrunk to fit the page. Also
            configurable using the "image-shrink-standalone-to-fit" command-line
            switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.TextAreaResize">
            <summary>
            Controls whether text areas can be resized. Also configurable using the
            "disable-text-area-resize" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.TabToLinks">
            <summary>
            Controls whether the tab key can advance focus to links. Also configurable
            using the "disable-tab-to-links" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.LocalStorage">
            <summary>
            Controls whether local storage can be used. Also configurable using the
            "disable-local-storage" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.Databases">
            <summary>
            Controls whether databases can be used. Also configurable using the
            "disable-databases" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.ApplicationCache">
            <summary>
            Controls whether the application cache can be used. Also configurable using
            the "disable-application-cache" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.WebGl">
            <summary>
            Controls whether WebGL can be used. Note that WebGL requires hardware
            support and may not work on all systems even when enabled. Also
            configurable using the "disable-webgl" command-line switch.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.BackgroundColor">
            <summary>
            Opaque background color used for the browser before a document is loaded
            and when no document color is specified. By default the background color
            will be the same as CefSettings.BackgroundColor. Only the RGB compontents
            of the specified value will be used. The alpha component must greater than
            0 to enable use of the background color but will be otherwise ignored.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.AcceptLanguageList">
            <summary>
            Comma delimited ordered list of language codes without any whitespace that
            will be used in the "Accept-Language" HTTP header. May be overridden on a
            per-browser basis using the CefBrowserSettings.AcceptLanguageList value.
            If both values are empty then "en-US,en" will be used. Can be overridden
            for individual RequestContext instances via the
            RequestContextSettings.AcceptLanguageList value.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.WindowlessFrameRate">
            <summary>
            The maximum rate in frames per second (fps) that CefRenderHandler::OnPaint
            will be called for a windowless browser. The actual fps may be lower if
            the browser cannot generate frames at the requested rate. The minimum
            value is 1 and the maximum value is 60 (default 30). This value can also be
            changed dynamically via IBrowserHost.SetWindowlessFrameRate.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.IsDisposed">
            <summary>
            Gets a value indicating if the browser settings has been disposed.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserSettings.FrameworkCreated">
            <summary>
            Gets a value indicating if the browser settings instance was created internally by CefSharp.
            instances created by CefSharp will be Disposed of after use. To control the lifespan yourself
            create an set BrowserSettings yourself.
            </summary>
        </member>
        <member name="T:CefSharp.IDomNode">
            <summary>
            Represents the tag name and attribute data belonging to a node in the
            browser's DOM.
            </summary>
        </member>
        <member name="P:CefSharp.IDomNode.Item(System.String)">
            <summary>
            Get the value of an attribute.
            </summary>
            <param name="attributeName">
            The name of the attribute value to get.
            </param>
            <returns>
            The attribute value if the name exists in the DomNode's attributes.
            Null if the name does not exist.
            </returns>
        </member>
        <member name="P:CefSharp.IDomNode.TagName">
            <summary>
            The name of the HTML element.
            </summary>
        </member>
        <member name="P:CefSharp.IDomNode.AttributeNames">
            <summary>
            Get a read only list of the attribute names.
            </summary>
        </member>
        <member name="M:CefSharp.IDomNode.HasAttribute(System.String)">
            <summary>
            Determine if the DomNode has the requested attribute.
            </summary>
            <param name="attributeName">
            The name of the attribute value.
            </param>
            <returns>
            True if the attribute exists in the DomNode, false if it does not.
            </returns>
        </member>
        <member name="T:CefSharp.IPopupFeatures">
            <summary>
            Class representing popup window features. 
            </summary>
        </member>
        <member name="P:CefSharp.IPopupFeatures.X">
            <summary>
            Gets the x coordinate.
            </summary>
            <value>
            The x coordinate.
            </value>
        </member>
        <member name="P:CefSharp.IPopupFeatures.Y">
            <summary>
            Gets the y coordinate.
            </summary>
            <value>
            The y coordinate.
            </value>
        </member>
        <member name="P:CefSharp.IPopupFeatures.Width">
            <summary>
            Gets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:CefSharp.IPopupFeatures.Height">
            <summary>
            Gets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:CefSharp.IPopupFeatures.MenuBarVisible">
            <summary>
            Gets a value indicating whether the menu bar is visible.
            </summary>
            <value>
            True if menu bar visible, false if not.
            </value>
        </member>
        <member name="P:CefSharp.IPopupFeatures.StatusBarVisible">
            <summary>
            Gets a value indicating whether the status bar is visible.
            </summary>
            <value>
            True if status bar visible, false if not.
            </value>
        </member>
        <member name="P:CefSharp.IPopupFeatures.ToolBarVisible">
            <summary>
            Gets a value indicating whether the tool bar is visible.
            </summary>
            <value>
            True if tool bar visible, false if not.
            </value>
        </member>
        <member name="P:CefSharp.IPopupFeatures.ScrollbarsVisible">
            <summary>
            Gets a value indicating whether the scrollbars is visible.
            </summary>
            <value>
            True if scrollbars visible, false if not.
            </value>
        </member>
        <member name="T:CefSharp.IRequestContext">
            <summary>
            A request context provides request handling for a set of related browser or URL request objects.
            A request context can be specified when creating a new browser by setting the 
            <see cref="P:CefSharp.IWebBrowser.RequestContext"/> property (Passing in via the constructor for the OffScreen
            control is preferred).
            Browser objects with different request contexts will never be hosted in the same render process.
            Browser objects with the same request context may or may not be hosted in the same render process
            depending on the process model.Browser objects created indirectly via the JavaScript window.open
            function or targeted links will share the same render process and the same request context as
            the source browser.
            </summary>
        </member>
        <member name="M:CefSharp.IRequestContext.IsSame(CefSharp.IRequestContext)">
            <summary>
            Returns true if this object is pointing to the same context object.
            </summary>
            <param name="context">context to compare</param>
            <returns>Returns true if the same</returns>
        </member>
        <member name="M:CefSharp.IRequestContext.IsSharingWith(CefSharp.IRequestContext)">
            <summary>
            Returns true if this object is sharing the same storage as the specified context.
            </summary>
            <param name="context">context to compare</param>
            <returns>Returns true if same storage</returns>
        </member>
        <member name="P:CefSharp.IRequestContext.IsGlobal">
            <summary>
            Returns true if this object is the global context. The global context is
            used by default when creating a browser or URL request with a NULL context
            argument.
            </summary>
        </member>
        <member name="M:CefSharp.IRequestContext.GetCookieManager(CefSharp.ICompletionCallback)">
            <summary>
            Returns the default cookie manager for this object. This will be the global
            cookie manager if this object is the global request context. 
            </summary>
            <param name="callback">If callback is non-NULL it will be executed asnychronously on the CEF IO thread
            after the manager's storage has been initialized.</param>
            <returns>Returns the default cookie manager for this object</returns>
        </member>
        <member name="M:CefSharp.IRequestContext.RegisterSchemeHandlerFactory(System.String,System.String,CefSharp.ISchemeHandlerFactory)">
            <summary>
            Register a scheme handler factory for the specified schemeName and optional domainName.
            An empty domainName value for a standard scheme will cause the factory to match all domain
            names. The domainName value will be ignored for non-standard schemes. If schemeName is
            a built-in scheme and no handler is returned by factory then the built-in scheme handler
            factory will be called. If schemeName is a custom scheme then you must also implement the
            CefApp::OnRegisterCustomSchemes() method in all processes. This function may be called multiple
            times to change or remove the factory that matches the specified schemeName and optional
            domainName.
            </summary>
            <param name="schemeName">Scheme Name</param>
            <param name="domainName">Optional domain name</param>
            <param name="factory">Scheme handler factory</param>
            <returns>Returns false if an error occurs.</returns>
        </member>
        <member name="M:CefSharp.IRequestContext.ClearSchemeHandlerFactories">
            <summary>
            Clear all registered scheme handler factories. 
            </summary>
            <returns>Returns false on error.</returns>
        </member>
        <member name="P:CefSharp.IRequestContext.CachePath">
            <summary>
            Returns the cache path for this object. If empty an "incognito mode"
            in-memory cache is being used.
            </summary>
        </member>
        <member name="M:CefSharp.IRequestContext.PurgePluginListCache(System.Boolean)">
            <summary>
            Tells all renderer processes associated with this context to throw away
            their plugin list cache. If reloadPages is true they will also reload
            all pages with plugins. RequestContextHandler.OnBeforePluginLoad may
            be called to rebuild the plugin list cache.
            </summary>
            <param name="reloadPages">reload any pages with pluginst</param>
        </member>
        <member name="M:CefSharp.IRequestContext.HasPreference(System.String)">
            <summary>
            Returns true if a preference with the specified name exists. This method
            must be called on the CEF UI thread.
            </summary>
            <param name="name">name of preference</param>
            <returns>bool if the preference exists</returns>
            <remarks>Use Cef.UIThreadTaskFactory to execute this method if required,
            <see cref="M:CefSharp.IBrowserProcessHandler.OnContextInitialized"/> and ChromiumWebBrowser.IsBrowserInitializedChanged are both
            executed on the CEF UI thread, so can be called directly.
            When CefSettings.MultiThreadedMessageLoop == false (the default is true) then the main
            application thread will be the CEF UI thread.</remarks>
        </member>
        <member name="M:CefSharp.IRequestContext.GetPreference(System.String)">
            <summary>
            Returns the value for the preference with the specified name. Returns
            NULL if the preference does not exist. The returned object contains a copy
            of the underlying preference value and modifications to the returned object
            will not modify the underlying preference value. This method must be called
            on the CEF UI thread.
            </summary>
            <param name="name">preference name</param>
            <returns>Returns the value for the preference with the specified name</returns>
            <remarks>Use Cef.UIThreadTaskFactory to execute this method if required,
            <see cref="M:CefSharp.IBrowserProcessHandler.OnContextInitialized"/> and ChromiumWebBrowser.IsBrowserInitializedChanged are both
            executed on the CEF UI thread, so can be called directly.
            When CefSettings.MultiThreadedMessageLoop == false (the default is true) then the main
            application thread will be the CEF UI thread.</remarks>
        </member>
        <member name="M:CefSharp.IRequestContext.GetAllPreferences(System.Boolean)">
            <summary>
            Returns all preferences as a dictionary. The returned
            object contains a copy of the underlying preference values and
            modifications to the returned object will not modify the underlying
            preference values. This method must be called on the browser process UI
            thread.
            </summary>
            <param name="includeDefaults">If true then
            preferences currently at their default value will be included.</param>
            <returns>Preferences (dictionary can have sub dictionaries)</returns>
        </member>
        <member name="M:CefSharp.IRequestContext.CanSetPreference(System.String)">
            <summary>
            Returns true if the preference with the specified name can be modified
            using SetPreference. As one example preferences set via the command-line
            usually cannot be modified. This method must be called on the CEF UI thread.
            </summary>
            <param name="name">preference key</param>
            <returns>Returns true if the preference with the specified name can be modified
            using SetPreference</returns>
            <remarks>Use Cef.UIThreadTaskFactory to execute this method if required,
            <see cref="M:CefSharp.IBrowserProcessHandler.OnContextInitialized"/> and ChromiumWebBrowser.IsBrowserInitializedChanged are both
            executed on the CEF UI thread, so can be called directly.
            When CefSettings.MultiThreadedMessageLoop == false (the default is true) then the main
            application thread will be the CEF UI thread.</remarks>
        </member>
        <member name="M:CefSharp.IRequestContext.SetPreference(System.String,System.Object,System.String@)">
            <summary>
            Set the value associated with preference name. If value is null the
            preference will be restored to its default value. If setting the preference
            fails then error will be populated with a detailed description of the
            problem. This method must be called on the CEF UI thread.
            Preferences set via the command-line usually cannot be modified.
            </summary>
            <param name="name">preference key</param>
            <param name="value">preference value</param>
            <param name="error">out error</param>
            <returns>Returns true if the value is set successfully and false otherwise.</returns>
            <remarks>Use Cef.UIThreadTaskFactory to execute this method if required,
            <see cref="M:CefSharp.IBrowserProcessHandler.OnContextInitialized"/> and ChromiumWebBrowser.IsBrowserInitializedChanged are both
            executed on the CEF UI thread, so can be called directly.
            When CefSettings.MultiThreadedMessageLoop == false (the default is true) then the main
            application thread will be the CEF UI thread.</remarks>
        </member>
        <member name="M:CefSharp.IRequestContext.ClearCertificateExceptions(CefSharp.ICompletionCallback)">
            <summary>
            Clears all certificate exceptions that were added as part of handling
            <see cref="M:CefSharp.IRequestHandler.OnCertificateError(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefErrorCode,System.String,CefSharp.ISslInfo,CefSharp.IRequestCallback)"/>. If you call this it is
            recommended that you also call <see cref="M:CefSharp.IRequestContext.CloseAllConnections(CefSharp.ICompletionCallback)"/> or you risk not
            being prompted again for server certificates if you reconnect quickly.
            </summary>
            <param name="callback">If is non-NULL it will be executed on the CEF UI thread after
            completion. This param is optional</param>
        </member>
        <member name="M:CefSharp.IRequestContext.ClearHttpAuthCredentials(CefSharp.ICompletionCallback)">
            <summary>
            Clears all HTTP authentication credentials that were added as part of handling
            <see cref="M:CefSharp.IRequestHandler.GetAuthCredentials(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Boolean,System.String,System.Int32,System.String,System.String,CefSharp.IAuthCallback)"/>.
            </summary>
            <param name="callback">If is non-NULL it will be executed on the CEF UI thread after
            completion. This param is optional</param>
        </member>
        <member name="M:CefSharp.IRequestContext.CloseAllConnections(CefSharp.ICompletionCallback)">
            <summary>
            Clears all active and idle connections that Chromium currently has.
            This is only recommended if you have released all other CEF objects but
            don't yet want to call Cef.Shutdown().
            </summary>
            <param name="callback">If is non-NULL it will be executed on the CEF UI thread after
            completion. This param is optional</param>
        </member>
        <member name="M:CefSharp.IRequestContext.ResolveHostAsync(System.Uri)">
            <summary>
            Attempts to resolve origin to a list of associated IP addresses.
            </summary>
            <param name="origin">host name to resolve</param>
            <returns>A task that represents the Resoolve Host operation. The value of the TResult parameter contains ResolveCallbackResult.</returns>
        </member>
        <member name="M:CefSharp.IRequestContext.DidLoadExtension(System.String)">
            <summary>
            Returns true if this context was used to load the extension identified by extensionId. Other contexts sharing the same storage will also have access to the extension (see HasExtension).
            This method must be called on the CEF UI thread.
            </summary>
            <returns>Returns true if this context was used to load the extension identified by extensionId</returns>
        </member>
        <member name="M:CefSharp.IRequestContext.GetExtension(System.String)">
            <summary>
            Returns the extension matching extensionId or null if no matching extension is accessible in this context (see HasExtension).
            This method must be called on the CEF UI thread.
            </summary>
            <param name="extensionId">extension Id</param>
            <returns>Returns the extension matching extensionId or null if no matching extension is accessible in this context</returns>
        </member>
        <member name="M:CefSharp.IRequestContext.GetExtensions(System.Collections.Generic.IList{System.String}@)">
            <summary>
            Retrieve the list of all extensions that this context has access to (see HasExtension).
            <paramref name="extensionIds"/> will be populated with the list of extension ID values.
            This method must be called on the CEF UI thread.
            </summary>
            <param name="extensionIds">output a list of extensions Ids</param>
            <returns>returns true on success otherwise false</returns>
        </member>
        <member name="M:CefSharp.IRequestContext.HasExtension(System.String)">
            <summary>
            Returns true if this context has access to the extension identified by extensionId.
            This may not be the context that was used to load the extension (see DidLoadExtension).
            This method must be called on the CEF UI thread.
            </summary>
            <param name="extensionId">extension id</param>
            <returns>Returns true if this context has access to the extension identified by extensionId</returns>
        </member>
        <member name="M:CefSharp.IRequestContext.LoadExtension(System.String,System.String,CefSharp.IExtensionHandler)">
             <summary>
             Load an extension. If extension resources will be read from disk using the default load implementation then rootDirectoy
             should be the absolute path to the extension resources directory and manifestJson should be null.
             If extension resources will be provided by the client (e.g. via IRequestHandler and/or IExtensionHandler) then rootDirectory
             should be a path component unique to the extension (if not absolute this will be internally prefixed with the PK_DIR_RESOURCES path)
             and manifestJson should contain the contents that would otherwise be read from the "manifest.json" file on disk.
             The loaded extension will be accessible in all contexts sharing the same storage (HasExtension returns true).
             However, only the context on which this method was called is considered the loader (DidLoadExtension returns true) and only the
             loader will receive IRequestContextHandler callbacks for the extension.
            
             <see cref="M:CefSharp.IExtensionHandler.OnExtensionLoaded(CefSharp.IExtension)"/> will be called on load success or
             <see cref="M:CefSharp.IExtensionHandler.OnExtensionLoadFailed(CefSharp.CefErrorCode)"/> will be called on load failure.
             
             If the extension specifies a background script via the "background" manifest key then <see cref="M:CefSharp.IExtensionHandler.OnBeforeBackgroundBrowser(CefSharp.IExtension,System.String,CefSharp.IBrowserSettings)"/>
             will be called to create the background browser. See that method for additional information about background scripts.
             
             For visible extension views the client application should evaluate the manifest to determine the correct extension URL to load and then
             load the extension URL in a ChromiumWebBrowser instance after the extension has loaded.
            
             For example, the client can look for the "browser_action" manifest key as documented at https://developer.chrome.com/extensions/browserAction.
             Extension URLs take the form "chrome-extension://&lt;extension_id&gt;/&lt;path&gt;"
             Browsers that host extensions differ from normal browsers as follows:
             
             - Can access chrome.* JavaScript APIs if allowed by the manifest. Visit chrome://extensions-support for the list of extension APIs currently supported by CEF.
             - Main frame navigation to non-extension content is blocked.
             - Pinch-zooming is disabled.
             - <see cref="P:CefSharp.IBrowserHost.Extension"/> returns the hosted extension.
             - CefBrowserHost::IsBackgroundHost returns true for background hosts.
            
             See https://developer.chrome.com/extensions for extension implementation and usage documentation.
             </summary>
             <param name="rootDirectory">If extension resources will be read from disk using the default load implementation then rootDirectoy
             should be the absolute path to the extension resources directory and manifestJson should be null</param>
             <param name="manifestJson">If extension resources will be provided by the client then rootDirectory should be a path component unique to the extension
             and manifestJson should contain the contents that would otherwise be read from the manifest.json file on disk</param>
             <param name="handler">handle events related to browser extensions</param>
             <remarks>
             For extensions that load a popup you are required to query the Manifest, build a Url in the format
             chrome-extension://{extension.Identifier}/{default_popup} with default_popup url coming from the mainfest. With the extension
             url you then need to open a new Form/Window/Tab and create a new ChromiumWebBrowser instance to host the extension popup.
             To load a crx file you must first unzip them to a folder and pass the path containing the extension as <paramref name="rootDirectory"/>.
             It in theory should be possible to load a crx file in memory, passing it's manifest.json file content as <paramref name="manifestJson"/>
             then fulfilling the resource rquests made to <see cref="M:CefSharp.IExtensionHandler.GetExtensionResource(CefSharp.IExtension,CefSharp.IBrowser,System.String,CefSharp.IGetExtensionResourceCallback)"/>.
             </remarks>
        </member>
        <member name="T:CefSharp.IResponseFilter">
            <summary>
            Implement this interface to filter resource response content.
            The methods of this class will be called on the CEF IO thread. 
            </summary>
        </member>
        <member name="M:CefSharp.IResponseFilter.InitFilter">
            <summary>
            Initialize the response filter. Will only be called a single time.
            The filter will not be installed if this method returns false.
            </summary>
            <returns>The filter will not be installed if this method returns false.</returns>
        </member>
        <member name="M:CefSharp.IResponseFilter.Filter(System.IO.Stream,System.Int64@,System.IO.Stream,System.Int64@)">
            <summary>
            Called to filter a chunk of data.
            This method will be called repeatedly until there is no more data to filter (resource response is complete),
            dataInRead matches dataIn.Length (all available pre-filter bytes have been read), and the method
            returns FilterStatus.Done or FilterStatus.Error.
            </summary>
            <param name="dataIn">is a Stream wrapping the underlying input buffer containing pre-filter data. Can be null.</param>
            <param name="dataInRead">Set to the number of bytes that were read from dataIn</param>
            <param name="dataOut">is a Stream wrapping the underlying output buffer that can accept filtered output data.
            Check dataOut.Length for maximum buffer size</param>
            <param name="dataOutWritten">Set to the number of bytes that were written into dataOut</param>
            <returns>If some or all of the pre-filter data was read successfully but more data is needed in order
            to continue filtering (filtered output is pending) return FilterStatus.NeedMoreData. If some or all of the pre-filter
            data was read successfully and all available filtered output has been written return FilterStatus.Done. If an error
            occurs during filtering return FilterStatus.Error. </returns>
            <remarks>Do not keep a reference to the buffers(Streams) passed to this method.</remarks>
        </member>
        <member name="T:CefSharp.ModelBinding.BindingMemberInfo">
            <summary>
            Represents a bindable member of a type, which can be a property or a field.
            </summary>
        </member>
        <member name="P:CefSharp.ModelBinding.BindingMemberInfo.Name">
            <summary>
            Gets the name of the property or field represented by this BindingMemberInfo.
            </summary>
        </member>
        <member name="P:CefSharp.ModelBinding.BindingMemberInfo.Type">
            <summary>
            Gets the data type of the property or field represented by this BindingMemberInfo.
            </summary>
        </member>
        <member name="M:CefSharp.ModelBinding.BindingMemberInfo.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Constructs a BindingMemberInfo instance for a property.
            </summary>
            <param name="propertyInfo">The bindable property to represent.</param>
        </member>
        <member name="M:CefSharp.ModelBinding.BindingMemberInfo.#ctor(System.Reflection.FieldInfo)">
            <summary>
            Constructs a BindingMemberInfo instance for a field.
            </summary>
            <param name="fieldInfo">The bindable field to represent.</param>
        </member>
        <member name="M:CefSharp.ModelBinding.BindingMemberInfo.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value from a specified object associated with the property or field represented by this BindingMemberInfo.
            </summary>
            <param name="destinationObject">The object whose property or field should be assigned.</param>
            <param name="newValue">The value to assign in the specified object to this BindingMemberInfo's property or field.</param>
        </member>
        <member name="M:CefSharp.ModelBinding.BindingMemberInfo.Collect(System.Type)">
            <summary>
            Returns an enumerable sequence of bindable properties for the specified type.
            </summary>
            <param name="type">The type to enumerate.</param>
            <returns>Bindable properties.</returns>
        </member>
        <member name="T:CefSharp.ModelBinding.DefaultBinder">
            <summary>
            Default binder - used as a fallback when a specific modelbinder
            is not available.
            </summary>
        </member>
        <member name="M:CefSharp.ModelBinding.DefaultBinder.Bind(System.Object,System.Type)">
            <summary>
            Bind to the given model type
            </summary>
            <param name="obj">object to be converted into a model</param>
            <param name="targetType">the target param type</param>
            <returns>Bound model</returns>
        </member>
        <member name="M:CefSharp.ModelBinding.DefaultBinder.BindCollection(System.Type,System.Type,System.Object)">
            <summary>
            Bind collection.
            </summary>
            <param name="targetType">the target param type.</param>
            <param name="objType">Type of the object.</param>
            <param name="obj">object to be converted into a model.</param>
            <returns>
            An object.
            </returns>
        </member>
        <member name="M:CefSharp.ModelBinding.DefaultBinder.BindObject(System.Type,System.Type,System.Object)">
            <summary>
            Bind object.
            </summary>
            <param name="targetType">the target param type.</param>
            <param name="objType">Type of the object.</param>
            <param name="obj">object to be converted into a model.</param>
            <returns>
            An object.
            </returns>
        </member>
        <member name="T:CefSharp.ModelBinding.IMethodInterceptor">
            <summary>
            Provides the capability intercept Net method calls made from javascript as part of the
            JavascriptBinding (JSB) implementation. One example use case is logging method calls.
            </summary>
        </member>
        <member name="M:CefSharp.ModelBinding.IMethodInterceptor.Intercept(System.Func{System.Object[],System.Object},System.Object[],System.String)">
            <summary>
            Called before the method is invokved. You are now responsible for evaluating
            the function and returning the result.
            </summary>
            <param name="method">A Func that represents the method to be called</param>
            <param name="parameters">paramaters to be passed to <paramref name="method"/></param>
            <param name="methodName">Name of the method to be called</param>
            <returns>The method result</returns>
            <example>
            
            object IMethodInterceptor.Intercept(Func&lt;object[], object&gt; method, object[] parameters, string methodName)
            {
              object result = method(parameters);
              Debug.WriteLine("Called " + methodName);
              return result;
             }
            </example>
        </member>
        <member name="T:CefSharp.ModelBinding.IBinder">
            <summary>
            Converts input params into complex .Net types (can also be used for type conversion).
            This feature is similar in concept to ASP.NET MVC Model Binding.
            Objects passed from javascript are represented as <see cref="T:System.Collections.Generic.IDictionary`2"/>
            and arrays/lists as <see cref="T:System.Collections.Generic.IList`1"/>
            See <see cref="T:CefSharp.ModelBinding.DefaultBinder"/> for the default implementation.
            </summary>
            <remarks>
            A model binder can be specified in <see cref="P:CefSharp.BindingOptions.Binder"/> and passed into
            <see cref="M:CefSharp.IJavascriptObjectRepository.Register(System.String,System.Object,System.Boolean,CefSharp.BindingOptions)"/>
            </remarks>
        </member>
        <member name="M:CefSharp.ModelBinding.IBinder.Bind(System.Object,System.Type)">
            <summary>
            Bind to the given model type, can also be used for type conversion e.g. int to uint
            </summary>
            <param name="obj">object to be converted into a model</param>
            <param name="targetParamType">the target param type</param>
            <returns>if the modelType is directly assignable then do so, otherwise perform a conversion
            or create a complex object that matches <paramref name="targetParamType"/></returns>
        </member>
        <member name="T:CefSharp.ModelBinding.ModelBindingExtensions">
            <summary>
            Containing extensions for the <see cref="T:System.Type"/> object.
            </summary>
        </member>
        <member name="M:CefSharp.ModelBinding.ModelBindingExtensions.IsArray(System.Type)">
            <summary>
            Checks if a type is an array or not
            </summary>
            <param name="source">The type to check.</param>
            <returns><see langword="true" /> if the type is an array, otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:CefSharp.ModelBinding.ModelBindingExtensions.IsCollection(System.Type)">
            <summary>
            Checks if a type is an collection or not
            </summary>
            <param name="source">The type to check.</param>
            <returns><see langword="true" /> if the type is a collection, otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:CefSharp.ModelBinding.ModelBindingExtensions.IsEnumerable(System.Type)">
            <summary>
            Checks if a type is enumerable or not
            </summary>
            <param name="source">The type to check.</param>
            <returns><see langword="true" /> if the type is an enumerable, otherwise <see langword="false" />.</returns>
        </member>
        <member name="T:CefSharp.NavigationEntry">
            <summary>
            Represents an entry in navigation history.
            </summary>
        </member>
        <member name="P:CefSharp.NavigationEntry.CompletionTime">
            <summary>
            Returns the time for the last known successful navigation completion.
            </summary>
        </member>
        <member name="P:CefSharp.NavigationEntry.DisplayUrl">
            <summary>
            Returns a display-friendly version of the URL.
            </summary>
        </member>
        <member name="P:CefSharp.NavigationEntry.HttpStatusCode">
            <summary>
            Returns the HTTP status code for the last known successful navigation response.
            </summary>
        </member>
        <member name="P:CefSharp.NavigationEntry.OriginalUrl">
            <summary>
            Returns the original URL that was entered by the user before any redirects.
            </summary>
        </member>
        <member name="P:CefSharp.NavigationEntry.Title">
            <summary>
            Returns the title set by the page.
            </summary>
        </member>
        <member name="P:CefSharp.NavigationEntry.TransitionType">
            <summary>
            Returns the transition type which indicates what the user did to move to this page from the previous page.
            </summary>
        </member>
        <member name="P:CefSharp.NavigationEntry.Url">
            <summary>
            Returns the actual URL of the page.
            </summary>
        </member>
        <member name="P:CefSharp.NavigationEntry.HasPostData">
            <summary>
            Returns true if this navigation includes post data.
            </summary>
        </member>
        <member name="P:CefSharp.NavigationEntry.IsValid">
            <summary>
            Returns true if this object is valid.
            </summary>
        </member>
        <member name="P:CefSharp.NavigationEntry.IsCurrent">
            <summary>
            If true if this entry is the currently loaded navigation entry
            </summary>
        </member>
        <member name="P:CefSharp.NavigationEntry.SslStatus">
            <summary>
            Returns the SSL information for this navigation entry.
            </summary>
        </member>
        <member name="M:CefSharp.NavigationEntry.#ctor(System.Boolean,System.DateTime,System.String,System.Int32,System.String,System.String,CefSharp.TransitionType,System.String,System.Boolean,System.Boolean,CefSharp.SslStatus)">
            <summary>
            NavigationEntry
            </summary>
            <param name="completionTime">completionTime</param>
            <param name="displayUrl">displayUrl</param>
            <param name="httpStatusCode">httpStatusCode</param>
            <param name="originalUrl">originalUrl</param>
            <param name="title">title</param>
            <param name="transitionType">transitionType</param>
            <param name="url">url</param>
            <param name="hasPostData">hasPostData</param>
            <param name="isValid">isValid</param>
            <param name="isCurrent">is the current entry</param>
            <param name="sslStatus">the ssl status</param>
        </member>
        <member name="T:CefSharp.PdfPrintSettings">
            <summary>
            Print to Pdf Settings
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.HeaderFooterTitle">
            <summary>
            Page title to display in the header. Only used if <see cref="P:CefSharp.PdfPrintSettings.HeaderFooterEnabled"/>
            is set to true.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.HeaderFooterUrl">
            <summary>
            URL to display in the footer. Only used if <see cref="P:CefSharp.PdfPrintSettings.HeaderFooterEnabled"/> is set
            to true.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.PageWidth">
            <summary>
            Output page size in microns. If either of these values is less than or
            equal to zero then the default paper size (A4) will be used.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.PageHeight">
            <summary>
            Output page size in microns. If either of these values is less than or
            equal to zero then the default paper size (A4) will be used.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.MarginLeft">
            <summary>
            Margin in points (1"/72). Only used if MarginType is set to Custom.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.MarginTop">
            <summary>
            Margin in points (1"/72). Only used if MarginType is set to Custom.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.MarginRight">
            <summary>
            Margin in points (1"/72). Only used if MarginType is set to Custom.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.MarginBottom">
            <summary>
            Margin in points (1"/72). Only used if MarginType is set to Custom.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.MarginType">
            <summary>
            Margin type.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.ScaleFactor">
            <summary>
            Scale the PDF by the specified amount, defaults to 100%.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.HeaderFooterEnabled">
            <summary>
            Set to true to print headers and footers or false to not print
            headers and footers.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.SelectionOnly">
            <summary>
            Set to true to print the selection only or false to print all.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.Landscape">
            <summary>
            Set to true for landscape mode or false for portrait mode.
            </summary>
        </member>
        <member name="P:CefSharp.PdfPrintSettings.BackgroundsEnabled">
            <summary>
            Set to true to print background graphics or false to not print
            background graphics.
            </summary>
        </member>
        <member name="T:CefSharp.ICookieManager">
            <summary>
            Used for managing cookies. The methods may be called on any thread unless otherwise indicated.
            </summary>
        </member>
        <member name="M:CefSharp.ICookieManager.DeleteCookies(System.String,System.String,CefSharp.IDeleteCookiesCallback)">
            <summary>
            Delete all cookies that match the specified parameters.
            If both <paramref name="url"/> and <paramref name="name"/> values are specified all host and domain cookies matching both will be deleted.
            If only <paramref name="url"/> is specified all host cookies (but not domain cookies) irrespective of path will be deleted.
            If <paramref name="url"/> is empty all cookies for all hosts and domains will be deleted.
            Cookies can alternately be deleted using the Visit*Cookies() methods.
            </summary>
            <param name="url">The cookie URL.</param>
            <param name="name">The name of the cookie.</param>
            <param name="callback">If non-NULL it will be executed asynchronously on the CEF UI thread after the cookies have been deleted.</param>
            <returns>Returns false if a non-empty invalid URL is specified or if cookies cannot be accessed; otherwise, true.</returns>
        </member>
        <member name="M:CefSharp.ICookieManager.SetCookie(System.String,CefSharp.Cookie,CefSharp.ISetCookieCallback)">
            <summary>
            Sets a cookie given a valid URL and explicit user-provided cookie attributes. This function expects each attribute to be well-formed. It will check for disallowed
            characters (e.g. the ';' character is disallowed within the cookie value attribute) and fail without setting the cookie if such characters are found.
            This method will be executed on the CEF UI thread in an async fashion, to be notified upon completion implement <see cref="T:CefSharp.ISetCookieCallback"/>
            and pass in as <paramref name="callback"/>
            </summary>
            <param name="url">The cookie URL</param>
            <param name="cookie">The cookie</param>
            <param name="callback">If non-NULL it will be executed asynchronously on the CEF UI thread after the cookie has been set.</param>
            <returns>Returns false if an invalid URL is specified or if cookies cannot be accessed.</returns>
        </member>
        <member name="M:CefSharp.ICookieManager.SetSupportedSchemes(System.String[],System.Boolean,CefSharp.ICompletionCallback)">
            <summary>
            Set the schemes supported by this manager. Calling this method with an empty <paramref name="schemes"/> value and <paramref name="includeDefaults"/>
            set to false will disable all loading and saving of cookies for this manager. Must be called before any cookies are accessed.
            </summary>
            <param name="schemes">The list of supported schemes.</param>
            <param name="includeDefaults">If true the default schemes ("http", "https", "ws" and "wss") will also be supported. Calling this method with an empty schemes value and includeDefaults
            set to false will disable all loading and saving of cookies for this manager</param>
            <param name="callback">If non-NULL it will be executed asnychronously on the CEF UI thread after the change has been applied.</param>
        </member>
        <member name="M:CefSharp.ICookieManager.VisitAllCookies(CefSharp.ICookieVisitor)">
            <summary>
            Visit all cookies on the UI thread. The returned cookies are ordered by longest path, then by earliest creation date.
            </summary>
            <param name="visitor">A user-provided Cookie Visitor implementation.</param>
            <returns>Returns false if cookies cannot be accessed; otherwise, true.</returns>
        </member>
        <member name="M:CefSharp.ICookieManager.VisitUrlCookies(System.String,System.Boolean,CefSharp.ICookieVisitor)">
            <summary>
            Visit a subset of cookies on the CEF UI thread.
            The results are filtered by the given url scheme, host, domain and path.
            The returned cookies are ordered by longest path, then by earliest creation date. 
            </summary>
            <param name="url">The URL to use for filtering a subset of the cookies available.</param>
            <param name="includeHttpOnly">If true HTTP-only cookies will also be included in the results.</param>
            <param name="visitor">A user-provided Cookie Visitor implementation.</param>
            <returns>Returns false if cookies cannot be accessed; otherwise, true.</returns>
        </member>
        <member name="M:CefSharp.ICookieManager.FlushStore(CefSharp.ICompletionCallback)">
            <summary>
            Flush the backing store (if any) to disk
            This method will be executed on the CEF UI thread in an async fashion, to be notified upon completion implement <see cref="T:CefSharp.ICompletionCallback"/>
            and pass in as <paramref name="callback"/>
            </summary>
            <param name="callback">If non-NULL it will be executed asnychronously on the CEF UI thread after the flush is complete.</param>
            <returns>Returns false if cookies cannot be accessed.</returns>
        </member>
        <member name="P:CefSharp.ICookieManager.IsDisposed">
            <summary>
            Returns true if disposed
            </summary>
        </member>
        <member name="T:CefSharp.IMenuModel">
            <summary>
            Supports creation and modification of menus. See <see cref="T:CefSharp.CefMenuCommand"/> for the command ids that have default implementations.
            All user-defined command ids should be between <see cref="F:CefSharp.CefMenuCommand.UserFirst"/> and <see cref="F:CefSharp.CefMenuCommand.UserFirst"/>.
            The methods of this class can only be accessed on the CEF UI thread, which by default is not the same as your application UI thread.
            </summary>
        </member>
        <member name="P:CefSharp.IMenuModel.Count">
            <summary>
            Returns the number of items in this menu.
            </summary>
        </member>
        <member name="M:CefSharp.IMenuModel.Clear">
            <summary>
            Remove all menu items. Can be used to disable the context menu. Returns true on success.
            </summary>
            <returns>Returns true on success</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.GetLabelAt(System.Int32)">
            <summary>
            Returns the label at the specified index or empty if not found due to
            invalid range or the index being a separator.
            </summary>
            <param name="index">specified index</param>
            <returns>Label or empty if not found due to invalid range or the index being a separator.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.GetCommandIdAt(System.Int32)">
            <summary>
            Returns the command id at the specified index or -1 if not found due to invalid range or the index being a separator.
            </summary>
            <param name="index">the index</param>
            <returns>Command or -1 if not found due to invalid range or the index being a separator.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.Remove(CefSharp.CefMenuCommand)">
            <summary>
            Removes the item with the specified commandId.
            </summary>
            <param name="commandId">the command Id</param>
            <returns>Returns true on success</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.AddItem(CefSharp.CefMenuCommand,System.String)">
            <summary>
            Add an item to the menu. 
            </summary>
            <param name="commandId">the command Id</param>
            <param name="label">the label of the item</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.AddSeparator">
            <summary>
            Add a separator to the menu. 
            </summary>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.AddCheckItem(CefSharp.CefMenuCommand,System.String)">
            <summary>
            Add a check item to the menu.
            </summary>
            <param name="commandId">the command Id</param>
            <param name="label">the label of the item</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.AddRadioItem(CefSharp.CefMenuCommand,System.String,System.Int32)">
            <summary>
            Add a radio item to the menu. Only a single item with the specified groupId can be checked at a time.
            </summary>
            <param name="commandId">the command Id</param>
            <param name="label">the label of the item</param>
            <param name="groupId">the group id</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.AddSubMenu(CefSharp.CefMenuCommand,System.String)">
            <summary>
            Add a sub-menu to the menu. The new sub-menu is returned.
            </summary>
            <param name="commandId">the command Id</param>
            <param name="label">the label of the item</param>
            <returns>Returns the newly created <see cref="T:CefSharp.IMenuModel"/>.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.InsertSeparatorAt(System.Int32)">
            <summary>
            Insert a separator in the menu at the specified index. 
            </summary>
            <param name="index">index</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.InsertItemAt(System.Int32,CefSharp.CefMenuCommand,System.String)">
            <summary>
            Insert an item in the menu at the specified index.
            </summary>
            <param name="index">index</param>
            <param name="commandId">the command Id</param>
            <param name="label">the label of the item</param>
            <returns>Returns true on success.</returns>        
        </member>
        <member name="M:CefSharp.IMenuModel.InsertCheckItemAt(System.Int32,CefSharp.CefMenuCommand,System.String)">
            <summary>
            Insert a check item in the menu at the specified index.
            </summary>
            <param name="index">index</param>
            <param name="commandId">the command Id</param>
            <param name="label">the label of the item</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.InsertRadioItemAt(System.Int32,CefSharp.CefMenuCommand,System.String,System.Int32)">
            <summary>
            Insert a radio item in the menu at the specified index.
            Only a single item with the specified groupId can be checked at a time.
            </summary>
            <param name="index">index</param>
            <param name="commandId">the command Id</param>
            <param name="label">the label of the item</param>
            <param name="groupId">the group id</param>
            <returns>Returns true on success.</returns>        
        </member>
        <member name="M:CefSharp.IMenuModel.InsertSubMenuAt(System.Int32,CefSharp.CefMenuCommand,System.String)">
            <summary>
            Insert a sub-menu in the menu at the specified index.
            </summary>
            <param name="index">index</param>
            <param name="commandId">the command Id</param>
            <param name="label">the label of the item</param>
            <returns>Returns the newly created <see cref="T:CefSharp.IMenuModel"/>.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">index</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.GetIndexOf(CefSharp.CefMenuCommand)">
            <summary>
            Returns the index associated with the specified commandId or -1 if not found due to the command id not existing in the menu.
            </summary>
            <param name="commandId">the command Id</param>
            <returns>Returns the index associated with the specified commandId or -1 if not found due to the command id not existing in the menu.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.SetCommandIdAt(System.Int32,CefSharp.CefMenuCommand)">
            <summary>
            Sets the command id at the specified index.
            </summary>
            <param name="index">index</param>
            <param name="commandId">the command Id</param>
            <returns>Returns true on success.</returns>        
        </member>
        <member name="M:CefSharp.IMenuModel.GetLabel(CefSharp.CefMenuCommand)">
            <summary>
            Returns the label for the specified commandId or empty if not found.
            </summary>
            <param name="commandId">the command Id</param>
            <returns>Returns the label for the specified commandId or empty if not found.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.SetLabel(CefSharp.CefMenuCommand,System.String)">
            <summary>
            Sets the label for the specified commandId. 
            </summary>
            <param name="commandId">the command Id</param>
            <param name="label">the label</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.SetLabelAt(System.Int32,System.String)">
            <summary>
            Set the label at the specified index.
            </summary>
            <param name="index">index</param>
            <param name="label">the label</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.GetType(CefSharp.CefMenuCommand)">
            <summary>
            Returns the item type for the specified commandId.
            </summary>
            <param name="commandId">the command Id</param>
            <returns>Returns the item type for the specified commandId.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.GetTypeAt(System.Int32)">
            <summary>
            Returns the item type at the specified index.
            </summary>
            <param name="index">index</param>
            <returns>Returns the item type at the specified index.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.GetGroupId(CefSharp.CefMenuCommand)">
            <summary>
            Returns the group id for the specified commandId or -1 if invalid.
            </summary>
            <param name="commandId">the command Id</param>
            <returns>Returns the group id for the specified commandId or -1 if invalid.</returns>        
        </member>
        <member name="M:CefSharp.IMenuModel.GetGroupIdAt(System.Int32)">
            <summary>
            Returns the group id at the specified index or -1 if invalid.
            </summary>
            <param name="index">index</param>
            <returns>Returns the group id at the specified index or -1 if invalid.</returns>        
        </member>
        <member name="M:CefSharp.IMenuModel.SetGroupId(CefSharp.CefMenuCommand,System.Int32)">
            <summary>
            Sets the group id for the specified commandId.
            </summary>
            <param name="commandId">the command Id</param>
            <param name="groupId">the group id</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.SetGroupIdAt(System.Int32,System.Int32)">
            <summary>
            Sets the group id at the specified index.
            </summary>
            <param name="index">index</param>
            <param name="groupId">the group id</param>
            <returns>Returns true on success.</returns>        
        </member>
        <member name="M:CefSharp.IMenuModel.GetSubMenu(CefSharp.CefMenuCommand)">
            <summary>
            Returns the <see cref="T:CefSharp.IMenuModel"/> for the specified commandId or null if invalid.
            </summary>
            <param name="commandId">the command Id</param>
            <returns>Returns the <see cref="T:CefSharp.IMenuModel"/> for the specified commandId or null if invalid.</returns>        
        </member>
        <member name="M:CefSharp.IMenuModel.GetSubMenuAt(System.Int32)">
            <summary>
            Returns the <see cref="T:CefSharp.IMenuModel"/> at the specified index or empty if invalid.
            </summary>
            <param name="index">index</param>
            <returns>Returns the <see cref="T:CefSharp.IMenuModel"/> for the specified commandId or null if invalid.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.IsVisible(CefSharp.CefMenuCommand)">
            <summary>
            Returns true if the specified commandId is visible.
            </summary>
            <param name="commandId">the command Id</param>
            <returns>Returns true if the specified commandId is visible.</returns>        
        </member>
        <member name="M:CefSharp.IMenuModel.IsVisibleAt(System.Int32)">
            <summary>
            Returns true if the specified index is visible.
            </summary>
            <param name="index">index</param>
            <returns>Returns true if the specified index is visible.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.SetVisible(CefSharp.CefMenuCommand,System.Boolean)">
            <summary>
            Change the visibility of the specified commandId.
            </summary>
            <param name="commandId">the command Id</param>
            <param name="visible">visible</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.SetVisibleAt(System.Int32,System.Boolean)">
            <summary>
            Change the visibility at the specified index.
            </summary>
            <param name="index">index</param>
            <param name="visible">visible</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.IsEnabled(CefSharp.CefMenuCommand)">
            <summary>
            Returns true if the specified commandId is enabled.
            </summary>
            <param name="commandId">the command Id</param>
            <returns>Returns true if the specified commandId is enabled.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.IsEnabledAt(System.Int32)">
            <summary>
            Returns true if the specified index is enabled.
            </summary>
            <param name="index">index</param>
            <returns>Returns true if the specified index is enabled.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.SetEnabled(CefSharp.CefMenuCommand,System.Boolean)">
            <summary>
            Change the enabled status of the specified commandId.
            </summary>
            <param name="commandId">the command Id</param>
            <param name="enabled">is enabled</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.SetEnabledAt(System.Int32,System.Boolean)">
            <summary>
            Change the enabled status at the specified index.
            </summary>
            <param name="index">index</param>
            <param name="enabled">is enabled</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.IsChecked(CefSharp.CefMenuCommand)">
            <summary>
            Returns true if the specified commandId is checked. Only applies to check and radio items.
            </summary>
            <param name="commandId">the command Id</param>
            <returns>Returns true if the specified commandId is checked. Only applies to check and radio items.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.IsCheckedAt(System.Int32)">
            <summary>
            Returns true if the specified index is checked. Only applies to check and radio items.
            </summary>
            <param name="index">index</param>
            <returns>Returns true if the specified index is checked. Only applies to check and radio items.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.SetChecked(CefSharp.CefMenuCommand,System.Boolean)">
            <summary>
            Check the specified commandId. Only applies to check and radio items.
            </summary>
            <param name="commandId">the command Id</param>
            <param name="isChecked">set checked</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.SetCheckedAt(System.Int32,System.Boolean)">
            <summary>
            Check the specified index. Only applies to check and radio items.
            </summary>
            <param name="index">index</param>
            <param name="isChecked">set checked</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.HasAccelerator(CefSharp.CefMenuCommand)">
            <summary>
            Returns true if the specified commandId has a keyboard accelerator assigned.
            </summary>
            <param name="commandId">the command Id</param>
            <returns>Returns true if the specified commandId has a keyboard accelerator assigned.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.HasAcceleratorAt(System.Int32)">
            <summary>
            Returns true if the specified index has a keyboard accelerator assigned.
            </summary>
            <param name="index">index</param>
            <returns>Returns true if the specified index has a keyboard accelerator assigned.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.SetAccelerator(CefSharp.CefMenuCommand,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set the keyboard accelerator for the specified commandId. 
            </summary>
            <param name="commandId">the command Id</param>
            <param name="keyCode">keyCode can be any key or character value. </param>
            <param name="shiftPressed">shift key pressed</param>
            <param name="ctrlPressed">ctrl key pressed</param>
            <param name="altPressed">alt key pressed</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.SetAcceleratorAt(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set the keyboard accelerator at the specified index. keyCode can be any key or character value.
            </summary>
            <param name="index">index</param>
            <param name="keyCode">keyCode can be any key or character value. </param>
            <param name="shiftPressed">shift key pressed</param>
            <param name="ctrlPressed">ctrl key pressed</param>
            <param name="altPressed">alt key pressed</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.RemoveAccelerator(CefSharp.CefMenuCommand)">
            <summary>
            Remove the keyboard accelerator for the specified commandId.
            </summary>
            <param name="commandId">the command Id</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.RemoveAcceleratorAt(System.Int32)">
            <summary>
            Remove the keyboard accelerator at the specified index. 
            </summary>
            <param name="index">index</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.GetAccelerator(CefSharp.CefMenuCommand,System.Int32@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Retrieves the keyboard accelerator for the specified commandId. 
            </summary>
            <param name="commandId">the command Id</param>
            <param name="keyCode">keyCode can be any key or character value. </param>
            <param name="shiftPressed">shift key pressed</param>
            <param name="ctrlPressed">ctrl key pressed</param>
            <param name="altPressed">alt key pressed</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="M:CefSharp.IMenuModel.GetAcceleratorAt(System.Int32,System.Int32@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Retrieves the keyboard accelerator for the specified index.
            </summary>
            <param name="index">index</param>
            <param name="keyCode">keyCode can be any key or character value. </param>
            <param name="shiftPressed">shift key pressed</param>
            <param name="ctrlPressed">ctrl key pressed</param>
            <param name="altPressed">alt key pressed</param>
            <returns>Returns true on success.</returns>
        </member>
        <member name="T:CefSharp.ProxyOptions">
            <summary>
            Proxy options
            </summary>
        </member>
        <member name="P:CefSharp.ProxyOptions.IP">
            <summary>
            The IP address for the proxy
            </summary>
        </member>
        <member name="P:CefSharp.ProxyOptions.Port">
            <summary>
            The port for the proxy
            </summary>
        </member>
        <member name="P:CefSharp.ProxyOptions.Username">
            <summary>
            The username for authentication
            </summary>
        </member>
        <member name="P:CefSharp.ProxyOptions.Password">
            <summary>
            The password for authentication
            </summary>
        </member>
        <member name="P:CefSharp.ProxyOptions.BypassList">
            <summary>
            The list of domains that shouldn't be affected by the proxy, Format: example.com;example2.com
            </summary>
        </member>
        <member name="M:CefSharp.ProxyOptions.HasUsernameAndPassword">
            <summary>
            Checks if username and password is set
            </summary>
            <returns>Returns true if both username and password is set, otherwise false</returns>
        </member>
        <member name="M:CefSharp.ProxyOptions.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <param name="ip">The IP address for the proxy</param>
            <param name="port">The port for the proxy</param>
            <param name="username">The username required for authentication</param>
            <param name="password">The password required for authentication</param>
            <param name="bypassList">The list of domains that shouldn't be affected by the proxy, Format: example.com;example2.com</param>
        </member>
        <member name="T:CefSharp.ISslInfo">
            <summary>
            Class representing SSL information. 
            </summary>
        </member>
        <member name="P:CefSharp.ISslInfo.CertStatus">
            <summary>
            Returns a bitmask containing any and all problems verifying the server
            certificate.
            </summary>
        </member>
        <member name="P:CefSharp.ISslInfo.X509Certificate">
            <summary>
            Returns the X.509 certificate.
            </summary>
        </member>
        <member name="T:CefSharp.KeyEvent">
            <summary>
            Class representing a a keyboard event.
            </summary>
        </member>
        <member name="P:CefSharp.KeyEvent.Type">
            <summary>
            The type of keyboard event.
            </summary>
        </member>
        <member name="P:CefSharp.KeyEvent.Modifiers">
            <summary>
            Bit flags describing any pressed modifier keys. See
            cef_event_flags_t for values.
            </summary>
        </member>
        <member name="P:CefSharp.KeyEvent.WindowsKeyCode">
            <summary>
            The Windows key code for the key event. This value is used by the DOM
            specification. Sometimes it comes directly from the event (i.e. on
            Windows) and sometimes it's determined using a mapping function. See
            WebCore/platform/chromium/KeyboardCodes.h for the list of values.
            </summary>
        </member>
        <member name="P:CefSharp.KeyEvent.NativeKeyCode">
            <summary>
            The actual key code genenerated by the platform.
            </summary>
        </member>
        <member name="P:CefSharp.KeyEvent.IsSystemKey">
            <summary>
            Indicates whether the event is considered a "system key" event (see
            http://msdn.microsoft.com/en-us/library/ms646286(VS.85).aspx for details).
            This value will always be false on non-Windows platforms.
            </summary>
        </member>
        <member name="P:CefSharp.KeyEvent.FocusOnEditableField">
            <summary>
            True if the focus is currently on an editable field on the page. This is useful for determining if standard key events should be intercepted.
            </summary>
        </member>
        <member name="T:CefSharp.IPostData">
            <summary>
            Class used to represent post data for a web request. The methods of this class may be called on any thread. 
            </summary>
        </member>
        <member name="M:CefSharp.IPostData.AddElement(CefSharp.IPostDataElement)">
            <summary>
            Add the specified <see cref="T:CefSharp.IPostDataElement"/>.
            </summary>
            <param name="element">element to be added.</param>
            <returns>Returns true if the add succeeds.</returns>
        </member>
        <member name="M:CefSharp.IPostData.RemoveElement(CefSharp.IPostDataElement)">
            <summary>
            Remove  the specified <see cref="T:CefSharp.IPostDataElement"/>.
            </summary>
            <param name="element">element to be removed.</param>
            <returns> Returns true if the add succeeds.</returns>
        </member>
        <member name="P:CefSharp.IPostData.Elements">
            <summary>
            Retrieve the post data elements.
            </summary>
        </member>
        <member name="P:CefSharp.IPostData.IsReadOnly">
            <summary>
            Returns true if this object is read-only.
            </summary>
        </member>
        <member name="M:CefSharp.IPostData.RemoveElements">
            <summary>
            Remove all existing post data elements.
            </summary>
        </member>
        <member name="P:CefSharp.IPostData.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            </summary>
        </member>
        <member name="M:CefSharp.IPostData.CreatePostDataElement">
            <summary>
            Create a new <see cref="T:CefSharp.IPostDataElement"/> instance
            </summary>
            <returns>PostDataElement</returns>
        </member>
        <member name="P:CefSharp.IPostData.HasExcludedElements">
            <summary>
            Returns true if the underlying POST data includes elements that are not
            represented by this IPostData object (for example, multi-part file upload
            data). Modifying IPostData objects with excluded elements may result in
            the request failing.
            </summary>
        </member>
        <member name="T:CefSharp.IPostDataElement">
            <summary>
            Class used to represent a single element in the request post data.
            The methods of this class may be called on any thread. 
            </summary>
        </member>
        <member name="P:CefSharp.IPostDataElement.File">
            <summary>
            Gets or sets the file name.
            </summary>
        </member>
        <member name="P:CefSharp.IPostDataElement.IsReadOnly">
            <summary>
            Gets if the object is read-only.
            </summary>
        </member>
        <member name="M:CefSharp.IPostDataElement.SetToEmpty">
            <summary>
            Remove all contents from the post data element.
            </summary>
        </member>
        <member name="P:CefSharp.IPostDataElement.Type">
            <summary>
            Gets the type of this <see cref="T:CefSharp.IPostDataElement"/>.
            </summary>
        </member>
        <member name="P:CefSharp.IPostDataElement.Bytes">
            <summary>
            Gets or sets the bytes of this <see cref="T:CefSharp.IPostDataElement"/>.
            </summary>
        </member>
        <member name="T:CefSharp.CefSharpSettings">
            <summary>
            Use this static class to configure some CefSharp specific settings like WcfTimeout
            </summary>
        </member>
        <member name="M:CefSharp.CefSharpSettings.#cctor">
            <summary>
            Set default values for CefSharpSettings
            </summary>
        </member>
        <member name="P:CefSharp.CefSharpSettings.LegacyJavascriptBindingEnabled">
            <summary>
            Objects registered using RegisterJsObject and RegisterAsyncJsObject
            will be automatically bound when a V8Context is created. (Soon as the Javascript
            context is created for a browser). This behaviour is like that seen with Javascript
            Binding in version 57 and earlier.
            NOTE: Set this before your first call to RegisterJsObject or RegisterAsyncJsObject
            </summary>
        </member>
        <member name="P:CefSharp.CefSharpSettings.WcfEnabled">
            <summary>
            WCF is used by RegisterJsObject feature for Javascript Binding
            It's reccomended that anyone developing a new application use 
            the RegisterAsyncJsObject version which communicates using native
            Chromium IPC.
            </summary>
        </member>
        <member name="P:CefSharp.CefSharpSettings.WcfTimeout">
            <summary>
            Change the Close timeout for the WCF channel used by the sync JSB binding.
            The default value is currently 2 seconds. Changing this to <see cref="F:System.TimeSpan.Zero"/>
            will result on Abort() being called on the WCF Channel Host
            </summary>
        </member>
        <member name="P:CefSharp.CefSharpSettings.ShutdownOnExit">
            <summary>
            For the WinForms and WPF instances of ChromiumWebBrowser the relevant Application Exit event
            is hooked and Cef.Shutdown() called by default. Set this to false to disable this behaviour.
            This value needs to be set before the first instance of ChromiumWebBrowser is created as
            the event handlers are hooked in the static constructor for the ChromiumWebBrowser class
            </summary>
        </member>
        <member name="P:CefSharp.CefSharpSettings.SubprocessExitIfParentProcessClosed">
            <summary>
            CefSharp.BrowserSubprocess will monitor the parent process and exit if the parent process closes
            before the subprocess. This currently defaults to true. 
            See https://github.com/cefsharp/CefSharp/issues/2359 for more information.
            </summary>
        </member>
        <member name="P:CefSharp.CefSharpSettings.Proxy">
            <summary>
            The proxy options that will be used for all connections
            
            If set before the call to Cef.Initialize, command line arguments will be set for you
            If a username and password is provided and the IPs match authentication is done automatically
            
            NOTE: GetAuthCredentials won't be called for a proxy server that matches the IP
            NOTE: It isn't possble to change the proxy after the call to Cef.Initialize
            </summary>
        </member>
        <member name="P:CefSharp.CefSharpSettings.ConcurrentTaskExecution">
            <summary>
            This influences the behavior of how methods are executed for objects registered using
            <see cref="M:CefSharp.IJavascriptObjectRepository.Register(System.String,System.Object,System.Boolean,CefSharp.BindingOptions)"/>.
            By default the <see cref="T:CefSharp.Internals.MethodRunnerQueue"/> queues Tasks for execution in a sequential order.
            A single method is exeucted at a time. Setting this property to true allows for concurrent task execution.
            Method calls are executed on <see cref="P:System.Threading.Tasks.TaskScheduler.Default"/> (ThreadPool).
            </summary>
        </member>
        <member name="P:CefSharp.CefSharpSettings.FocusedNodeChangedEnabled">
            <summary>
            If true a message will be sent from the render subprocess to the
            browser when a DOM node (or no node) gets focus. The default is
            false.
            </summary>
        </member>
        <member name="T:CefSharp.Cookie">
            <summary>
            Class used to Represent a cookie.
            The built in .Net Cookie class isn't used as some of it's properties have
            internal setters
            </summary>
        </member>
        <member name="P:CefSharp.Cookie.Name">
            <summary>
            The cookie name
            </summary>
        </member>
        <member name="P:CefSharp.Cookie.Value">
            <summary>
            The cookie value. 
            </summary>
        </member>
        <member name="P:CefSharp.Cookie.Domain">
            <summary>
            If domain is empty a host cookie will be created instead of a domain cookie. Domain cookies are stored with a leading "."
            and are visible to sub-domains whereas host cookies are not. 
            </summary>
        </member>
        <member name="P:CefSharp.Cookie.Path">
            <summary>
            Ss non-empty only URLs at or below the path will get the cookie value. 
            </summary>
        </member>
        <member name="P:CefSharp.Cookie.Secure">
            <summary>
            If true the cookie will only be sent for HTTPS requests. 
            </summary>
        </member>
        <member name="P:CefSharp.Cookie.HttpOnly">
            <summary>
            Ss true the cookie will only be sent for HTTP requests. 
            </summary>
        </member>
        <member name="P:CefSharp.Cookie.Expires">
            <summary>
            Expires or null if no expiry
            </summary>
        </member>
        <member name="P:CefSharp.Cookie.Creation">
            <summary>
            The cookie creation date. This is automatically populated by the system on cookie creation. 
            </summary>
        </member>
        <member name="P:CefSharp.Cookie.LastAccess">
            <summary>
            The cookie last access date. This is automatically populated by the system on access. 
            </summary>		
        </member>
        <member name="P:CefSharp.Cookie.SameSite">
            <summary>
            Same site.
            </summary>
        </member>
        <member name="P:CefSharp.Cookie.Priority">
            <summary>
            Priority
            </summary>
        </member>
        <member name="T:CefSharp.DependencyChecker">
            <summary>
            DependencyChecker provides a known list of Cef/CefSharp dependencies and 
            provides helper methods to check for their existance.
            </summary>
        </member>
        <member name="F:CefSharp.DependencyChecker.LocalesPackFile">
            <summary>
            en-US Locales pak file location
            </summary>
        </member>
        <member name="F:CefSharp.DependencyChecker.CefDependencies">
            <summary>
            List of Cef Dependencies
            </summary>
        </member>
        <member name="F:CefSharp.DependencyChecker.CefResources">
            <summary>
            List of Cef Resources (pack files)
            </summary>
        </member>
        <member name="F:CefSharp.DependencyChecker.CefOptionalDependencies">
            <summary>
            List of Optional CEF Dependencies
            </summary>
        </member>
        <member name="F:CefSharp.DependencyChecker.CefSharpDependencies">
            <summary>
            List of CefSharp Dependencies
            </summary>
        </member>
        <member name="F:CefSharp.DependencyChecker.BrowserSubprocessDependencies">
            <summary>
            List of CefSharp.BrowserSubprocess.exe dependencies.
            </summary>
        </member>
        <member name="M:CefSharp.DependencyChecker.CheckDependencies(System.Boolean,System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            CheckDependencies iterates through the list of Cef and CefSharp dependencines
            relative to the path provided and returns a list of missing ones
            </summary>
            <param name="checkOptional">check to see if optional dependencies are present</param>
            <param name="packLoadingDisabled">Is loading of pack files disabled?</param>
            <param name="path">path to check for dependencies</param>
            <param name="resourcesDirPath">The path to the resources directory, if empty the Executing Assembly path is used.</param>
            <param name="browserSubProcessPath">The path to a separate executable that will be launched for sub-processes.</param>
            <param name="localePackFile">The locale pack file e.g. <see cref="F:CefSharp.DependencyChecker.LocalesPackFile"/> </param>
            <returns>List of missing dependencies, if all present an empty List will be returned</returns>
        </member>
        <member name="M:CefSharp.DependencyChecker.CheckDependencyList(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Loop through dependencies and add to the returned missing dependency list if not found.
            </summary>
            <param name="dir">The directory of the dependencies, or the current directory if null.</param>
            <param name="files">The dependencies to check.</param>
            <returns>List of missing dependencies, if all present an empty List will be returned</returns>
        </member>
        <member name="M:CefSharp.DependencyChecker.AssertAllDependenciesPresent(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Checks if all Cef and CefSharp dependencies were found relative to the Executing Assembly.
            Shortcut method that calls <see cref="M:CefSharp.DependencyChecker.CheckDependencies(System.Boolean,System.Boolean,System.String,System.String,System.String,System.String)"/>, throws an Exception if not files are missing.
            </summary>
            <param name="locale">The locale, if empty then en-US will be used.</param>
            <param name="localesDirPath">The path to the locales directory, if empty locales\ will be used.</param>
            <param name="resourcesDirPath">The path to the resources directory, if empty the Executing Assembly path is used.</param>
            <param name="packLoadingDisabled">Is loading of pack files disabled?</param>
            <param name="browserSubProcessPath">The path to a separate executable that will be launched for sub-processes.</param>
            <exception cref="T:System.Exception">Throw when not all dependencies are present</exception>
        </member>
        <member name="T:CefSharp.IBrowser">
            <summary>
            CefSharp interface for CefBrowser.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowser.GetHost">
            <summary>
            Returns the browser host object. This method can only be called in the browser process.
            </summary>
            <returns>the browser host object</returns>
        </member>
        <member name="P:CefSharp.IBrowser.CanGoBack">
            <summary>
            Returns true if the browser can navigate backwards.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowser.GoBack">
            <summary>
            Navigate backwards.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowser.CanGoForward">
            <summary>
            Returns true if the browser can navigate forwards.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowser.GoForward">
            <summary>
            Navigate forwards.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowser.IsLoading">
            <summary>
            Returns true if the browser is currently loading.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowser.CloseBrowser(System.Boolean)">
            <summary>
            Request that the browser close. The JavaScript 'onbeforeunload' event will be fired.
            </summary>
            <param name="forceClose">
            If forceClose is false the event handler, if any, will be allowed to prompt the user and the
            user can optionally cancel the close. If forceClose is true the prompt will not be displayed
            and the close will proceed. Results in a call to <see cref="M:CefSharp.ILifeSpanHandler.DoClose(CefSharp.IWebBrowser,CefSharp.IBrowser)"/> if
            the event handler allows the close or if forceClose is true
            See <see cref="M:CefSharp.ILifeSpanHandler.DoClose(CefSharp.IWebBrowser,CefSharp.IBrowser)"/> documentation for additional usage information.
            </param>
        </member>
        <member name="M:CefSharp.IBrowser.Reload(System.Boolean)">
            <summary>
            Reload the current page.
            </summary>
            <param name="ignoreCache">
            <c>true</c> a reload is performed ignoring browser cache; <c>false</c> a reload is
            performed using files from the browser cache, if available.
            </param>
        </member>
        <member name="M:CefSharp.IBrowser.StopLoad">
            <summary>
            Stop loading the page.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowser.Identifier">
            <summary>
            Returns the globally unique identifier for this browser.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowser.IsSame(CefSharp.IBrowser)">
            <summary>
            Returns true if this object is pointing to the same handle as that object.
            </summary>
            <param name="that">compare browser instances</param>
            <returns>returns true if the same instance</returns>
        </member>
        <member name="P:CefSharp.IBrowser.IsPopup">
            <summary>
            Returns true if the window is a popup window.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowser.HasDocument">
            <summary>
            Returns true if a document has been loaded in the browser.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowser.MainFrame">
            <summary>
            Returns the main (top-level) frame for the browser window.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowser.FocusedFrame">
            <summary>
            Returns the focused frame for the browser window.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowser.GetFrame(System.Int64)">
            <summary>
            Returns the frame with the specified identifier, or NULL if not found.
            </summary>
            <param name="identifier">identifier</param>
            <returns>frame or null</returns>
        </member>
        <member name="M:CefSharp.IBrowser.GetFrame(System.String)">
            <summary>
            Returns the frame with the specified name, or NULL if not found.
            </summary>
            <param name="name">name of frame</param>
            <returns>frame or null</returns>
        </member>
        <member name="M:CefSharp.IBrowser.GetFrameCount">
            <summary>
            Returns the number of frames that currently exist.
            </summary>
            <returns>the number of frames</returns>
        </member>
        <member name="M:CefSharp.IBrowser.GetFrameIdentifiers">
            <summary>
            Returns the identifiers of all existing frames.
            </summary>
            <returns>list of frame identifiers</returns>
        </member>
        <member name="M:CefSharp.IBrowser.GetFrameNames">
            <summary>
            Returns the names of all existing frames.
            </summary>
            <returns>frame names</returns>
        </member>
        <member name="P:CefSharp.IBrowser.IsDisposed">
            <summary>
            Gets a value indicating whether the browser has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.IBrowserHost">
            <summary>
            Interface used to represent the browser process aspects of a browser window.
            They may be called on any thread in that process unless otherwise indicated in the comments. 
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.AddWordToDictionary(System.String)">
            <summary>
            Add the specified word to the spelling dictionary.
            </summary>
            <param name="word">custom word to be added to dictionary</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.CloseBrowser(System.Boolean)">
            <summary>
            Request that the browser close. The JavaScript 'onbeforeunload' event will be fired.
            </summary>
            <param name="forceClose">
            If forceClose is false the event handler, if any, will be allowed to prompt the user and the
            user can optionally cancel the close. If forceClose is true the prompt will not be displayed
            and the close will proceed. Results in a call to <see cref="M:CefSharp.ILifeSpanHandler.DoClose(CefSharp.IWebBrowser,CefSharp.IBrowser)"/> if
            the event handler allows the close or if forceClose is true
            See <see cref="M:CefSharp.ILifeSpanHandler.DoClose(CefSharp.IWebBrowser,CefSharp.IBrowser)"/> documentation for additional usage information.
            </param>
        </member>
        <member name="M:CefSharp.IBrowserHost.TryCloseBrowser">
            <summary>
            Helper for closing a browser. Call this method from the top-level window close handler. Internally this calls CloseBrowser(false) if the close has not yet been initiated. This method returns false while the close is pending and true after the close has completed.
            See <see cref="M:CefSharp.IBrowserHost.CloseBrowser(System.Boolean)"/> and <see cref="M:CefSharp.ILifeSpanHandler.DoClose(CefSharp.IWebBrowser,CefSharp.IBrowser)"/> documentation for additional usage information. This method must be called on the CEF UI thread.
            </summary>
            <returns>
            This method returns false while the close is pending and true after the close has completed
            </returns>
        </member>
        <member name="M:CefSharp.IBrowserHost.CloseDevTools">
            <summary>
            Explicitly close the developer tools window if one exists for this browser instance.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserHost.HasDevTools">
            <summary>
            Returns true if this browser currently has an associated DevTools browser.
            Must be called on the CEF UI thread.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CefSharp.IBrowserHost.SendDevToolsMessage(System.String)" -->
        <member name="M:CefSharp.IBrowserHost.ExecuteDevToolsMethod(System.Int32,System.String,System.String)">
            <summary>
            Execute a method call over the DevTools protocol. This is a more structured
            version of SendDevToolsMessage.
            See the DevTools protocol documentation at https://chromedevtools.github.io/devtools-protocol/ for details
            of supported methods and the expected <paramref name="paramsAsJson"/> dictionary contents.
            See the SendDevToolsMessage documentation for additional usage information.
            </summary>
            <param name="messageId">is an incremental number that uniquely identifies the message (pass 0 to have the next number assigned
            automatically based on previous values)</param>
            <param name="method">is the method name</param>
            <param name="paramsAsJson">are the method parameters represented as a JSON string,
            which may be empty.</param>
            <returns>return the assigned message Id if called on the CEF UI thread and the message was
            successfully submitted for validation, otherwise 0</returns>
        </member>
        <member name="M:CefSharp.IBrowserHost.ExecuteDevToolsMethod(System.Int32,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Execute a method call over the DevTools protocol. This is a more structured
            version of SendDevToolsMessage.
            See the DevTools protocol documentation at https://chromedevtools.github.io/devtools-protocol/ for details
            of supported methods and the expected <paramref name="paramsAsJson"/> dictionary contents.
            See the SendDevToolsMessage documentation for additional usage information.
            </summary>
            <param name="messageId">is an incremental number that uniquely identifies the message (pass 0 to have the next number assigned
            automatically based on previous values)</param>
            <param name="method">is the method name</param>
            <param name="parameters">are the method parameters represented as a dictionary,
            which may be empty.</param>
            <returns>return the assigned message Id if called on the CEF UI thread and the message was
            successfully submitted for validation, otherwise 0</returns>
        </member>
        <member name="M:CefSharp.IBrowserHost.AddDevToolsMessageObserver(CefSharp.Callback.IDevToolsMessageObserver)">
            <summary>
            Add an observer for DevTools protocol messages (method results and events).
            The observer will remain registered until the returned Registration object
            is destroyed. See the SendDevToolsMessage documentation for additional
            usage information.
            </summary>
            <param name="observer">DevTools observer</param>
            <returns>The observer will remain registered until the returned IRegistration object is Disposed.</returns>
        </member>
        <member name="M:CefSharp.IBrowserHost.DragTargetDragEnter(CefSharp.IDragData,CefSharp.MouseEvent,CefSharp.Enums.DragOperationsMask)">
            <summary>
            Call this method when the user drags the mouse into the web view (before calling <see cref="M:CefSharp.IBrowserHost.DragTargetDragOver(CefSharp.MouseEvent,CefSharp.Enums.DragOperationsMask)"/>/<see cref="M:CefSharp.IBrowserHost.DragTargetDragLeave"/>/<see cref="M:CefSharp.IBrowserHost.DragTargetDragDrop(CefSharp.MouseEvent)"/>).
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.DragTargetDragOver(CefSharp.MouseEvent,CefSharp.Enums.DragOperationsMask)">
            <summary>
            Call this method each time the mouse is moved across the web view during a drag operation (after calling <see cref="M:CefSharp.IBrowserHost.DragTargetDragEnter(CefSharp.IDragData,CefSharp.MouseEvent,CefSharp.Enums.DragOperationsMask)"/> and before calling <see cref="M:CefSharp.IBrowserHost.DragTargetDragLeave"/>/<see cref="M:CefSharp.IBrowserHost.DragTargetDragDrop(CefSharp.MouseEvent)"/>). 
            This method is only used when window rendering is disabled.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.DragTargetDragDrop(CefSharp.MouseEvent)">
            <summary>
            Call this method when the user completes the drag operation by dropping the object onto the web view (after calling <see cref="M:CefSharp.IBrowserHost.DragTargetDragEnter(CefSharp.IDragData,CefSharp.MouseEvent,CefSharp.Enums.DragOperationsMask)"/>). 
            The object being dropped is <see cref="T:CefSharp.IDragData"/>, given as an argument to the previous <see cref="M:CefSharp.IBrowserHost.DragTargetDragEnter(CefSharp.IDragData,CefSharp.MouseEvent,CefSharp.Enums.DragOperationsMask)"/> call. 
            This method is only used when window rendering is disabled.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.DragSourceEndedAt(System.Int32,System.Int32,CefSharp.Enums.DragOperationsMask)">
            <summary>
            Call this method when the drag operation started by a <see cref="M:CefSharp.Internals.IRenderWebBrowser.StartDragging(CefSharp.IDragData,CefSharp.Enums.DragOperationsMask,System.Int32,System.Int32)"/> call has ended either in a drop or by being cancelled.
            If the web view is both the drag source and the drag target then all DragTarget* methods should be called before DragSource* methods.
            This method is only used when window rendering is disabled. 
            </summary>
            <param name="x">x mouse coordinate relative to the upper-left corner of the view.</param>
            <param name="y">y mouse coordinate relative to the upper-left corner of the view.</param>
            <param name="op">Drag Operations mask</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.DragTargetDragLeave">
            <summary>
            Call this method when the user drags the mouse out of the web view (after calling <see cref="M:CefSharp.IBrowserHost.DragTargetDragEnter(CefSharp.IDragData,CefSharp.MouseEvent,CefSharp.Enums.DragOperationsMask)"/>).
            This method is only used when window rendering is disabled.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.DragSourceSystemDragEnded">
            <summary>
            Call this method when the drag operation started by a <see cref="M:CefSharp.Internals.IRenderWebBrowser.StartDragging(CefSharp.IDragData,CefSharp.Enums.DragOperationsMask,System.Int32,System.Int32)"/> call has completed.
            This method may be called immediately without first calling DragSourceEndedAt to cancel a drag operation.
            If the web view is both the drag source and the drag target then all DragTarget* methods should be called before DragSource* mthods.
            This method is only used when window rendering is disabled. 
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.Find(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Search for <paramref name="searchText"/>.
            </summary>
            <param name="identifier">must be a unique ID and these IDs
            must strictly increase so that newer requests always have greater IDs than
            older requests. If identifier is zero or less than the previous ID value
            then it will be automatically assigned a new valid ID. </param>
            <param name="searchText">text to search for</param>
            <param name="forward">indicates whether to search forward or backward within the page</param>
            <param name="matchCase">indicates whether the search should be case-sensitive</param>
            <param name="findNext">indicates whether this is the first request or a follow-up</param>
            <remarks>The <see cref="T:CefSharp.IFindHandler"/> instance, if any, will be called to report find results.</remarks>
        </member>
        <member name="P:CefSharp.IBrowserHost.Extension">
            <summary>
            Returns the extension hosted in this browser or null if no extension is hosted. See <see cref="M:CefSharp.IRequestContext.LoadExtension(System.String,System.String,CefSharp.IExtensionHandler)"/> for details.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.GetOpenerWindowHandle">
            <summary>
            Retrieve the window handle of the browser that opened this browser.
            </summary>
            <returns>The handler</returns>
        </member>
        <member name="M:CefSharp.IBrowserHost.GetWindowHandle">
            <summary>
            Retrieve the window handle for this browser. 
            </summary>
            <returns>The handler</returns>
        </member>
        <member name="M:CefSharp.IBrowserHost.GetZoomLevel">
            <summary>
            Gets the current zoom level. The default zoom level is 0.0. This method can only be called on the CEF UI thread. 
            </summary>
            <returns>zoom level (default is 0.0)</returns>
        </member>
        <member name="M:CefSharp.IBrowserHost.GetZoomLevelAsync">
            <summary>
            Get the current zoom level. The default zoom level is 0.0. This method executes GetZoomLevel on the CEF UI thread
            in an async fashion.
            </summary>
            <returns> a <see cref="T:System.Threading.Tasks.Task`1"/> that when executed returns the zoom level as a double.</returns>
        </member>
        <member name="M:CefSharp.IBrowserHost.Invalidate(CefSharp.PaintElementType)">
            <summary>
            Invalidate the view. The browser will call CefRenderHandler::OnPaint asynchronously.
            This method is only used when window rendering is disabled (OSR). 
            </summary>
            <param name="type">indicates which surface to re-paint either View or Popup.</param>
        </member>
        <member name="P:CefSharp.IBrowserHost.IsBackgroundHost">
            <summary>
            Returns true if this browser is hosting an extension background script. Background hosts do not have a window and are not displayable.
            See <see cref="M:CefSharp.IRequestContext.LoadExtension(System.String,System.String,CefSharp.IExtensionHandler)"/> for details.
            </summary>
            <returns>Returns true if this browser is hosting an extension background script.</returns>
        </member>
        <member name="M:CefSharp.IBrowserHost.ImeSetComposition(System.String,CefSharp.Structs.CompositionUnderline[],System.Nullable{CefSharp.Structs.Range},System.Nullable{CefSharp.Structs.Range})">
             <summary>
             Begins a new composition or updates the existing composition. Blink has a
             special node (a composition node) that allows the input method to change
             text without affecting other DOM nodes. 
            
             This method may be called multiple times as the composition changes. When
             the client is done making changes the composition should either be canceled
             or completed. To cancel the composition call ImeCancelComposition. To
             complete the composition call either ImeCommitText or
             ImeFinishComposingText. Completion is usually signaled when:
             The client receives a WM_IME_COMPOSITION message with a GCS_RESULTSTR
             flag (on Windows).
             This method is only used when window rendering is disabled. (WPF and OffScreen) 
             </summary>
             <param name="text">is the optional text that
             will be inserted into the composition node</param>
             <param name="underlines">is an optional set
             of ranges that will be underlined in the resulting text.</param>
             <param name="replacementRange">is an optional range of the existing text that will be replaced. (MAC OSX ONLY)</param>
             <param name="selectionRange"> is an optional range of the resulting text that
             will be selected after insertion or replacement. </param>
        </member>
        <member name="M:CefSharp.IBrowserHost.ImeCommitText(System.String,System.Nullable{CefSharp.Structs.Range},System.Int32)">
            <summary>
            Completes the existing composition by optionally inserting the specified
            text into the composition node.
            This method is only used when window rendering is disabled. (WPF and OffScreen) 
            </summary>
            <param name="text">text that will be committed</param>
            <param name="replacementRange">is an optional range of the existing text that will be replaced. (MAC OSX ONLY)</param>
            <param name="relativeCursorPos">is where the cursor will be positioned relative to the current cursor position. (MAC OSX ONLY)</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.ImeFinishComposingText(System.Boolean)">
            <summary>
            Completes the existing composition by applying the current composition node
            contents. See comments on ImeSetComposition for usage.
            This method is only used when window rendering is disabled. (WPF and OffScreen) 
            </summary>
            <param name="keepSelection">If keepSelection is false the current selection, if any, will be discarded.</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.ImeCancelComposition">
            <summary>
            Cancels the existing composition and discards the composition node
            contents without applying them. See comments on ImeSetComposition for
            usage.
            This method is only used when window rendering is disabled. (WPF and OffScreen) 
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserHost.MouseCursorChangeDisabled">
            <summary>
            Get/Set Mouse cursor change disabled
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.NotifyMoveOrResizeStarted">
            <summary>
            Notify the browser that the window hosting it is about to be moved or resized.
            This will dismiss any existing popups (dropdowns).
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.NotifyScreenInfoChanged">
            <summary>
            Send a notification to the browser that the screen info has changed.
            The browser will then call CefRenderHandler::GetScreenInfo to update the screen information with the new values.
            This simulates moving the webview window from one display to another, or changing the properties of the current display.
            This method is only used when window rendering is disabled. 
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.Print">
            <summary>
            Print the current browser contents. 
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.PrintToPdf(System.String,CefSharp.PdfPrintSettings,CefSharp.IPrintToPdfCallback)">
            <summary>
            Asynchronously prints the current browser contents to the Pdf file specified.
            The caller is responsible for deleting the file when done.
            </summary>
            <param name="path">Output file location.</param>
            <param name="settings">Print Settings, can be null</param>
            <param name="callback">Callback executed when printing complete</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.ReplaceMisspelling(System.String)">
            <summary>
            If a misspelled word is currently selected in an editable node calling this method will replace it with the specified word.
            </summary>
            <param name="word">word to be replaced</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.RunFileDialog(CefSharp.CefFileDialogMode,System.String,System.String,System.Collections.Generic.IList{System.String},System.Int32,CefSharp.Callback.IRunFileDialogCallback)">
            <summary>
            Call to run a file chooser dialog. Only a single file chooser dialog may be pending at any given time.
            The dialog will be initiated asynchronously on the CEF UI thread.
            </summary>
            <param name="mode">represents the type of dialog to display</param>
            <param name="title">to the title to be used for the dialog and may be empty to show the default title ("Open" or "Save" depending on the mode)</param>
            <param name="defaultFilePath">is the path with optional directory and/or file name component that will be initially selected in the dialog</param>
            <param name="acceptFilters">are used to restrict the selectable file types and may any combination of (a) valid lower-cased MIME types (e.g. "text/*" or "image/*"), (b) individual file extensions (e.g. ".txt" or ".png"), or (c) combined description and file extension delimited using "|" and ";" (e.g. "Image Types|.png;.gif;.jpg")</param>
            <param name="selectedAcceptFilter">is the 0-based index of the filter that will be selected by default</param>
            <param name="callback">will be executed after the dialog is dismissed or immediately if another dialog is already pending.</param>
        </member>
        <member name="P:CefSharp.IBrowserHost.RequestContext">
            <summary>
            Returns the request context for this browser.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.SendExternalBeginFrame">
            <summary>
            Issue a BeginFrame request to Chromium.
            Only valid when <see cref="P:CefSharp.IWindowInfo.ExternalBeginFrameEnabled"/> is set to true.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.SendCaptureLostEvent">
            <summary>
            Send a capture lost event to the browser.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.SendFocusEvent(System.Boolean)">
            <summary>
            Send a focus event to the browser. . (Used for OSR Rendering e.g. WPF or OffScreen)
            </summary>
            <param name="setFocus">set focus</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.SendKeyEvent(CefSharp.KeyEvent)">
            <summary>
             Send a key event to the browser.
            </summary>
            <param name="keyEvent">represents keyboard event</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.SendKeyEvent(System.Int32,System.Int32,System.Int32)">
            <summary>
            Send key event to browser based on operating system message
            </summary>
            <param name="message">message</param>
            <param name="wParam">wParam</param>
            <param name="lParam">lParam</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.SendMouseClickEvent(CefSharp.MouseEvent,CefSharp.MouseButtonType,System.Boolean,System.Int32)">
            <summary>
            Send a mouse click event to the browser.
            </summary>
            <param name="mouseEvent">mouse event - x, y and modifiers</param>
            <param name="mouseButtonType">Mouse ButtonType</param>
            <param name="mouseUp">mouse up</param>
            <param name="clickCount">click count</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.SendMouseWheelEvent(CefSharp.MouseEvent,System.Int32,System.Int32)">
            <summary>
            Send a mouse wheel event to the browser.
            </summary>
            <param name="mouseEvent">mouse event - x, y and modifiers</param>
            <param name="deltaX">Movement delta for X direction.</param>
            <param name="deltaY">movement delta for Y direction.</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.SendTouchEvent(CefSharp.Structs.TouchEvent)">
            <summary>
            Send a touch event to the browser.
            WPF and OffScreen browsers only
            </summary>
            <param name="evt">touch event</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.SetAccessibilityState(CefSharp.CefState)">
            <summary>
            Set accessibility state for all frames.  If accessibilityState is Default then accessibility will be disabled by default
            and the state may be further controlled with the "force-renderer-accessibility" and "disable-renderer-accessibility"
            command-line switches. If accessibilityState is STATE_ENABLED then accessibility will be enabled.
            If accessibilityState is STATE_DISABLED then accessibility will be completely disabled. For windowed browsers
            accessibility will be enabled in Complete mode (which corresponds to kAccessibilityModeComplete in Chromium).
            In this mode all platform accessibility objects will be created and managed by Chromium's internal implementation.
            The client needs only to detect the screen reader and call this method appropriately. For example, on Windows the
            client can handle WM_GETOBJECT with OBJID_CLIENT to detect accessibility readers. For windowless browsers accessibility
            will be enabled in TreeOnly mode (which corresponds to kAccessibilityModeWebContentsOnly in Chromium). In this mode
            renderer accessibility is enabled, the full tree is computed, and events are passed to IAccessibiltyHandler,
            but platform accessibility objects are not created. The client may implement platform accessibility objects using
            IAccessibiltyHandler callbacks if desired. 
            </summary>
            <param name="accessibilityState">may be default, enabled or disabled.</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.SetAutoResizeEnabled(System.Boolean,CefSharp.Structs.Size,CefSharp.Structs.Size)">
            <summary>
            Enable notifications of auto resize via IDisplayHandler.OnAutoResize. Notifications are disabled by default.
            </summary>
            <param name="enabled">enable auto resize</param>
            <param name="minSize">minimum size</param>
            <param name="maxSize">maximum size</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.SetFocus(System.Boolean)">
            <summary>
            Set whether the browser is focused. (Used for Normal Rendering e.g. WinForms)
            </summary>
            <param name="focus">set focus</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.SetZoomLevel(System.Double)">
            <summary>
            Change the zoom level to the specified value. Specify 0.0 to reset the zoom level.
            If called on the CEF UI thread the change will be applied immediately.
            Otherwise, the change will be applied asynchronously on the UI thread. 
            </summary>
            <param name="zoomLevel">zoom level</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.ShowDevTools(CefSharp.IWindowInfo,System.Int32,System.Int32)">
            <summary>
            Open developer tools in its own window. If inspectElementAtX and/or inspectElementAtY  are specified then
            the element at the specified (x,y) location will be inspected.
            </summary>
            <param name="windowInfo">window info used for showing dev tools</param>
            <param name="inspectElementAtX">x coordinate (used for inspectElement)</param>
            <param name="inspectElementAtY">y coordinate (used for inspectElement)</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.StartDownload(System.String)">
            <summary>
            Download the file at url using IDownloadHandler. 
            </summary>
            <param name="url">url to download</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.StopFinding(System.Boolean)">
            <summary>
            Cancel all searches that are currently going on. 
            </summary>
            <param name="clearSelection">clear the selection</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.SendMouseMoveEvent(CefSharp.MouseEvent,System.Boolean)">
            <summary>
            Send a mouse move event to the browser, coordinates, 
            </summary>
            <param name="mouseEvent">mouse information, x and y values are relative to upper-left corner of view</param>
            <param name="mouseLeave">mouse leave</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.WasHidden(System.Boolean)">
            <summary>
            Notify the browser that it has been hidden or shown.
            Layouting and rendering notification will stop when the browser is hidden.
            This method is only used when window rendering is disabled (WPF/OffScreen). 
            </summary>
            <param name="hidden"></param>
        </member>
        <member name="M:CefSharp.IBrowserHost.WasResized">
            <summary>
            Notify the browser that the widget has been resized.
            The browser will first call CefRenderHandler::GetViewRect to get the new size and then call CefRenderHandler::OnPaint asynchronously with the updated regions.
            This method is only used when window rendering is disabled. 
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.GetNavigationEntries(CefSharp.INavigationEntryVisitor,System.Boolean)">
            <summary>
            Retrieve a snapshot of current navigation entries as values sent to the
            specified visitor. 
            </summary>
            <param name="visitor">visitor</param>
            <param name="currentOnly">If true only the current navigation
            entry will be sent, otherwise all navigation entries will be sent.</param>
        </member>
        <member name="M:CefSharp.IBrowserHost.GetVisibleNavigationEntry">
            <summary>
            Returns the current visible navigation entry for this browser. This method
            can only be called on the CEF UI thread which by default is not the same
            as your application UI thread.
            </summary>
            <returns>the current navigation entry</returns>
        </member>
        <member name="P:CefSharp.IBrowserHost.WindowlessFrameRate">
            <summary>
            Gets/sets the maximum rate in frames per second (fps) that CefRenderHandler::
            OnPaint will be called for a windowless browser. The actual fps may be
            lower if the browser cannot generate frames at the requested rate. The
            minimum value is 1 and the maximum value is 60 (default 30). This method
            can only be called on the UI thread. Can also be set at browser creation
            via BrowserSettings.WindowlessFrameRate.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserHost.WindowRenderingDisabled">
            <summary>
            Returns true if window rendering is disabled.
            </summary>
        </member>
        <member name="M:CefSharp.IBrowserHost.SetAudioMuted(System.Boolean)">
            <summary>
            Set whether the browser's audio is muted.
            </summary>
            <param name="mute">true or false</param>
        </member>
        <member name="P:CefSharp.IBrowserHost.IsAudioMuted">
            <summary>
            Returns true if the browser's audio is muted.
            This method can only be called on the CEF UI thread.
            </summary>
        </member>
        <member name="P:CefSharp.IBrowserHost.IsDisposed">
            <summary>
            Gets a value indicating whether the browserHost has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.IFrame">
            <summary>
            This interface represents a CefFrame object (i.e. a HTML frame)
            </summary>
        </member>
        <member name="P:CefSharp.IFrame.IsValid">
            <summary>
            True if this object is currently attached to a valid frame.
            </summary>
        </member>
        <member name="M:CefSharp.IFrame.Undo">
            <summary>
            Execute undo in this frame.
            </summary>
        </member>
        <member name="M:CefSharp.IFrame.Redo">
            <summary>
            Execute redo in this frame.
            </summary>
        </member>
        <member name="M:CefSharp.IFrame.Cut">
            <summary>
            Execute cut in this frame.
            </summary>
        </member>
        <member name="M:CefSharp.IFrame.Copy">
            <summary>
            Execute copy in this frame.
            </summary>
        </member>
        <member name="M:CefSharp.IFrame.Paste">
            <summary>
            Execute paste in this frame.
            </summary>
        </member>
        <member name="M:CefSharp.IFrame.Delete">
            <summary>
            Execute delete in this frame.
            </summary>
        </member>
        <member name="M:CefSharp.IFrame.SelectAll">
            <summary>
            Execute select all in this frame.
            </summary>
        </member>
        <member name="M:CefSharp.IFrame.ViewSource">
            <summary>
            Save this frame's HTML source to a temporary file and open it in the
            default text viewing application. This method can only be called from the
            browser process.
            </summary>
        </member>
        <member name="M:CefSharp.IFrame.GetSourceAsync">
            <summary>
            Retrieve this frame's HTML source as a string sent to the specified visitor.
            </summary>
            <returns>
            a <see cref="T:System.Threading.Tasks.Task`1"/> that when executed returns this frame's HTML source as a string.
            </returns>
        </member>
        <member name="M:CefSharp.IFrame.GetSource(CefSharp.IStringVisitor)">
            <summary>
            Retrieve this frame's HTML source as a string sent to the specified visitor. 
            Use the <see cref="M:CefSharp.IFrame.GetSourceAsync"/> method for a Task based async wrapper
            </summary>
            <param name="visitor">visitor will receive string values asynchronously</param>
        </member>
        <member name="M:CefSharp.IFrame.GetTextAsync">
            <summary>
            Retrieve this frame's display text as a string sent to the specified visitor.
            </summary>
            <returns>
            a <see cref="T:System.Threading.Tasks.Task`1"/> that when executed returns the frame's display text as a string.
            </returns>
        </member>
        <member name="M:CefSharp.IFrame.GetText(CefSharp.IStringVisitor)">
            <summary>
            Retrieve this frame's display text as a string sent to the specified visitor. 
            Use the <see cref="M:CefSharp.IFrame.GetTextAsync"/> method for a Task based async wrapper
            </summary>
            <param name="visitor">visitor will receive string values asynchronously</param>
        </member>
        <member name="M:CefSharp.IFrame.LoadRequest(CefSharp.IRequest)">
            <summary>
            Load the custom request. LoadRequest can only be used if a renderer process already exists.
            In newer versions initially loading about:blank no longer creates a renderer process. You
            can load a Data Uri initially then call this method.
            https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs
            WARNING: This method will fail with "bad IPC message" reason
            INVALID_INITIATOR_ORIGIN (213) unless you first navigate to the
            request origin using some other mechanism (LoadURL, link click, etc).
            </summary>
            <param name="request">request to be loaded in the frame</param>
        </member>
        <member name="M:CefSharp.IFrame.LoadUrl(System.String)">
            <summary>
            Load the specified url.
            </summary>
            <param name="url">url to be loaded in the frame</param>
        </member>
        <member name="M:CefSharp.IFrame.ExecuteJavaScriptAsync(System.String,System.String,System.Int32)">
            <summary>
            Execute a string of JavaScript code in this frame.
            </summary>
            <param name="code">Javascript to execute</param>
            <param name="scriptUrl">is the URL where the script in question can be found, if any.
            The renderer may request this URL to show the developer the source of the error.</param>
            <param name="startLine">is the base line number to use for error reporting.</param>
        </member>
        <member name="M:CefSharp.IFrame.EvaluateScriptAsync(System.String,System.String,System.Int32,System.Nullable{System.TimeSpan},System.Boolean)">
            <summary>
            Execute some Javascript code in the context of this WebBrowser, and return the result of the evaluation
            in an Async fashion
            </summary>
            <param name="script">The Javascript code that should be executed.</param>
            <param name="scriptUrl">is the URL where the script in question can be found, if any.</param>
            <param name="startLine">is the base line number to use for error reporting.</param>
            <param name="timeout">The timeout after which the Javascript code execution should be aborted.</param>
            <param name="useImmediatelyInvokedFuncExpression">When true the script is wrapped in a self executing function.
            Make sure to use a return statement in your javascript. e.g. (function () { return 42; })();
            When false don't include a return statement e.g. 42;
            </param>
            <returns>A Task that can be awaited to perform the script execution</returns>
        </member>
        <member name="P:CefSharp.IFrame.IsMain">
            <summary>
            Returns true if this is the main (top-level) frame.
            </summary>
        </member>
        <member name="P:CefSharp.IFrame.IsFocused">
            <summary>
            Returns true if this is the focused frame.
            </summary>
        </member>
        <member name="P:CefSharp.IFrame.Name">
            <summary>
            Returns the name for this frame. If the frame has an assigned name (for
            example, set via the iframe "name" attribute) then that value will be
            returned. Otherwise a unique name will be constructed based on the frame
            parent hierarchy. The main (top-level) frame will always have an empty name
            value.
            </summary>
        </member>
        <member name="P:CefSharp.IFrame.Identifier">
            <summary>
            Returns the globally unique identifier for this frame or &lt; 0 if the underlying frame does not yet exist.
            </summary>
        </member>
        <member name="P:CefSharp.IFrame.Parent">
            <summary>
            Returns the parent of this frame or NULL if this is the main (top-level) frame.
            </summary>
        </member>
        <member name="P:CefSharp.IFrame.Url">
            <summary>
            Returns the URL currently loaded in this frame.
            </summary>
        </member>
        <member name="P:CefSharp.IFrame.Browser">
            <summary>
            Returns the browser that this frame belongs to.
            </summary>
        </member>
        <member name="P:CefSharp.IFrame.IsDisposed">
            <summary>
            Gets a value indicating whether the frame has been disposed of.
            </summary>
        </member>
        <member name="M:CefSharp.IFrame.CreateRequest(System.Boolean)">
            <summary>
            Create a custom request for use with <see cref="M:CefSharp.IFrame.LoadRequest(CefSharp.IRequest)"/>
            </summary>
            <param name="initializePostData">Initialize the PostData object when creating this request</param>
            <returns>A new instance of the request</returns>
        </member>
        <member name="M:CefSharp.IFrame.CreateUrlRequest(CefSharp.IRequest,CefSharp.IUrlRequestClient)">
             <summary>
             Create a new URL request that will be treated as originating from this frame
             and the associated browser. This request may be intercepted by the client via
             <see cref="T:CefSharp.IResourceRequestHandler"/> or <see cref="T:CefSharp.ISchemeHandlerFactory"/>.
             Use IUrlRequest.Create instead if you do not want the request to have
             this association, in which case it may be handled differently (see documentation on that method).
            
             Requests may originate from both the browser process and the render process.
             For requests originating from the browser process: - POST data may only contain a single element
             of type PDE_TYPE_FILE or PDE_TYPE_BYTES.
             For requests originating from the render process: - POST data may only contain a single element of type PDE_TYPE_BYTES.
             - If the response contains Content-Disposition or Mime-Type header values that would not normally be rendered then
             the response may receive special handling inside the browser
             for example, via the file download code path instead of the URL request code path).
            
             The request object will be marked as read-only after calling this method. 
             </summary>
             <param name="request">the web request</param>
             <param name="client">the client</param>
        </member>
        <member name="T:CefSharp.IResponse">
            <summary>
            Class used to represent a web response. The methods of this class may be called on any thread. 
            </summary>
        </member>
        <member name="P:CefSharp.IResponse.Charset">
            <summary>
            Get/Set the response charset.
            </summary>
        </member>
        <member name="P:CefSharp.IResponse.MimeType">
            <summary>
            MimeType
            </summary>
        </member>
        <member name="P:CefSharp.IResponse.Headers">
            <summary>
            Response Headers
            </summary>
        </member>
        <member name="P:CefSharp.IResponse.IsReadOnly">
            <summary>
            Returns true if this object is read-only.
            </summary>
        </member>
        <member name="P:CefSharp.IResponse.ErrorCode">
            <summary>
            Get/set the response error code.
            </summary>
        </member>
        <member name="P:CefSharp.IResponse.StatusCode">
            <summary>
            The status code of the response. Unless set, the default value used is 200
            (corresponding to HTTP status OK).
            </summary>
        </member>
        <member name="P:CefSharp.IResponse.StatusText">
            <summary>
            Status Text
            </summary>
        </member>
        <member name="M:CefSharp.IResponse.GetHeaderByName(System.String)">
            <summary>
            Returns the first header value for name or an empty string if not found.
            Will not return the Referer value if any. Use <see cref="P:CefSharp.IResponse.Headers"/> instead if name might have multiple values.
            </summary>
            <param name="name">header name</param>
            <returns>Returns the first header value for name or an empty string if not found.</returns>
        </member>
        <member name="M:CefSharp.IResponse.SetHeaderByName(System.String,System.String,System.Boolean)">
            <summary>
            Set the header name to value. The Referer value cannot be set using this method.
            Use <see cref="!:SetReferrer(string, ReferrerPolicy)"/> instead.
            </summary>
            <param name="name">header name</param>
            <param name="value">new header value</param>
            <param name="overwrite">If overwrite is true any existing values will be replaced with the new value. If overwrite is false any existing values will not be overwritten</param>
        </member>
        <member name="T:CefSharp.IWindowInfo">
            <summary>
            Class representing window information.
            </summary>
        </member>
        <member name="P:CefSharp.IWindowInfo.X">
            <summary>
            X coordinate
            </summary>
        </member>
        <member name="P:CefSharp.IWindowInfo.Y">
            <summary>
            Y coordinate
            </summary>
        </member>
        <member name="P:CefSharp.IWindowInfo.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:CefSharp.IWindowInfo.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:CefSharp.IWindowInfo.Style">
            <summary>
            Window style
            </summary>
        </member>
        <member name="P:CefSharp.IWindowInfo.ExStyle">
            <summary>
            Ex window style
            </summary>
        </member>
        <member name="P:CefSharp.IWindowInfo.ParentWindowHandle">
            <summary>
            Parent window handle
            </summary>
        </member>
        <member name="P:CefSharp.IWindowInfo.WindowlessRenderingEnabled">
            <summary>
            Set to true to create the browser using windowless (off-screen) rendering.
            No window will be created for the browser and all rendering will occur via the
            IRenderHandler interface. The <see cref="P:CefSharp.IWindowInfo.ParentWindowHandle"/> value will be used to identify monitor info
            and to act as the parent window for dialogs, context menus, etc. If |<see cref="P:CefSharp.IWindowInfo.ParentWindowHandle"/> is not provided then the main screen monitor will be used and some functionality that requires a parent window may not function correctly.
            In order to create windowless browsers the CefSettings.WindowlessRenderingEnabled value must be set to true.
            Transparent painting is enabled by default but can be disabled by setting <see cref="P:CefSharp.IBrowserSettings.BackgroundColor"/> to an opaque value.
            </summary>
        </member>
        <member name="P:CefSharp.IWindowInfo.SharedTextureEnabled">
            <summary>
            Set to true to enable shared textures for windowless rendering. Only
            valid if <see cref="P:CefSharp.IWindowInfo.WindowlessRenderingEnabled"/> is also set to true. Currently
            only supported on Windows (D3D11). This feature is experimental and has many bugs
            at the moment.
            </summary>
        </member>
        <member name="P:CefSharp.IWindowInfo.ExternalBeginFrameEnabled">
            <summary>
            Set to true to enable the ability to issue BeginFrame requests from the
            client application by calling <see cref="M:CefSharp.IBrowserHost.SendExternalBeginFrame"/>.
            </summary>
        </member>
        <member name="P:CefSharp.IWindowInfo.WindowHandle">
            <summary>
            Handle for the new browser window. Only used with windowed rendering.
            </summary>
        </member>
        <member name="M:CefSharp.IWindowInfo.SetAsChild(System.IntPtr)">
            <summary>
            Create the browser as a child window.
            Calls GetClientRect(Hwnd) to obtain the window bounds
            </summary>
            <param name="parentHandle">parent handle</param>
        </member>
        <member name="M:CefSharp.IWindowInfo.SetAsChild(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create the browser as a child window.
            </summary>
            <param name="parentHandle">parent handle</param>
            <param name="left">left</param>
            <param name="top">top</param>
            <param name="right">right</param>
            <param name="bottom">bottom</param>
        </member>
        <member name="M:CefSharp.IWindowInfo.SetAsPopup(System.IntPtr,System.String)">
            <summary>
            Create the browser as a popup window.
            </summary>
            <param name="parentHandle">parent handle</param>
            <param name="windowName">window name</param>
        </member>
        <member name="M:CefSharp.IWindowInfo.SetAsWindowless(System.IntPtr)">
            <summary>
            Create the browser using windowless (off-screen) rendering.
            No window will be created for the browser and all rendering will occur via the CefRenderHandler interface. This window will automatically be transparent unless a colored backgrond is set in the browser settings.
            </summary>
            <param name="parentHandle">Value will be used to identify monitor info and to act as the parent window for dialogs, context menus, etc.
            If not provided then the main screen monitor will be used and some functionality that requires a parent window may not function correctly.
            In order to create windowless browsers the CefSettings.windowless_rendering_enabled value must be set to true.</param>
        </member>
        <member name="T:CefSharp.MouseEvent">
            <summary>
            Struct representing a mouse event.
            </summary>
        </member>
        <member name="P:CefSharp.MouseEvent.X">
            <summary>
            x coordinate - relative to upper-left corner of view
            </summary>
        </member>
        <member name="P:CefSharp.MouseEvent.Y">
            <summary>
            y coordinate - relative to upper-left corner of view
            </summary>
        </member>
        <member name="P:CefSharp.MouseEvent.Modifiers">
            <summary>
            Bit flags describing any pressed modifier keys.
            </summary>
        </member>
        <member name="M:CefSharp.MouseEvent.#ctor(System.Int32,System.Int32,CefSharp.CefEventFlags)">
            <summary>
            Mouse Event
            </summary>
            <param name="x">x coordinate relative to the upper-left corner of the view.</param>
            <param name="y">y coordinate relative to the upper-left corner of the view.</param>
            <param name="modifiers">modifiers</param>
        </member>
        <member name="T:CefSharp.IDragData">
            <summary>
            Used to represent drag data.
            </summary>
        </member>
        <member name="M:CefSharp.IDragData.Clone">
            <summary>
            Gets a copy of the current drag data
            </summary>
            <returns>a clone of the current object</returns>
        </member>
        <member name="P:CefSharp.IDragData.IsReadOnly">
            <summary>
            Returns true if this object is read-only.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.FileName">
            <summary>
            Return the name of the file being dragged out of the browser window.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.FileNames">
            <summary>
            Retrieve the list of file names that are being dragged into the browser window
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.FragmentBaseUrl">
            <summary>
            Return the base URL that the fragment came from. This value is used for resolving relative URLs and may be empty. 
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.FragmentHtml">
            <summary>
            Return the text/html fragment that is being dragged. 
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.FragmentText">
            <summary>
            Return the plain text fragment that is being dragged.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.HasImage">
            <summary>
            Returns true if an image representation of drag data is available.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.Image">
            <summary>
            Get the image representation of drag data.
            May return NULL if no image representation is available.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.ImageHotspot">
            <summary>
            Get the image hotspot (drag start location relative to image dimensions).
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.LinkMetaData">
            <summary>
            Return the metadata, if any, associated with the link being dragged. 
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.LinkTitle">
            <summary>
            Return the title associated with the link being dragged.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.LinkUrl">
            <summary>
            Return the link URL that is being dragged. 
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.IsFile">
            <summary>
            Returns true if the drag data is a file.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.IsFragment">
            <summary>
            Returns true if the drag data is a text or html fragment.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.IsLink">
            <summary>
            Returns true if the drag data is a link
            </summary>
        </member>
        <member name="M:CefSharp.IDragData.AddFile(System.String,System.String)">
            <summary>
            Add a file that is being dragged into the webview.
            </summary>
            <param name="path">File Path</param>
            <param name="displayName">Optional Display Name</param>
        </member>
        <member name="M:CefSharp.IDragData.ResetFileContents">
            <summary>
            Reset the file contents. You should do this before calling
            CefBrowserHost::DragTargetDragEnter as the web view does not allow us to
            drag in this kind of data.
            </summary>
        </member>
        <member name="M:CefSharp.IDragData.GetFileContents(System.IO.Stream)">
            <summary>
            Write the contents of the file being dragged out of the web view into the provided <see cref="T:System.IO.Stream"/>
            For a suggested filename check the <see cref="P:CefSharp.IDragData.FileName"/> property
            </summary>
            <param name="stream">Stream data is to be written to. If null this method will return the
            size of the file contents in bytes.</param>
            <returns>Returns the number of bytes written to the stream</returns>
        </member>
        <member name="P:CefSharp.IDragData.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.DownloadItem">
            <summary>
            Class used to represent a download item.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.IsValid">
            <summary>
            Returns true if this object is valid. Do not call any other methods if this function returns false.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.IsInProgress">
            <summary>
            Returns true if the download is in progress.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.IsComplete">
            <summary>
            Returns true if the download is complete.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.IsCancelled">
            <summary>
            Returns true if the download has been canceled or interrupted.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.CurrentSpeed">
            <summary>
            Returns a simple speed estimate in bytes/s.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.PercentComplete">
            <summary>
            Returns the rough percent complete or -1 if the receive total size is unknown.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.TotalBytes">
            <summary>
            Returns the total number of bytes.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.ReceivedBytes">
            <summary>
            Returns the number of received bytes.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.StartTime">
            <summary>
            Returns the time that the download started
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.EndTime">
            <summary>
            Returns the time that the download ended
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.FullPath">
            <summary>
            Returns the full path to the downloaded or downloading file.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.Id">
            <summary>
            Returns the unique identifier for this download.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.Url">
            <summary>
            Returns the URL.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.OriginalUrl">
            <summary>
            Returns the URL as it was before any redirects.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.SuggestedFileName">
            <summary>
            Returns the suggested file name.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.ContentDisposition">
            <summary>
            Returns the content disposition.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.MimeType">
            <summary>
            Returns the mime type.
            </summary>
        </member>
        <member name="T:CefSharp.IContextMenuParams">
            <summary>
            Wrapper for the CefContextMenuParams
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.YCoord">
            <summary>
            Returns the Y coordinate of the mouse where the context menu was invoked.
            Coords are relative to the associated RenderView's origin.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.XCoord">
            <summary>
            Returns the X coordinate of the mouse where the context menu was invoked.
            Coords are relative to the associated RenderView's origin.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.TypeFlags">
            <summary>
            Returns flags representing the type of node that the context menu was invoked on.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.LinkUrl">
            <summary>
            Returns the URL of the link, if any, that encloses the node that the
            context menu was invoked on.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.UnfilteredLinkUrl">
            <summary>
            Returns the link URL, if any, to be used ONLY for "copy link address". We
            don't validate this field in the frontend process.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.SourceUrl">
            <summary>
            Returns the source URL, if any, for the element that the context menu was
            invoked on. Example of elements with source URLs are img, audio, and video.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.HasImageContents">
            <summary>
            Returns true if the context menu was invoked on an image which has
            non-empty contents.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.PageUrl">
            <summary>
            Returns the URL of the top level page that the context menu was invoked on.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.FrameUrl">
            <summary>
            Returns the URL of the subframe that the context menu was invoked on.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.FrameCharset">
            <summary>
            Returns the character encoding of the subframe that the context menu was
            invoked on.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.MediaType">
            <summary>
            Returns the type of context node that the context menu was invoked on.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.MediaStateFlags">
            <summary>
            Returns flags representing the actions supported by the media element, if
            any, that the context menu was invoked on.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.SelectionText">
            <summary>
            Returns the text of the selection, if any, that the context menu was
            invoked on.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.MisspelledWord">
            <summary>
            Returns the text of the misspelled word, if any, that the context menu was
            invoked on.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.DictionarySuggestions">
            <summary>
            Returns a list of strings from the spell check service for the misspelled word if there is one.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.IsEditable">
            <summary>
            Returns true if the context menu was invoked on an editable node.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.IsSpellCheckEnabled">
            <summary>
            Returns true if the context menu was invoked on an editable node where
            spell-check is enabled.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.EditStateFlags">
            <summary>
            Returns flags representing the actions supported by the editable node, if
            any, that the context menu was invoked on.
            </summary>
            <returns>Returns ContextMenuEditState as flags</returns>
        </member>
        <member name="P:CefSharp.IContextMenuParams.IsCustomMenu">
            <summary>
            Returns true if the context menu contains items specified by the renderer
            process (for example, plugin placeholder or pepper plugin menu items).
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.IsPepperMenu">
            <summary>
            Returns true if the context menu was invoked from a pepper plugin.
            </summary>
        </member>
        <member name="P:CefSharp.IContextMenuParams.IsDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of.
            </summary>
        </member>
        <member name="T:CefSharp.JavascriptIgnoreAttribute">
            <summary>
            JavascriptIgnoreAttribute - Methods and Properties marked with this attribute
            will be excluded from Javascript Binding
            </summary>
        </member>
        <member name="T:CefSharp.JavascriptResponse">
            <summary>
            Javascript Response
            </summary>
        </member>
        <member name="P:CefSharp.JavascriptResponse.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:CefSharp.JavascriptResponse.Success">
            <summary>
            Was the javascript executed successfully
            </summary>
        </member>
        <member name="P:CefSharp.JavascriptResponse.Result">
            <summary>
            Javascript response
            </summary>
        </member>
        <member name="T:CefSharp.PostDataExtensions">
            <summary>
            Post Data extension methods - Makes accessing post data easier
            </summary>
        </member>
        <member name="M:CefSharp.PostDataExtensions.GetCharSet(CefSharp.IRequest)">
            <summary>
            A convenience extension method that extracts the Character set from
            the content-type header. Can be used in conjuncation with <see cref="M:CefSharp.PostDataExtensions.GetBody(CefSharp.IPostDataElement,System.String)"/>
            </summary>
            <param name="request">the request</param>
            <returns>character set e.g. UTF-8</returns>
        </member>
        <member name="M:CefSharp.PostDataExtensions.GetBody(CefSharp.IPostDataElement,System.String)">
            <summary>
            Converts the <see cref="P:CefSharp.IPostDataElement.Bytes"/> property into a string
            using the specified charset (Encoding) or if unable to parse then uses
            the <see cref="P:System.Text.Encoding.Default"/>
            </summary>
            <param name="postDataElement">post data</param>
            <param name="charSet">character set</param>
            <returns>encoded string</returns>
        </member>
        <member name="M:CefSharp.PostDataExtensions.AddFile(CefSharp.IPostData,System.String)">
            <summary>
            Add a new <see cref="T:CefSharp.IPostDataElement"/> that represents the specified file
            </summary>
            <param name="postData">post data instance</param>
            <param name="fileName">file name</param>
        </member>
        <member name="M:CefSharp.PostDataExtensions.AddData(CefSharp.IPostData,System.String,System.Text.Encoding)">
            <summary>
            Add a new <see cref="T:CefSharp.IPostDataElement"/> that represents the key and value
            The data is encoded using
            </summary>
            <param name="postData">Post Data</param>
            <param name="data">Data to be encoded for the post data element</param>
            <param name="encoding">Specified Encoding. If null then <see cref="P:System.Text.Encoding.Default"/> will be used</param>
        </member>
        <member name="M:CefSharp.PostDataExtensions.AddData(CefSharp.IPostData,System.Byte[])">
            <summary>
            Add a new <see cref="T:CefSharp.IPostDataElement"/> that represents the key and value
            </summary>
            <param name="postData">Post Data</param>
            <param name="bytes">byte array that represents the post data</param>
        </member>
        <member name="T:CefSharp.ResolveCallbackResult">
            <summary>
            IP Address solution callback result
            </summary>
        </member>
        <member name="P:CefSharp.ResolveCallbackResult.Result">
            <summary>
            The result code - <see cref="F:CefSharp.CefErrorCode.None"/> on success
            </summary>
        </member>
        <member name="P:CefSharp.ResolveCallbackResult.ResolvedIpAddresses">
            <summary>
            List of resolved IP addresses or empty if the resolution failed.
            </summary>
        </member>
        <member name="M:CefSharp.ResolveCallbackResult.#ctor(CefSharp.CefErrorCode,System.Collections.Generic.IList{System.String})">
            <summary>
            ResolveCallbackResult
            </summary>
            <param name="result">result</param>
            <param name="resolvedIpAddresses">list of ip addresses</param>
        </member>
        <member name="T:CefSharp.ResourceHandler">
            <summary>
            Default implementation of <see cref="T:CefSharp.IResourceHandler"/>. This latest implementation provides some simplification, at
            a minimum you only need to override ProcessRequestAsync. See the project source on GitHub for working examples.
            used to implement a custom request handler interface. The methods of this class will always be called on the IO thread. 
            Static helper methods are included like FromStream and FromString that make dealing with fixed resources easy.
            </summary>
        </member>
        <member name="F:CefSharp.ResourceHandler.DefaultMimeType">
            <summary>
            MimeType to be used if none provided
            </summary>
        </member>
        <member name="F:CefSharp.ResourceHandler.tempBuffer">
            <summary>
            We reuse a temp buffer where possible for copying the data from the stream
            into the output stream
            </summary>
        </member>
        <member name="P:CefSharp.ResourceHandler.Charset">
            <summary>
            Gets or sets the Charset
            </summary>
        </member>
        <member name="P:CefSharp.ResourceHandler.MimeType">
            <summary>
            Gets or sets the Mime Type.
            </summary>
        </member>
        <member name="P:CefSharp.ResourceHandler.Stream">
            <summary>
            Gets or sets the resource stream.
            </summary>
        </member>
        <member name="P:CefSharp.ResourceHandler.StatusCode">
            <summary>
            Gets or sets the http status code.
            </summary>
        </member>
        <member name="P:CefSharp.ResourceHandler.StatusText">
            <summary>
            Gets or sets the status text.
            </summary>
        </member>
        <member name="P:CefSharp.ResourceHandler.ResponseLength">
            <summary>
            Gets or sets ResponseLength, when you know the size of your
            Stream (Response) set this property. This is optional.
            If you use a MemoryStream and don't provide a value
            here then it will be cast and it's size used
            </summary>
        </member>
        <member name="P:CefSharp.ResourceHandler.Headers">
            <summary>
            Gets or sets the headers.
            </summary>
            <value>The headers.</value>
        </member>
        <member name="P:CefSharp.ResourceHandler.AutoDisposeStream">
            <summary>
            When true the Stream will be Disposed when
            this instance is Disposed. The default value for
            this property is false.
            </summary>
        </member>
        <member name="P:CefSharp.ResourceHandler.ErrorCode">
            <summary>
            If the ErrorCode is set then the response will be ignored and
            the errorCode returned.
            </summary>
        </member>
        <member name="M:CefSharp.ResourceHandler.#ctor(System.String,System.IO.Stream,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.ResourceHandler"/> class.
            </summary>
            <param name="mimeType">Optional mimeType defaults to <see cref="F:CefSharp.ResourceHandler.DefaultMimeType"/></param>
            <param name="stream">Optional Stream - must be set at some point to provide a valid response</param>
            <param name="autoDisposeStream">When true the Stream will be disposed when this instance is Diposed, you will
            be unable to use this ResourceHandler after the Stream has been disposed</param>
            <param name="charset">response charset</param>
        </member>
        <member name="M:CefSharp.ResourceHandler.ProcessRequestAsync(CefSharp.IRequest,CefSharp.ICallback)">
            <summary>
            Begin processing the request. If you have the data in memory you can execute the callback
            immediately and return true. For Async processing you would typically spawn a Task to perform processing,
            then return true. When the processing is complete execute callback.Continue(); In your processing Task, simply set
            the StatusCode, StatusText, MimeType, ResponseLength and Stream
            </summary>
            <param name="request">The request object.</param>
            <param name="callback">The callback used to Continue or Cancel the request (async).</param>
            <returns>To handle the request return true and call
            <see cref="M:CefSharp.ICallback.Continue"/> once the response header information is available
            <see cref="M:CefSharp.ICallback.Continue"/> can also be called from inside this method if
            header information is available immediately).
            To cancel the request return false.</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromFilePath(System.String,System.String,System.Boolean)">
            <summary>
            Gets the resource from the file path specified. Use the Cef.GetMimeType()
            helper method to lookup the mimeType if required. Uses CefStreamResourceHandler for reading the data
            </summary>
            <param name="filePath">Location of the file.</param>
            <param name="mimeType">The mimeType if null then text/html is used.</param>
            <param name="autoDisposeStream">Dispose of the stream when finished with (you will only be able to serve one
            request).</param>
            <returns>IResourceHandler.</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromByteArray(System.Byte[],System.String,System.String)">
            <summary>
            Creates a IResourceHandler that represents a Byte[], uses CefStreamResourceHandler for reading the data
            </summary>
            <param name="data">data</param>
            <param name="mimeType">mimeType</param>
            <param name="charSet">response charset</param>
            <returns>IResourceHandler</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromString(System.String,System.String)">
            <summary>
            Gets the resource from the string.
            </summary>
            <param name="text">The text.</param>
            <param name="fileExtension">The file extension.</param>
            <returns>ResourceHandler.</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromString(System.String,System.Text.Encoding,System.Boolean,System.String)">
            <summary>
            Gets a <see cref="T:CefSharp.ResourceHandler"/> that represents a string.
            Without a Preamble, Cef will use BrowserSettings.DefaultEncoding to load the html.
            </summary>
            <param name="text">The html string</param>
            <param name="encoding">Character Encoding</param>
            <param name="includePreamble">Include encoding preamble</param>
            <param name="mimeType">Mime Type</param>
            <returns>ResourceHandler</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.ForErrorMessage(System.String,System.Net.HttpStatusCode)">
            <summary>
            Generates a ResourceHandler that has it's StatusCode set
            </summary>
            <param name="errorMessage">Body the response to be displayed</param>
            <param name="statusCode">StatusCode</param>
            <returns>ResourceHandler</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromStream(System.IO.Stream,System.String,System.Boolean,System.String)">
            <summary>
            Gets the resource from a stream.
            </summary>
            <param name="stream">A stream of the resource.</param>
            <param name="mimeType">Type of MIME.</param>
            <param name="autoDisposeStream">Dispose of the stream when finished with (you will only be able to serve one
            request).</param>
            <param name="charSet">response charset</param>
            <returns>ResourceHandler.</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.GetMemoryStream(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Gets a MemoryStream from the given string using the provided encoding
            </summary>
            <param name="text">string to be converted to a stream</param>
            <param name="encoding">encoding</param>
            <param name="includePreamble">if true a BOM will be written to the beginning of the stream</param>
            <returns>A memory stream from the given string</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.GetByteArray(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Gets a byteArray from the given string using the provided encoding
            </summary>
            <param name="text">string to be converted to a stream</param>
            <param name="encoding">encoding</param>
            <param name="includePreamble">if true a BOM will be written to the beginning of the stream</param>
            <returns>A memory stream from the given string</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.GetMimeType(System.String)">
            <summary>
            Gets the MIME type of the content.
            </summary>
            <param name="extension">The extension.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.ArgumentNullException">extension</exception>
        </member>
        <member name="M:CefSharp.ResourceHandler.Dispose">
            <summary>
            Dispose of resources here
            </summary>
        </member>
        <member name="T:CefSharp.SchemeHandler.FolderSchemeHandlerFactory">
            <summary>
            FolderSchemeHandlerFactory is a very simple scheme handler that allows you
            to map requests for urls to a folder on your file system. For example
            creating a setting the rootFolder to c:\projects\CefSharp\CefSharp.Example\Resources
            registering the scheme handler
            </summary>
        </member>
        <member name="F:CefSharp.SchemeHandler.FolderSchemeHandlerFactory.GetMimeTypeDelegate">
            <summary>
            <see cref="M:CefSharp.ResourceHandler.GetMimeType(System.String)"/> is being deprecated in favour of using
            Chromiums native mimeType lookup which is accessible using Cef.GetMimeType, this method is however
            not directly avaliable as it exists in CefSharp.Core, to get around this we set
            this static delegate with a reference to Cef.GetMimeType when Cef.Initialize is called.
            </summary>
        </member>
        <member name="M:CefSharp.SchemeHandler.FolderSchemeHandlerFactory.#ctor(System.String,System.String,System.String,System.String,System.IO.FileShare)">
            <summary>
            Initialize a new instance of FolderSchemeHandlerFactory
            </summary>
            <param name="rootFolder">Root Folder where all your files exist, requests cannot be made outside of this folder</param>
            <param name="schemeName">if not null then schemeName checking will be implemented</param>
            <param name="hostName">if not null then hostName checking will be implemented</param>
            <param name="defaultPage">default page if no page specified, defaults to index.html</param>
            <param name="resourceFileShare">file share mode used to open resources, defaults to FileShare.Read</param>
        </member>
        <member name="M:CefSharp.SchemeHandler.FolderSchemeHandlerFactory.CefSharp#ISchemeHandlerFactory#Create(CefSharp.IBrowser,CefSharp.IFrame,System.String,CefSharp.IRequest)">
            <summary>
            If the file requested is within the rootFolder then a IResourceHandler reference to the file requested will be returned
            otherwise a 404 ResourceHandler will be returned.
            </summary>
            <param name="browser">the browser window that originated the
            request or null if the request did not originate from a browser window
            (for example, if the request came from CefURLRequest).</param>
            <param name="frame">frame that originated the request
            or null if the request did not originate from a browser window
            (for example, if the request came from CefURLRequest).</param>
            <param name="schemeName">the scheme name</param>
            <param name="request">The request. (will not contain cookie data)</param>
            <returns>
            A IResourceHandler
            </returns>
        </member>
        <member name="M:CefSharp.SchemeHandler.FolderSchemeHandlerFactory.Create(CefSharp.IBrowser,CefSharp.IFrame,System.String,CefSharp.IRequest)">
            <summary>
            If the file requested is within the rootFolder then a IResourceHandler reference to the file requested will be returned
            otherwise a 404 ResourceHandler will be returned.
            </summary>
            <param name="browser">the browser window that originated the
            request or null if the request did not originate from a browser window
            (for example, if the request came from CefURLRequest).</param>
            <param name="frame">frame that originated the request
            or null if the request did not originate from a browser window
            (for example, if the request came from CefURLRequest).</param>
            <param name="schemeName">the scheme name</param>
            <param name="request">The request. (will not contain cookie data)</param>
            <returns>
            A IResourceHandler
            </returns>
        </member>
        <member name="T:CefSharp.ISchemeHandlerFactory">
            <summary>
            Class that creates <see cref="T:CefSharp.IResourceHandler"/> instances for handling scheme requests.
            The methods of this class will always be called on the CEF IO thread.
            </summary>
        </member>
        <member name="M:CefSharp.ISchemeHandlerFactory.Create(CefSharp.IBrowser,CefSharp.IFrame,System.String,CefSharp.IRequest)">
            <summary>
            Return a new <see cref="T:CefSharp.IResourceHandler"/> instance to handle the request or an empty
            reference to allow default handling of the request.
            </summary>
            <param name="browser">the browser window that originated the
            request or null if the request did not originate from a browser window
            (for example, if the request came from CefURLRequest).</param>
            <param name="frame">frame that originated the request
            or null if the request did not originate from a browser window
            (for example, if the request came from CefURLRequest).</param>
            <param name="schemeName">the scheme name</param>
            <param name="request">The request. (will not contain cookie data)</param>
            <returns>
            Return a new <see cref="T:CefSharp.IResourceHandler"/> instance to handle the request or an empty
            reference to allow default handling of the request
            </returns>
        </member>
        <member name="T:CefSharp.SslStatus">
            <summary>
            Class representing the SSL information for a navigation entry.
            </summary>
        </member>
        <member name="P:CefSharp.SslStatus.IsSecureConnection">
            <summary>
            Returns true if the status is related to a secure SSL/TLS connection.
            </summary>
        </member>
        <member name="P:CefSharp.SslStatus.CertStatus">
            <summary>
            Returns a bitmask containing any and all problems verifying the server certificate.
            If the certificate is valid then <see cref="F:CefSharp.CertStatus.None"/> is returned.
            </summary>
        </member>
        <member name="P:CefSharp.SslStatus.SslVersion">
            <summary>
            Returns the SSL version used for the SSL connection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CefSharp.SslStatus.ContentStatus">
            <summary>
            Returns a bitmask containing the page security content status.
            </summary>
        </member>
        <member name="P:CefSharp.SslStatus.X509Certificate">
            <summary>
            Returns the X.509 certificate.
            </summary>
        </member>
        <member name="M:CefSharp.SslStatus.#ctor(System.Boolean,CefSharp.CertStatus,CefSharp.SslVersion,CefSharp.SslContentStatus,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            SslStatus
            </summary>
            <param name="isSecureConnection">is secure</param>
            <param name="certStatus">cert status</param>
            <param name="sslVersion">ssl version</param>
            <param name="contentStatus">content status</param>
            <param name="certificate">certificate</param>
        </member>
        <member name="T:CefSharp.CefCustomScheme">
            <summary>
            Used in conjunction with CefSettings.RegisterScheme to register a scheme.
            You can register your own custom scheme e.g. custom:// if you are using a build in scheme
            (http/https) then you should directly register your <see cref="T:CefSharp.ISchemeHandlerFactory"/> using
            Cef.GetGlobalRequestContext().RegisterSchemeHandlerFactory - make sure the Global RequestContext has
            been initialized before doing so, you can use <see cref="M:CefSharp.IBrowserProcessHandler.OnContextInitialized"/>
            for notification of RequestContext initialization (Pass an IBrowserProcessHandler instance to Cef.Initialize)
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.SchemeName">
            <summary>
            Schema Name e.g. custom
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.DomainName">
            <summary>
            Optional Domain Name. An empty value for a standard scheme
            will cause the factory to match all domain names. The |domain_name| value
            will be ignored for non-standard schemes.
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.IsStandard">
             <summary>
             If true the scheme will be treated as a standard scheme.
             Standard schemes are subject to URL canonicalization and parsing rules as
             defined in the Common Internet Scheme Syntax RFC 1738 Section 3.1 available
             at http://www.ietf.org/rfc/rfc1738.txt
            
             In particular, the syntax for standard scheme URLs must be of the form:
             <pre>
              [scheme]://[username]:[password]@[host]:[port]/[url-path]
             </pre>
             Standard scheme URLs must have a host component that is a fully qualified
             domain name as defined in Section 3.5 of RFC 1034 [13] and Section 2.1 of
             RFC 1123. These URLs will be canonicalized to "scheme://host/path" in the
             simplest case and "scheme://username:password@host:port/path" in the most
             explicit case. For example, "scheme:host/path" and "scheme:///host/path"
             will both be canonicalized to "scheme://host/path". The origin of a
             standard scheme URL is the combination of scheme, host and port (i.e.,
             "scheme://host:port" in the most explicit case).
            
             For non-standard scheme URLs only the "scheme:" component is parsed and
             canonicalized. The remainder of the URL will be passed to the handler
             as-is. For example, "scheme:///some%20text" will remain the same.
             Non-standard scheme URLs cannot be used as a target for form submission.
             </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.IsLocal">
            <summary>
            If true the scheme will be treated as local (i.e. with the
            same security rules as those applied to "file" URLs). Normal pages cannot
            link to or access local URLs. Also, by default, local URLs can only perform
            XMLHttpRequest calls to the same URL (origin + path) that originated the
            request. To allow XMLHttpRequest calls from a local URL to other URLs with
            the same origin set the CefSettings.file_access_from_file_urls_allowed
            value to true. To allow XMLHttpRequest calls from a local URL to all
            origins set the CefSettings.universal_access_from_file_urls_allowed value
            to true.
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.IsDisplayIsolated">
            <summary>
            If true the scheme will be treated as display-isolated.
            This means that pages cannot display these URLs unless they are
            from the same scheme. For example, pages in another origin cannot create
            iframes or hyperlinks to URLs with this scheme.
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.IsSecure">
            <summary>
            If true the scheme will be treated with the same security
            rules as those applied to "https" URLs. For example, loading this scheme
            from other secure schemes will not trigger mixed content warnings.
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.IsCorsEnabled">
            <summary>
            If true the scheme can be sent CORS requests.
            This value should be true in most cases where IsStandard is true.
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.IsCSPBypassing">
            <summary>
            If true the scheme can bypass Content-Security-Policy(CSP) checks. 
            This value should be false in most cases where IsStandard is true.
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.IsFetchEnabled">
            <summary>
            If true the scheme can perform Fetch API requests.
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.SchemeHandlerFactory">
            <summary>
            Factory Class that creates <see cref="T:CefSharp.IResourceHandler"/> instances
            for handling scheme requests. Leave this null if you wish to manually register the
            scheme handler with the relevant RequestContext.
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.Options">
            <summary>
            Gets the underlying scheme options that represents
            </summary>
        </member>
        <member name="M:CefSharp.CefCustomScheme.#ctor">
            <summary>
            Creates a new CefCustomScheme.
            </summary>
        </member>
        <member name="M:CefSharp.CefCustomScheme.#ctor(System.String,CefSharp.Enums.SchemeOptions)">
            <summary>
            Creates a new CefCustomScheme.
            </summary>
            <param name="schemeName">scheme name</param>
            <param name="options">scheme options</param>
        </member>
        <member name="M:CefSharp.CefCustomScheme.ParseCommandLineArguments(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Method used internally
            </summary>
            <param name="args">command line arguments</param>
            <returns>list of scheme objects</returns>
        </member>
        <member name="T:CefSharp.ICookieVisitor">
            <summary>
            Interface to implement for visiting cookie values. 
            The methods of this class will always be called on the IO thread.
            If there are no cookies then Visit will never be called, you must implement
            Dispose to handle this scenario.
            </summary>
        </member>
        <member name="M:CefSharp.ICookieVisitor.Visit(CefSharp.Cookie,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Method that will be called once for each cookie. This method may never be called if no cookies are found. 
            </summary>
            <param name="cookie">cookie</param>
            <param name="count">is the 0-based index for the current cookie.</param>
            <param name="total">is the total number of cookies.</param>
            <param name="deleteCookie">Set to true to delete the cookie currently being visited.</param>
            <returns>Return false to stop visiting cookies otherwise true</returns>
        </member>
        <member name="T:CefSharp.INavigationEntryVisitor">
            <summary>
            Callback interface for IBrowserHost.GetNavigationEntries.
            The methods of this class will be called on the CEF UI thread. 
            </summary>
        </member>
        <member name="M:CefSharp.INavigationEntryVisitor.Visit(CefSharp.NavigationEntry,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Method that will be executed.
            </summary>
            <param name="entry">if the navigationEntry will be invalid then </param>
            <param name="current">is true if this entry is the currently loaded navigation entry</param>
            <param name="index">is the 0-based index of this entry</param>
            <param name="total">is the total number of entries.</param>
            <returns>Return true to continue visiting entries or false to stop.</returns>
        </member>
        <member name="T:CefSharp.IStringVisitor">
            <summary>
            Implement this interface to receive string values asynchronously.
            </summary>
        </member>
        <member name="M:CefSharp.IStringVisitor.Visit(System.String)">
            <summary>
             Method that will be executed.
            </summary>
            <param name="str">string (result of async execution)</param>
        </member>
        <member name="T:CefSharp.IWebPluginInfoVisitor">
            <summary>
            Interface to implement for visiting web plugin information.
            The methods of this class will be called on the CEF UI thread,
            which by default is not the same as your application UI 
            </summary>
        </member>
        <member name="M:CefSharp.IWebPluginInfoVisitor.Visit(CefSharp.WebPluginInfo,System.Int32,System.Int32)">
            <summary>
            Method that will be called once for each plugin. 
            This method may never be called if no plugins are found.
            </summary>
            <param name="plugin">plugin information</param>
            <param name="count">is the 0-based index for the current plugin</param>
            <param name="total">total is the total number of plugins.</param>
            <returns>Return false to stop visiting plugins otherwise true</returns>
        </member>
        <member name="T:CefSharp.TaskCookieVisitor">
            <summary>
            Cookie Visitor implementation that uses a TaskCompletionSource
            to return a List of cookies
            </summary>
        </member>
        <member name="M:CefSharp.TaskCookieVisitor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CefSharp.TaskCookieVisitor.Task">
            <summary>
            Task that can be awaited for the result to be retrieved async
            </summary>
        </member>
        <member name="T:CefSharp.TaskNavigationEntryVisitor">
            <summary>
            A <see cref="T:CefSharp.INavigationEntryVisitor"/> that uses a TaskCompletionSource
            to simplify things
            </summary>
        </member>
        <member name="M:CefSharp.TaskNavigationEntryVisitor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CefSharp.TaskNavigationEntryVisitor.Task">
            <summary>
            Task that can be awaited for the result to be retrieved async
            </summary>
        </member>
        <member name="T:CefSharp.TaskWebPluginInfoVisitor">
            <summary>
            Provides a visitor implementation of <see cref="T:CefSharp.IWebPluginInfoVisitor"/>
            </summary>
        </member>
        <member name="M:CefSharp.TaskWebPluginInfoVisitor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CefSharp.TaskWebPluginInfoVisitor.Task">
            <summary>
            Task that can be awaited for the result to be retrieved async
            </summary>
        </member>
        <member name="T:CefSharp.TaskStringVisitor">
            <summary>
            A <see cref="T:CefSharp.IStringVisitor"/> that uses a TaskCompletionSource
            to simplify things
            </summary>
        </member>
        <member name="M:CefSharp.TaskStringVisitor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CefSharp.TaskStringVisitor.CefSharp#IStringVisitor#Visit(System.String)">
            <summary>
             Method that will be executed.
            </summary>
            <param name="str">string (result of async execution)</param>
        </member>
        <member name="P:CefSharp.TaskStringVisitor.Task">
            <summary>
            Task that can be awaited for the result to be retrieved async
            </summary>
        </member>
        <member name="T:CefSharp.WebBrowserExtensions">
            <summary>
            WebBrowser extensions - These methods make performing common tasks easier.
            </summary>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.RegisterJsObject(CefSharp.IWebBrowser,System.String,System.Object,CefSharp.BindingOptions)">
            <summary>
            Registers a Javascript object in this specific browser instance.
            </summary>
            <param name="webBrowser">The browser to perform the registering on.</param>
            <param name="name">The name of the object. (e.g. "foo", if you want the object to be accessible as window.foo).</param>
            <param name="objectToBind">The object to be made accessible to Javascript.</param>
            <param name="options">(Optional) binding options - camelCaseJavascriptNames default to true.</param>
            <exception cref="T:System.Exception">Browser is already initialized. RegisterJsObject must be +
                                                called before the underlying CEF browser is created.</exception>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.RegisterAsyncJsObject(CefSharp.IWebBrowser,System.String,System.Object,CefSharp.BindingOptions)">
            <summary>
            <para>Asynchronously registers a Javascript object in this specific browser instance.</para>
            <para>Only methods of the object will be availabe.</para>
            </summary>
            <param name="webBrowser">The browser to perform the registering on</param>
            <param name="name">The name of the object. (e.g. "foo", if you want the object to be accessible as window.foo).</param>
            <param name="objectToBind">The object to be made accessible to Javascript.</param>
            <param name="options">binding options - camelCaseJavascriptNames default to true </param>
            <exception cref="T:System.Exception">Browser is already initialized. RegisterJsObject must be +
                                                called before the underlying CEF browser is created.</exception>
            <remarks>The registered methods can only be called in an async way, they will all return immediately and the resulting
            object will be a standard javascript Promise object which is usable to wait for completion or failure.</remarks>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.GetMainFrame(CefSharp.IWebBrowser)">
            <summary>
            Returns the main (top-level) frame for the browser window.
            </summary>
            <param name="browser">the ChromiumWebBrowser instance.</param>
            <returns> the main frame. </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.GetFocusedFrame(CefSharp.IWebBrowser)">
            <summary>
            Returns the focused frame for the browser window.
            </summary>
            <param name="browser">the ChromiumWebBrowser instance.</param>
            <returns>the focused frame.</returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Undo(CefSharp.IWebBrowser)">
            <summary>
            Execute Undo on the focused frame.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Redo(CefSharp.IWebBrowser)">
            <summary>
            Execute Redo on the focused frame.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Cut(CefSharp.IWebBrowser)">
            <summary>
            Execute Cut on the focused frame.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Copy(CefSharp.IWebBrowser)">
            <summary>
            Execute Copy on the focused frame.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Paste(CefSharp.IWebBrowser)">
            <summary>
            Execute Paste on the focused frame.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Delete(CefSharp.IWebBrowser)">
            <summary>
            Execute Delete on the focused frame.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.SelectAll(CefSharp.IWebBrowser)">
            <summary>
            Execute SelectAll on the focused frame.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.ViewSource(CefSharp.IWebBrowser)">
            <summary>
            Opens up a new program window (using the default text editor) where the source code of the currently displayed web page is
            shown.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.GetSourceAsync(CefSharp.IWebBrowser)">
            <summary>
            Retrieve the main frame's HTML source using a <see cref="T:System.Threading.Tasks.Task`1"/>.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <returns>
            <see cref="T:System.Threading.Tasks.Task`1"/> that when executed returns the main frame source as a string.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.GetTextAsync(CefSharp.IWebBrowser)">
            <summary>
            Retrieve the main frame's display text using a <see cref="T:System.Threading.Tasks.Task`1"/>.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <returns>
            <see cref="T:System.Threading.Tasks.Task`1"/> that when executed returns the main frame display text as a string.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.ExecuteScriptAsync(CefSharp.IWebBrowser,System.String,System.Object[])">
            <summary>
            Execute some Javascript code in the context of this WebBrowser. As the method name implies, the script will be executed
            asynchronously, and the method therefore returns before the script has actually been executed. This simple helper extension
            will encapsulate params in single quotes (unless int, uint, etc)
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="methodName">The javascript method name to execute.</param>
            <param name="args">the arguments to be passed as params to the method. Args are encoded using
            <see cref="P:CefSharp.WebBrowserExtensions.EncodeScriptParam"/>, you can provide a custom implementation if you require one.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.ExecuteScriptAsync(CefSharp.IWebBrowser,System.String)">
            <summary>
            Execute some Javascript code in the context of this WebBrowser. As the method name implies, the script will be executed
            asynchronously, and the method therefore returns before the script has actually been executed.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="script">The Javascript code that should be executed.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.ExecuteScriptAsyncWhenPageLoaded(CefSharp.IWebBrowser,System.String,System.Boolean)">
            <summary>
            Execute Javascript code in the context of this WebBrowser. This extension method uses the LoadingStateChanged event. As the
            method name implies, the script will be executed asynchronously, and the method therefore returns before the script has
            actually been executed.
            </summary>
            <remarks>
            Best effort is made to make sure the script is executed, there are likely a few edge cases where the script won't be executed,
            if you suspect your script isn't being executed, then try executing in the LoadingStateChanged event handler to confirm that
            it does indeed get executed.
            </remarks>
            <param name="webBrowser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="script">The Javascript code that should be executed.</param>
            <param name="oneTime">(Optional) The script will only be executed on first page load, subsequent page loads will be ignored.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.LoadUrlWithPostData(CefSharp.IWebBrowser,System.String,System.Byte[],System.String)">
            <summary>
            Creates a new instance of IRequest with the specified Url and Method = POST and then calls
            <see cref="M:CefSharp.IFrame.LoadRequest(CefSharp.IRequest)"/>.
            <see cref="M:CefSharp.IFrame.LoadRequest(CefSharp.IRequest)"/> can only be used if a renderer process already exists.
            In newer versions initially loading about:blank no longer creates a renderer process. You can load a Data Uri initially then
            call this method. https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs.
            </summary>
            <param name="browser">browser this method extends</param>
            <param name="url">url to load</param>
            <param name="postDataBytes">post data as byte array</param>
            <param name="contentType">(Optional) if set the Content-Type header will be set</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.LoadHtml(CefSharp.IWebBrowser,System.String,System.String)">
            <summary>
            Registers and loads a <see cref="T:CefSharp.ResourceHandler"/> that represents the HTML content.
            </summary>
            <remarks>
            `Cef` Native `LoadHtml` is unpredictable and only works sometimes, this method wraps the provided HTML in a
            <see cref="T:CefSharp.ResourceHandler"/> and loads the provided url using the <see cref="M:CefSharp.IWebBrowser.Load(System.String)"/> method. Defaults to using
            <see cref="P:System.Text.Encoding.UTF8"/> for character encoding The url must start with a valid schema, other uri's such as about:blank
            are invalid A valid example looks like http://test/page.
            </remarks>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="html">The HTML content.</param>
            <param name="url">The URL that will be treated as the address of the content.</param>
            <returns>
            returns false if the Url was not successfully parsed into a Uri.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.LoadHtml(CefSharp.IWebBrowser,System.String,System.Boolean)">
            <summary>
            Loads html as Data Uri See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs for details If
            base64Encode is false then html will be Uri encoded.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="html">Html to load as data uri.</param>
            <param name="base64Encode">(Optional) if true the html string will be base64 encoded using UTF8 encoding.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.LoadHtml(CefSharp.IFrame,System.String,System.Boolean)">
            <summary>
            Loads html as Data Uri See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs for details If
            base64Encode is false then html will be Uri encoded.
            </summary>
            <param name="frame">The <seealso cref="T:CefSharp.IFrame"/> instance this method extends.</param>
            <param name="html">Html to load as data uri.</param>
            <param name="base64Encode">(Optional) if true the html string will be base64 encoded using UTF8 encoding.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.LoadHtml(CefSharp.IWebBrowser,System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Registers and loads a <see cref="T:CefSharp.ResourceHandler"/> that represents the HTML content.
            </summary>
            <remarks>
            `Cef` Native `LoadHtml` is unpredictable and only works sometimes, this method wraps the provided HTML in a
            <see cref="T:CefSharp.ResourceHandler"/> and loads the provided url using the <see cref="M:CefSharp.IWebBrowser.Load(System.String)"/> method.
            </remarks>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="html">The HTML content.</param>
            <param name="url">The URL that will be treated as the address of the content.</param>
            <param name="encoding">Character Encoding.</param>
            <param name="oneTimeUse">(Optional) Whether or not the handler should be used once (true) or until manually unregistered
            (false)</param>
            <returns>
            returns false if the Url was not successfully parsed into a Uri.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.RegisterResourceHandler(CefSharp.IWebBrowser,System.String,System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Register a ResourceHandler. Can only be used when browser.ResourceHandlerFactory is an instance of
            DefaultResourceHandlerFactory.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="url">the url of the resource to unregister.</param>
            <param name="stream">Stream to be registered, the stream should not be shared with any other instances of
            DefaultResourceHandlerFactory.</param>
            <param name="mimeType">(Optional) the mimeType.</param>
            <param name="oneTimeUse">(Optional) Whether or not the handler should be used once (true) or until manually unregistered
            (false). If true the Stream will be Diposed of when finished.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.UnRegisterResourceHandler(CefSharp.IWebBrowser,System.String)">
            <summary>
            Unregister a ResourceHandler. Can only be used when browser.ResourceHandlerFactory is an instance of
            DefaultResourceHandlerFactory.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="url">the url of the resource to unregister.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Stop(CefSharp.IWebBrowser)">
            <summary>
            Stops loading the current page.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Back(CefSharp.IWebBrowser)">
            <summary>
            Navigates back, must check <see cref="P:CefSharp.IWebBrowser.CanGoBack"/> before calling this method.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Forward(CefSharp.IWebBrowser)">
            <summary>
            Navigates forward, must check <see cref="P:CefSharp.IWebBrowser.CanGoForward"/> before calling this method.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Reload(CefSharp.IWebBrowser)">
            <summary>
            Reloads the page being displayed. This method will use data from the browser's cache, if available.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Reload(CefSharp.IWebBrowser,System.Boolean)">
            <summary>
            Reloads the page being displayed, optionally ignoring the cache (which means the whole page including all .css, .js etc.
            resources will be re-fetched).
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="ignoreCache"><c>true</c> A reload is performed ignoring browser cache; <c>false</c> A reload is performed using
            files from the browser cache, if available.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.GetCookieManager(CefSharp.IWebBrowser,CefSharp.ICompletionCallback)">
            <summary>
            Gets the default cookie manager associated with the IWebBrowser.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="callback">(Optional) If not null it will be executed asnychronously on the CEF IO thread after the manager's
            storage has been initialized.</param>
            <returns>
            Cookie Manager.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.GetZoomLevelAsync(CefSharp.IBrowser)">
            <summary>
            Asynchronously gets the current Zoom Level.
            </summary>
            <param name="cefBrowser">The ChromiumWebBrowser instance this method extends.</param>
            <returns>
            An asynchronous result that yields the zoom level.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.GetZoomLevelAsync(CefSharp.IWebBrowser)">
            <summary>
            Asynchronously gets the current Zoom Level.
            </summary>
            <param name="browser">the ChromiumWebBrowser instance.</param>
            <returns>
            An asynchronous result that yields the zoom level.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.SetZoomLevel(CefSharp.IBrowser,System.Double)">
            <summary>
            Change the ZoomLevel to the specified value. Can be set to 0.0 to clear the zoom level.
            </summary>
            <remarks>
            If called on the CEF UI thread the change will be applied immediately. Otherwise, the change will be applied asynchronously
            on the CEF UI thread. The CEF UI thread is different to the WPF/WinForms UI Thread.
            </remarks>
            <param name="cefBrowser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="zoomLevel">zoom level.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.SetZoomLevel(CefSharp.IWebBrowser,System.Double)">
            <summary>
            Change the ZoomLevel to the specified value. Can be set to 0.0 to clear the zoom level.
            </summary>
            <remarks>
            If called on the CEF UI thread the change will be applied immediately. Otherwise, the change will be applied asynchronously
            on the CEF UI thread. The CEF UI thread is different to the WPF/WinForms UI Thread.
            </remarks>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="zoomLevel">zoom level.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Find(CefSharp.IBrowser,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Search for text within the current page.
            </summary>
            <param name="cefBrowser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="identifier">Can be used in can conjunction with searchText to have multiple searches running simultaneously.</param>
            <param name="searchText">search text.</param>
            <param name="forward">indicates whether to search forward or backward within the page.</param>
            <param name="matchCase">indicates whether the search should be case-sensitive.</param>
            <param name="findNext">indicates whether this is the first request or a follow-up.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Find(CefSharp.IWebBrowser,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Search for text within the current page.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="identifier">Can be used in can conjunction with searchText to have multiple searches running simultaneously.</param>
            <param name="searchText">search text.</param>
            <param name="forward">indicates whether to search forward or backward within the page.</param>
            <param name="matchCase">indicates whether the search should be case-sensitive.</param>
            <param name="findNext">indicates whether this is the first request or a follow-up.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.StopFinding(CefSharp.IBrowser,System.Boolean)">
            <summary>
            Cancel all searches that are currently going on.
            </summary>
            <param name="cefBrowser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="clearSelection">clear the current search selection.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.StopFinding(CefSharp.IWebBrowser,System.Boolean)">
            <summary>
            Cancel all searches that are currently going on.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="clearSelection">clear the current search selection.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Print(CefSharp.IBrowser)">
            <summary>
            Opens a Print Dialog which if used (can be user cancelled) will print the browser contents.
            </summary>
            <param name="cefBrowser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.PrintToPdfAsync(CefSharp.IBrowser,System.String,CefSharp.PdfPrintSettings)">
            <summary>
            Asynchronously prints the current browser contents to the PDF file specified. The caller is responsible for deleting the file
            when done.
            </summary>
            <param name="cefBrowser">The <see cref="T:CefSharp.IBrowser"/> object this method extends.</param>
            <param name="path">Output file location.</param>
            <param name="settings">(Optional) Print Settings.</param>
            <returns>
            A task that represents the asynchronous print operation. The result is true on success or false on failure to generate the
            Pdf.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.Print(CefSharp.IWebBrowser)">
            <summary>
            Opens a Print Dialog which if used (can be user cancelled) will print the browser contents.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.PrintToPdfAsync(CefSharp.IWebBrowser,System.String,CefSharp.PdfPrintSettings)">
            <summary>
            Asynchronously prints the current browser contents to the PDF file specified. The caller is responsible for deleting the file
            when done.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="path">Output file location.</param>
            <param name="settings">(Optional) Print Settings.</param>
            <returns>
            A task that represents the asynchronous print operation. The result is true on success or false on failure to generate the
            Pdf.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.ShowDevTools(CefSharp.IBrowser,CefSharp.IWindowInfo,System.Int32,System.Int32)">
            <summary>
            Open developer tools in its own window.
            </summary>
            <param name="cefBrowser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="windowInfo">(Optional) window info used for showing dev tools.</param>
            <param name="inspectElementAtX">(Optional) x coordinate (used for inspectElement)</param>
            <param name="inspectElementAtY">(Optional) y coordinate (used for inspectElement)</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.ShowDevTools(CefSharp.IWebBrowser,CefSharp.IWindowInfo,System.Int32,System.Int32)">
            <summary>
            Open developer tools in its own window.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="windowInfo">(Optional) window info used for showing dev tools.</param>
            <param name="inspectElementAtX">(Optional) x coordinate (used for inspectElement)</param>
            <param name="inspectElementAtY">(Optional) y coordinate (used for inspectElement)</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.CloseDevTools(CefSharp.IBrowser)">
            <summary>
            Explicitly close the developer tools window if one exists for this browser instance.
            </summary>
            <param name="cefBrowser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.CloseDevTools(CefSharp.IWebBrowser)">
            <summary>
            Explicitly close the developer tools window if one exists for this browser instance.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.ReplaceMisspelling(CefSharp.IBrowser,System.String)">
            <summary>
            If a misspelled word is currently selected in an editable node calling this method will replace it with the specified word.
            </summary>
            <param name="cefBrowser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="word">The new word that will replace the currently selected word.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.ReplaceMisspelling(CefSharp.IWebBrowser,System.String)">
            <summary>
            If a misspelled word is currently selected in an editable node calling this method will replace it with the specified word.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="word">The new word that will replace the currently selected word.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.AddWordToDictionary(CefSharp.IBrowser,System.String)">
            <summary>
            Add the specified word to the spelling dictionary.
            </summary>
            <param name="cefBrowser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="word">The new word that will be added to the dictionary.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.GetBrowserHost(CefSharp.IWebBrowser)">
            <summary>
            Shortcut method to get the browser IBrowserHost.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <returns>
            browserHost or null.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.AddWordToDictionary(CefSharp.IWebBrowser,System.String)">
            <summary>
            Add the specified word to the spelling dictionary.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="word">The new word that will be added to the dictionary.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.SendMouseWheelEvent(CefSharp.IWebBrowser,System.Int32,System.Int32,System.Int32,System.Int32,CefSharp.CefEventFlags)">
            <summary>
            Send a mouse wheel event to the browser.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="x">The x coordinate relative to upper-left corner of view.</param>
            <param name="y">The y coordinate relative to upper-left corner of view.</param>
            <param name="deltaX">The delta x coordinate.</param>
            <param name="deltaY">The delta y coordinate.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.SendMouseWheelEvent(CefSharp.IBrowser,System.Int32,System.Int32,System.Int32,System.Int32,CefSharp.CefEventFlags)">
            <summary>
            Send a mouse wheel event to the browser.
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="x">The x coordinate relative to upper-left corner of view.</param>
            <param name="y">The y coordinate relative to upper-left corner of view.</param>
            <param name="deltaX">The delta x coordinate.</param>
            <param name="deltaY">The delta y coordinate.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.SendMouseWheelEvent(CefSharp.IBrowserHost,System.Int32,System.Int32,System.Int32,System.Int32,CefSharp.CefEventFlags)">
            <summary>
            Send a mouse wheel event to the browser.
            </summary>
            <param name="host">browserHost.</param>
            <param name="x">The x coordinate relative to upper-left corner of view.</param>
            <param name="y">The y coordinate relative to upper-left corner of view.</param>
            <param name="deltaX">The delta x coordinate.</param>
            <param name="deltaY">The delta y coordinate.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.SendMouseClickEvent(CefSharp.IBrowserHost,System.Int32,System.Int32,CefSharp.MouseButtonType,System.Boolean,System.Int32,CefSharp.CefEventFlags)">
            <summary>
            Send a mouse click event to the browser.
            </summary>
            <param name="host">browserHost.</param>
            <param name="x">The x coordinate relative to upper-left corner of view.</param>
            <param name="y">The y coordinate relative to upper-left corner of view.</param>
            <param name="mouseButtonType">Type of the mouse button.</param>
            <param name="mouseUp">True to mouse up.</param>
            <param name="clickCount">Number of clicks.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.SendMouseMoveEvent(CefSharp.IBrowserHost,System.Int32,System.Int32,System.Boolean,CefSharp.CefEventFlags)">
            <summary>
            Send a mouse move event to the browser.
            </summary>
            <param name="host">browserHost.</param>
            <param name="x">The x coordinate relative to upper-left corner of view.</param>
            <param name="y">The y coordinate relative to upper-left corner of view.</param>
            <param name="mouseLeave">mouse leave.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.EvaluateScriptAsPromiseAsync(CefSharp.IWebBrowser,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Evaluate some Javascript code in the context of the MainFrame of the ChromiumWebBrowser. The script will be executed
            asynchronously and the method returns a Task encapsulating the response from the Javascript. The result of the script execution
            in javascript is Promise.resolve so even no promise values will be treated as a promise. Your javascript should return a value.
            The javascript will be wrapped in an Immediately Invoked Function Expression.
            When the promise either trigger then/catch this returned Task will be completed.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when one or more arguments are outside the required range.</exception>
            <param name="chromiumWebBrowser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="script">The Javascript code that should be executed.</param>
            <param name="timeout">(Optional) The timeout after which the Javascript code execution should be aborted.</param>
            <returns>
            <see cref="T:System.Threading.Tasks.Task`1"/> that can be awaited to perform the script execution.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.EvaluateScriptAsPromiseAsync(CefSharp.IFrame,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Evaluate some Javascript code in the context of the MainFrame of the ChromiumWebBrowser. The script will be executed
            asynchronously and the method returns a Task encapsulating the response from the Javascript. The result of the script execution
            in javascript is Promise.resolve so even no promise values will be treated as a promise. Your javascript should return a value.
            The javascript will be wrapped in an Immediately Invoked Function Expression.
            When the promise either trigger then/catch this returned Task will be completed.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when one or more arguments are outside the required range.</exception>
            <param name="frame">The <seealso cref="T:CefSharp.IFrame"/> instance this method extends.</param>
            <param name="script">The Javascript code that should be executed.</param>
            <param name="timeout">(Optional) The timeout after which the Javascript code execution should be aborted.</param>
            <returns>
            <see cref="T:System.Threading.Tasks.Task`1"/> that can be awaited to perform the script execution.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.EvaluateScriptAsync(CefSharp.IWebBrowser,System.String,System.Nullable{System.TimeSpan},System.Boolean)">
            <summary>
            Evaluate some Javascript code in the context of the MainFrame of the ChromiumWebBrowser. The script will be executed
            asynchronously and the method returns a Task encapsulating the response from the Javascript
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when one or more arguments are outside the required range.</exception>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="script">The Javascript code that should be executed.</param>
            <param name="timeout">(Optional) The timeout after which the Javascript code execution should be aborted.</param>
            <param name="useImmediatelyInvokedFuncExpression">When true the script is wrapped in a self executing function.
            Make sure to use a return statement in your javascript. e.g. (function () { return 42; })();
            When false don't include a return statement e.g. 42;
            </param>
            <returns>
            <see cref="T:System.Threading.Tasks.Task`1"/> that can be awaited to perform the script execution.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.EvaluateScriptAsync(CefSharp.IWebBrowser,System.String,System.Object[])">
            <summary>
            Evaluate some Javascript code in the context of this WebBrowser. The script will be executed asynchronously and the method
            returns a Task encapsulating the response from the Javascript This simple helper extension will encapsulate params in single
            quotes (unless int, uint, etc)
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="methodName">The javascript method name to execute.</param>
            <param name="args">the arguments to be passed as params to the method.</param>
            <returns>
            <see cref="T:System.Threading.Tasks.Task`1"/> that can be awaited to perform the script execution.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.EvaluateScriptAsync(CefSharp.IWebBrowser,System.Nullable{System.TimeSpan},System.String,System.Object[])">
            <summary>
            Evaluate some Javascript code in the context of this WebBrowser using the specified timeout. The script will be executed
            asynchronously and the method returns a Task encapsulating the response from the Javascript This simple helper extension will
            encapsulate params in single quotes (unless int, uint, etc).
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
            <param name="timeout">The timeout after which the Javascript code execution should be aborted.</param>
            <param name="methodName">The javascript method name to execute.</param>
            <param name="args">the arguments to be passed as params to the method. Args are encoded using
            <see cref="P:CefSharp.WebBrowserExtensions.EncodeScriptParam"/>, you can provide a custom implementation if you require a custom implementation.</param>
            <returns>
            <see cref="T:System.Threading.Tasks.Task`1"/> that can be awaited to perform the script execution.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.SetAsPopup(CefSharp.IWebBrowser)">
            <summary>
            An IWebBrowser extension method that sets the <see cref="P:CefSharp.Internals.IWebBrowserInternal.HasParent"/>
            property used when passing a ChromiumWebBrowser instance to <see cref="M:CefSharp.ILifeSpanHandler.OnBeforePopup(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.String,System.String,CefSharp.WindowOpenDisposition,System.Boolean,CefSharp.IPopupFeatures,CefSharp.IWindowInfo,CefSharp.IBrowserSettings,System.Boolean@,CefSharp.IWebBrowser@)"/>
            </summary>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="P:CefSharp.WebBrowserExtensions.EncodeScriptParam">
            <summary>
            Function used to encode the params passed to <see cref="M:CefSharp.WebBrowserExtensions.ExecuteScriptAsync(CefSharp.IWebBrowser,System.String,System.Object[])"/>,
            <see cref="M:CefSharp.WebBrowserExtensions.EvaluateScriptAsync(CefSharp.IWebBrowser,System.String,System.Object[])"/> and
            <see cref="M:CefSharp.WebBrowserExtensions.EvaluateScriptAsync(CefSharp.IWebBrowser,System.Nullable{System.TimeSpan},System.String,System.Object[])"/>
            Provide your own custom function to perform custom encoding. You can use your choice of JSON encoder here if you should so
            choose.
            </summary>
            <value>
            A function delegate that yields a string.
            </value>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.IsNumeric(System.Object)">
            <summary>
            Checks if the given object is a numerical object.
            </summary>
            <param name="value">The object to check.</param>
            <returns>
            True if numeric, otherwise false.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.GetScriptForJavascriptMethodWithArgs(System.String,System.Object[])">
            <summary>
            Transforms the methodName and arguments into valid Javascript code. Will encapsulate params in single quotes (unless int,
            uint, etc)
            </summary>
            <param name="methodName">The javascript method name to execute.</param>
            <param name="args">the arguments to be passed as params to the method.</param>
            <returns>
            The Javascript code.
            </returns>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.ThrowExceptionIfFrameNull(CefSharp.IFrame)">
            <summary>
            Throw exception if frame null.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="frame">The <seealso cref="T:CefSharp.IFrame"/> instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.ThrowExceptionIfBrowserNull(CefSharp.IBrowser)">
            <summary>
            An IBrowser extension method that throw exception if browser null.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="browser">The ChromiumWebBrowser instance this method extends.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.ThrowExceptionIfBrowserHostNull(CefSharp.IBrowserHost)">
            <summary>
            Throw exception if browser host null.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
            <param name="browserHost">The browser host.</param>
        </member>
        <member name="M:CefSharp.WebBrowserExtensions.ThrowExceptionIfCanExecuteJavascriptInMainFrameFalse">
            <summary>
            Throw exception if can execute javascript in main frame false.
            </summary>
            <exception cref="T:System.Exception">Thrown when an exception error condition occurs.</exception>
        </member>
        <member name="T:CefSharp.WebPluginInfo">
            <summary>
            Information about a specific web plugin.
            </summary>
        </member>
        <member name="P:CefSharp.WebPluginInfo.Name">
            <summary>
            Gets or sets the plugin name (i.e. Flash).
            </summary>
        </member>
        <member name="P:CefSharp.WebPluginInfo.Description">
            <summary>
            Gets or sets tge description of the plugin from the version information.
            </summary>
        </member>
        <member name="P:CefSharp.WebPluginInfo.Path">
            <summary>
            Gets or sets the plugin file path (DLL/bundle/library).
            </summary>
        </member>
        <member name="P:CefSharp.WebPluginInfo.Version">
            <summary>
            Gets or sets the version of the plugin (may be OS-specific).
            </summary>
        </member>
        <member name="M:CefSharp.WebPluginInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            WebPluginInfo
            </summary>
            <param name="name">name</param>
            <param name="description">description</param>
            <param name="path">path</param>
            <param name="version">version</param>
        </member>
        <member name="T:CefSharp.IRequest">
            <summary>
            Class used to represent a web request. The methods of this class may be called on any thread. 
            </summary>
        </member>
        <member name="P:CefSharp.IRequest.Flags">
            <summary>
            Get/Set request flags, can be used to control caching policy
            </summary>
        </member>
        <member name="P:CefSharp.IRequest.Url">
            <summary>
            Request Url
            </summary>
        </member>
        <member name="P:CefSharp.IRequest.Identifier">
            <summary>
            Returns the globally unique identifier for this request or 0 if not specified.
            Can be used by <see cref="T:CefSharp.IRequestHandler"/> implementations in the browser process to track a
            single request across multiple callbacks.
            </summary>
        </member>
        <member name="P:CefSharp.IRequest.Method">
            <summary>
            Request Method GET/POST etc
            </summary>
        </member>
        <member name="M:CefSharp.IRequest.SetReferrer(System.String,CefSharp.ReferrerPolicy)">
            <summary>
            Set the referrer URL and policy. If non-empty the referrer URL must be
            fully qualified with an HTTP or HTTPS scheme component. Any username,
            password or ref component will be removed.
            </summary>
            <param name="referrerUrl">the referrer url</param>
            <param name="policy">referrer policy</param>
        </member>
        <member name="P:CefSharp.IRequest.ReferrerUrl">
            <summary>
            Get the referrer URL.
            </summary>
        </member>
        <member name="P:CefSharp.IRequest.ResourceType">
            <summary>
            Get the resource type for this request.
            </summary>
        </member>
        <member name="P:CefSharp.IRequest.ReferrerPolicy">
            <summary>
            Get the referrer policy.
            </summary>
        </member>
        <member name="P:CefSharp.IRequest.Headers">
            <summary>
            Header Collection - If dealing with headers that only contain a single value then
            it's easier to use <see cref="M:CefSharp.IRequest.SetHeaderByName(System.String,System.String,System.Boolean)"/> or <see cref="M:CefSharp.IRequest.GetHeaderByName(System.String)"/>.
            You cannot modify the referrer using headers, use <see cref="M:CefSharp.IRequest.SetReferrer(System.String,CefSharp.ReferrerPolicy)"/>.
            NOTE: This collection is a copy of the underlying type, to make changes, take a reference to the collection,
            make your changes, then reassign the collection.
            </summary>
            <example> 
            This example shows how to modify headers, make sure you reassign the collection
            once it's been modified.
            <code>
            var headers = request.Headers;
            var userAgent = headers["User-Agent"];
            headers["User-Agent"] = userAgent + " CefSharp";
            request.Headers = headers;
            </code>
            </example>
        </member>
        <member name="P:CefSharp.IRequest.PostData">
            <summary>
            Post data
            </summary>
        </member>
        <member name="P:CefSharp.IRequest.TransitionType">
            <summary>
            Get the transition type for this request.
            Applies to requests that represent a main frame or sub-frame navigation.
            </summary>
        </member>
        <member name="P:CefSharp.IRequest.IsDisposed">
            <summary>
            Gets a value indicating whether the request has been disposed of.
            </summary>
        </member>
        <member name="P:CefSharp.IRequest.IsReadOnly">
            <summary>
            Returns true if this object is read-only.
            </summary>
        </member>
        <member name="M:CefSharp.IRequest.InitializePostData">
            <summary>
            Initialize a new instance of <see cref="T:CefSharp.IPostData"/>.
            Make sure to check if the <see cref="P:CefSharp.IRequest.PostData"/> is null
            before calling otherwise the existing data will be overridden. 
            </summary>
        </member>
        <member name="M:CefSharp.IRequest.GetHeaderByName(System.String)">
            <summary>
            Returns the first header value for name or an empty string if not found.
            Will not return the Referer value if any. Use <see cref="P:CefSharp.IRequest.Headers"/> instead if name might have multiple values.
            </summary>
            <param name="name">header name</param>
            <returns>Returns the first header value for name or an empty string if not found.</returns>
        </member>
        <member name="M:CefSharp.IRequest.SetHeaderByName(System.String,System.String,System.Boolean)">
            <summary>
            Set the header name to value. The Referer value cannot be set using this method.
            Use <see cref="M:CefSharp.IRequest.SetReferrer(System.String,CefSharp.ReferrerPolicy)"/> instead.
            </summary>
            <param name="name">header name</param>
            <param name="value">new header value</param>
            <param name="overwrite">If overwrite is true any existing values will be replaced with the new value. If overwrite is false any existing values will not be overwritten</param>
        </member>
        <member name="T:CefSharp.IWebBrowser">
            <summary>
            ChromiumWebBrowser implementations implement this interface. Can be cast to
            the concrete implementation to access UI specific features.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="E:CefSharp.IWebBrowser.ConsoleMessage">
            <summary>
            Event handler for receiving Javascript console messages being sent from web pages.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread. It is unwise to block on this thread for any length of time as your browser will become unresponsive and/or hang..
            To access UI elements you'll need to Invoke/Dispatch onto the UI Thread. 
            (The exception to this is when your running with settings.MultiThreadedMessageLoop = false, then they'll be the same thread).
            </summary>
        </member>
        <member name="E:CefSharp.IWebBrowser.StatusMessage">
            <summary>
            Event handler for changes to the status message.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread. It is unwise to block on this thread for any length of time as your browser will become unresponsive and/or hang.
            To access UI elements you'll need to Invoke/Dispatch onto the UI Thread. 
            (The exception to this is when your running with settings.MultiThreadedMessageLoop = false, then they'll be the same thread).
            </summary>
        </member>
        <member name="E:CefSharp.IWebBrowser.FrameLoadStart">
            <summary>
            Event handler that will get called when the browser begins loading a frame. Multiple frames may be loading at the same
            time. Sub-frames may start or continue loading after the main frame load has ended. This method may not be called for a
            particular frame if the load request for that frame fails. For notification of overall browser load status use
            OnLoadingStateChange instead.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread. It is unwise to block on this thread for any length of time as your browser will become unresponsive and/or hang..
            To access UI elements you'll need to Invoke/Dispatch onto the UI Thread. 
            </summary>
            <remarks>Whilst this may seem like a logical place to execute js, it's called before the DOM has been loaded, implement
            <see cref="M:CefSharp.IRenderProcessMessageHandler.OnContextCreated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame)"/> as it's called when the underlying V8Context is created
            </remarks>
        </member>
        <member name="E:CefSharp.IWebBrowser.FrameLoadEnd">
            <summary>
            Event handler that will get called when the browser is done loading a frame. Multiple frames may be loading at the same
            time. Sub-frames may start or continue loading after the main frame load has ended. This method will always be called
            for all frames irrespective of whether the request completes successfully.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread. It is unwise to block on this thread for any length of time as your browser will become unresponsive and/or hang..
            To access UI elements you'll need to Invoke/Dispatch onto the UI Thread. 
            </summary>
        </member>
        <member name="E:CefSharp.IWebBrowser.LoadError">
            <summary>
            Event handler that will get called when the resource load for a navigation fails or is canceled.
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread. It is unwise to block on this thread for any length of time as your browser will become unresponsive and/or hang..
            To access UI elements you'll need to Invoke/Dispatch onto the UI Thread. 
            </summary>
        </member>
        <member name="E:CefSharp.IWebBrowser.LoadingStateChanged">
            <summary>
            Event handler that will get called when the Loading state has changed.
            This event will be fired twice. Once when loading is initiated either programmatically or
            by user action, and once when loading is terminated due to completion, cancellation of failure. 
            It's important to note this event is fired on a CEF UI thread, which by default is not the same as your application UI
            thread. It is unwise to block on this thread for any length of time as your browser will become unresponsive and/or hang..
            To access UI elements you'll need to Invoke/Dispatch onto the UI Thread. 
            </summary>
        </member>
        <member name="E:CefSharp.IWebBrowser.JavascriptMessageReceived">
            <summary>
            Event handler that will get called when the message that originates from CefSharp.PostMessage
            </summary>
        </member>
        <member name="M:CefSharp.IWebBrowser.Load(System.String)">
            <summary>
            Loads the specified URL.
            </summary>
            <param name="url">The URL to be loaded.</param>
        </member>
        <member name="P:CefSharp.IWebBrowser.JavascriptObjectRepository">
            <summary>
            The javascript object repository, one repository per ChromiumWebBrowser instance.
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.DialogHandler">
            <summary>
            Implement <see cref="T:CefSharp.IDialogHandler" /> and assign to handle dialog events.
            </summary>
            <value>The dialog handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.RequestHandler">
            <summary>
            Implement <see cref="T:CefSharp.IRequestHandler" /> and assign to handle events related to browser requests.
            </summary>
            <value>The request handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.DisplayHandler">
            <summary>
            Implement <see cref="T:CefSharp.IDisplayHandler" /> and assign to handle events related to browser display state.
            </summary>
            <value>The display handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.LoadHandler">
            <summary>
            Implement <see cref="T:CefSharp.ILoadHandler" /> and assign to handle events related to browser load status.
            </summary>
            <value>The load handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.LifeSpanHandler">
            <summary>
            Implement <see cref="T:CefSharp.ILifeSpanHandler" /> and assign to handle events related to popups.
            </summary>
            <value>The life span handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.KeyboardHandler">
            <summary>
            Implement <see cref="T:CefSharp.IKeyboardHandler" /> and assign to handle events related to key press.
            </summary>
            <value>The keyboard handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.JsDialogHandler">
            <summary>
            Implement <see cref="T:CefSharp.IJsDialogHandler" /> and assign to handle events related to JavaScript Dialogs.
            </summary>
            <value>The js dialog handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.DragHandler">
            <summary>
            Implement <see cref="T:CefSharp.IDragHandler" /> and assign to handle events related to dragging.
            </summary>
            <value>The drag handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.DownloadHandler">
            <summary>
            Implement <see cref="T:CefSharp.IDownloadHandler" /> and assign to handle events related to downloading files.
            </summary>
            <value>The download handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.MenuHandler">
            <summary>
            Implement <see cref="T:CefSharp.IContextMenuHandler" /> and assign to handle events related to the browser context menu
            </summary>
            <value>The menu handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.FocusHandler">
            <summary>
            Implement <see cref="T:CefSharp.IFocusHandler" /> and assign to handle events related to the browser component's focus
            </summary>
            <value>The focus handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.ResourceRequestHandlerFactory">
            <summary>
            Implement <see cref="T:CefSharp.IResourceRequestHandlerFactory" /> and control the loading of resources
            </summary>
            <value>The resource handler factory.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.RenderProcessMessageHandler">
            <summary>
            Implement <see cref="T:CefSharp.IRenderProcessMessageHandler" /> and assign to handle messages from the render process.
            </summary>
            <value>The render process message handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.FindHandler">
            <summary>
            Implement <see cref="T:CefSharp.IFindHandler" /> to handle events related to find results.
            </summary>
            <value>The find handler.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.AudioHandler">
            <summary>
            Implement <see cref="T:CefSharp.IAudioHandler" /> to handle audio events.
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.IsBrowserInitialized">
            <summary>
            A flag that indicates whether the WebBrowser is initialized (true) or not (false).
            </summary>
            <value><c>true</c> if this instance is browser initialized; otherwise, <c>false</c>.</value>
            <remarks>In the WPF control there are two IsBrowserInitialized properties, the ChromiumWebBrowser.IsBrowserInitialized
            property is implemented as a Dependency Property and fully supports data binding. This property
            can only be called from the UI Thread. The explicit IWebBrowser.IsBrowserInitialized interface implementation that
            can be called from any Thread.</remarks>
        </member>
        <member name="P:CefSharp.IWebBrowser.IsDisposed">
            <summary>
            A flag that indicates whether the WebBrowser has been disposed (<see langword="true" />) or not (<see langword="false" />)
            </summary>
            <value><see langword="true" /> if this instance is disposed; otherwise, <see langword="false" /></value>
        </member>
        <member name="P:CefSharp.IWebBrowser.IsLoading">
            <summary>
            A flag that indicates whether the control is currently loading one or more web pages (true) or not (false).
            </summary>
            <value><c>true</c> if this instance is loading; otherwise, <c>false</c>.</value>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="P:CefSharp.IWebBrowser.CanGoBack">
            <summary>
            A flag that indicates whether the state of the control current supports the GoBack action (true) or not (false).
            </summary>
            <value><c>true</c> if this instance can go back; otherwise, <c>false</c>.</value>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="P:CefSharp.IWebBrowser.CanGoForward">
            <summary>
            A flag that indicates whether the state of the control currently supports the GoForward action (true) or not (false).
            </summary>
            <value><c>true</c> if this instance can go forward; otherwise, <c>false</c>.</value>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="P:CefSharp.IWebBrowser.Address">
            <summary>
            The address (URL) which the browser control is currently displaying.
            Will automatically be updated as the user navigates to another page (e.g. by clicking on a link).
            </summary>
            <value>The address.</value>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="P:CefSharp.IWebBrowser.TooltipText">
            <summary>
            The text that will be displayed as a ToolTip
            </summary>
            <value>The tooltip text.</value>
        </member>
        <member name="P:CefSharp.IWebBrowser.CanExecuteJavascriptInMainFrame">
            <summary>
            A flag that indicates if you can execute javascript in the main frame.
            Flag is set to true in IRenderProcessMessageHandler.OnContextCreated.
            and false in IRenderProcessMessageHandler.OnContextReleased
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.RequestContext">
            <summary>
            Gets the custom request context assigned to this browser instance
            If no instance was assigned this will be null and the global
            request context will have been used for this browser. 
            You can access the global request context through Cef.GetGlobalRequestContext()
            </summary>
        </member>
        <member name="M:CefSharp.IWebBrowser.Focus">
            <summary>
            Attempts to give focus to the IWebBrowser control.
            </summary>
            <returns><c>true</c> if keyboard focus and logical focus were set to this element; <c>false</c> if only logical focus
            was set to this element, or if the call to this method did not force the focus to change.</returns>
        </member>
        <member name="M:CefSharp.IWebBrowser.GetBrowser">
            <summary>
            Returns the current CEF Browser Instance
            </summary>
            <returns>browser instance or null</returns>
        </member>
        <member name="T:CefSharp.AssemblyInfo">
            <exclude />
        </member>
        <member name="T:CefSharp.Web.HtmlString">
            <summary>
            Represents an raw Html (not already encoded)
            When passed to a ChromiumWebBrowser constructor, the html will be converted to a Data Uri
            and loaded in the browser.
            See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs for details
            </summary>
        </member>
        <member name="M:CefSharp.Web.HtmlString.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the HtmlString class.
            </summary>
            <param name="html">raw html string (not already encoded)</param>
            <param name="base64Encode">if true the html string will be base64 encoded using UTF8 encoding.</param>
            <param name="charSet">if not null then charset will specified. e.g. UTF-8</param>
        </member>
        <member name="M:CefSharp.Web.HtmlString.ToDataUriString">
            <summary>
            The html as a Data Uri encoded string
            </summary>
            <returns>data Uri string suitable for passing to <see cref="M:CefSharp.IWebBrowser.Load(System.String)"/></returns>
        </member>
        <member name="M:CefSharp.Web.HtmlString.op_Explicit(System.String)~CefSharp.Web.HtmlString">
            <summary>
            HtmlString that will be base64 encoded
            </summary>
            <param name="html">raw html (not already encoded)</param>
        </member>
        <member name="M:CefSharp.Web.HtmlString.FromFile(System.String)">
            <summary>
            Creates a HtmlString for the given file name
            Uses <see cref="M:System.IO.File.ReadAllText(System.String,System.Text.Encoding)"/> to read the
            text using <see cref="P:System.Text.Encoding.UTF8"/> encoding.
            </summary>
            <param name="fileName">file name</param>
            <returns>HtmlString</returns>
        </member>
        <member name="T:CefSharp.Web.JsonString">
            <summary>
            Represents a JsonString that is converted to a V8 Object
            Used as a return type of bound methods
            </summary>
        </member>
        <member name="M:CefSharp.Web.JsonString.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="json">JSON string</param>
        </member>
        <member name="M:CefSharp.Web.JsonString.FromObject(System.Object,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
            <summary>
            Create a JsonString from the specfied object using the build in <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/>
            </summary>
            <param name="obj">object to seriaize</param>
            <param name="settings">optional settings</param>
            <returns>If <paramref name="obj"/> is null then return nulls otherwise a JsonString.</returns>
        </member>
    </members>
</doc>
