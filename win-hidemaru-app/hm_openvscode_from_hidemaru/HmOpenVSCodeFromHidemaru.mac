/*
 * HmOpenVSCodeFromHidemaru v 1.0.0.0
 * Copyright (C) 2021 Akitsugu Komiyama
 * under the MIT License
 */ 

#HMNET = loaddll( hidemarudir + @"\hm.NET.dll" );

if ( !#HMNET ) { message "hm.NET.dllが読み込めない"; }

#dll_result = dllfuncw( #HMNET, "CallMethod", currentmacrodirectory + @"\HmOpenVSCodeFromHidemaru.dll", "HmOpenVSCodeFromHidemaru.HmOpenVSCodeFromHidemaru", "try_parse_git_dir");

// 「$GIT_DIRECTORY」にはファイルがリポジトリに属している場合に、リポジトリのディレクトリが渡ってくる。
// リポジトリに属していない場合には、空白が返ってくる。
// 「#LINENO_UNICODE」「#COLUMN_UNICODE」には 「Unicodeベースでカウント」した場合のカーソルの「行」と「カラム」が渡ってくる。

// リポジトリに帰属していないようであれば、このファイルがあるディレクトリをオープン対象とする。
if ($GIT_DIRECTORY == "") {
    $GIT_DIRECTORY = directory2;
}

// Visual Source Codeが存在するか軽くチェック(不完全ではあるがまぁザックリと)
runex "where code.cmd"
    , 1     //sync   0:async, 1:sync
    , 0, "" //stdin  0:none, 1:auto, 2:<file, 3:(reserved),
            //       4:current content, 5:selection
    , 0, "" //stdout 0:none, 1:auto, 2:>file 3:>>file, 4:new window,
            //       5:insert, 6:replace, 7:>output pane, 8:>>output pane
    , 0, "" //stderr 0:none, 1:auto or >>stdout, 2-8:same as stdout's param
    , 0, "" //folder 0:none, 1:current, 2:specify 3:(reserved), 4:exe's
    , 2     //show   0:auto, 1:show, 2:hide, 3-13:ShellExecute()'s SW_*
    , 0     //draw   0:draw, 1:no draw when stdout redirected
    , 0     //encode 0:ansi, 2:utf-16, 6:utf-8
    , 0     //extended flags
; 

if (getresultex(9) != 0) {
    $ERROR_MSG = "vscodeが発見できませんでした。\ncode.cmdのファイルがあるディレクトリにパスを通してください。\n" + $ERROR_MSG;
    endmacro;
}

// 対象のディレクトリを作業場として、対象のファイルをunicodeベース換算でのlinenoとcolumn
runex sprintf(@"""%s"" -n -g ""%s"" ""%s:%d:%d"" ", @"code.cmd", $GIT_DIRECTORY, filename2, #LINENO_UNICODE, #COLUMN_UNICODE+1)
    , 0     //sync   0:async, 1:sync
    , 0, "" //stdin  0:none, 1:auto, 2:<file, 3:(reserved),
            //       4:current content, 5:selection
    , 0, "" //stdout 0:none, 1:auto, 2:>file 3:>>file, 4:new window,
            //       5:insert, 6:replace, 7:>output pane, 8:>>output pane
    , 0, "" //stderr 0:none, 1:auto or >>stdout, 2-8:same as stdout's param
    , 0, "" //folder 0:none, 1:current, 2:specify 3:(reserved), 4:exe's
    , 2     //show   0:auto, 1:show, 2:hide, 3-13:ShellExecute()'s SW_*
    , 0     //draw   0:draw, 1:no draw when stdout redirected
    , 0     //encode 0:ansi, 2:utf-16, 6:utf-8
    , 0     //extended flags
; 

if ($ERROR_MSG != "") {
    #OUTPUT = loaddll("HmOutputPane.dll");
    #ret=dllfunc(#OUTPUT, "Output",hidemaruhandle(0), $ERROR_MSG);
}
